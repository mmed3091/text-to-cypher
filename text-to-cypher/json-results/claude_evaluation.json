[
  {
    "url": "https://en.wikipedia.org/wiki/List_of_fictional_robots_and_androids",
    "queries": "Based on the given text, we can create the following CYPHER queries to create a knowledge graph of the relationships between entities:\n\n```cypher\n// Create nodes for the different entities\nCREATE (:Entity {name: \"Robots and androids\"})\nCREATE (:Entity {name: \"Literature\"})\nCREATE (:Entity {name: \"Television\"})\nCREATE (:Entity {name: \"Cinema\"})\nCREATE (:Entity {name: \"Karel \u010capek\"})\nCREATE (:Entity {name: \"R.U.R. (Rossum's Universal Robots)\"})\n\n// Create relationships between the entities\nMATCH (robots:Entity {name: \"Robots and androids\"})\nMATCH (literature:Entity {name: \"Literature\"})\nMATCH (television:Entity {name: \"Television\"})\nMATCH (cinema:Entity {name: \"Cinema\"})\nMATCH (capek:Entity {name: \"Karel \u010capek\"})\nMATCH (rur:Entity {name: \"R.U.R. (Rossum's Universal Robots)\"})\n\nCREATE (robots)-[:DEPICTED_IN]->(literature)\nCREATE (robots)-[:DEPICTED_IN]->(television)\nCREATE (robots)-[:DEPICTED_IN]->(cinema)\nCREATE (capek)-[:CREATED]->(rur)\nCREATE (rur)-[:COINED_THE_TERM]->(robots)\n\n// Add additional properties to the nodes and relationships\nSET robots.description = \"This list of fictional robots and androids is chronological, and categorised by medium.\"\nSET literature.description = \"Robots and androids have frequently been depicted or described in works of fiction.\"\nSET television.description = \"Robots and androids have frequently been depicted or described in works of fiction.\"\nSET cinema.description = \"Robots and androids have frequently been depicted or described in works of fiction.\"\nSET capek.description = \"Karel \u010capek, the author who coined the term 'robot'.\"\nSET rur.description = \"R.U.R. (Rossum's Universal Robots), the play where the term 'robot' was first used.\"\n\nRETURN *\n```\n\nThis query creates the following nodes and relationships:\n\n1. Nodes:\n   - \"Robots and androids\"\n   - \"Literature\"\n   - \"Television\"\n   - \"Cinema\"\n   - \"Karel \u010capek\"\n   - \"R.U.R. (Rossum's Universal Robots)\"\n\n2. Relationships:\n   - \"Robots and androids\" is depicted in \"Literature\", \"Television\", and \"Cinema\"\n   - \"Karel \u010capek\" created \"R.U.R. (Rossum's Universal Robots)\"\n   - \"R.U.R. (Rossum's Universal Robots)\" coined the term \"Robots and androids\"\n\nThe query also adds descriptive properties to each node and relationship to provide additional context.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 6,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 5,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 5,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 5.289865016937256
  },
  {
    "url": "https://en.wikipedia.org/wiki/Abacus",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the given text:\n\n```\n// Create nodes for entities\nCREATE (Abacus:Entity {name: \"Abacus\"})\nCREATE (CountingFrame:Entity {name: \"Counting Frame\"})\nCREATE (SumerianAbacus:Entity {name: \"Sumerian Abacus\"})\nCREATE (BabylonianAbacus:Entity {name: \"Babylonian Abacus\"})\nCREATE (EgyptianAbacus:Entity {name: \"Egyptian Abacus\"})\nCREATE (PersinaAbacus:Entity {name: \"Persian Abacus\"})\nCREATE (GreekAbacus:Entity {name: \"Greek Abacus\"})\nCREATE (RomanAbacus:Entity {name: \"Roman Abacus\"})\nCREATE (ChineseAbacus:Entity {name: \"Chinese Abacus\"})\nCREATE (SuanPan:Entity {name: \"Suanpan\"})\nCREATE (JapaneseAbacus:Entity {name: \"Japanese Abacus\"})\nCREATE (SoroBan:Entity {name: \"Soroban\"})\nCREATE (KoreanAbacus:Entity {name: \"Korean Abacus\"})\nCREATE (JuPan:Entity {name: \"Jupan\"})\nCREATE (SupAn:Entity {name: \"Supan\"})\nCREATE (JuSan:Entity {name: \"Jusan\"})\nCREATE (AztecAbacus:Entity {name: \"Aztec Abacus\"})\nCREATE (Nepohualtzintzin:Entity {name: \"Nepohualtzintzin\"})\nCREATE (IncanAbacus:Entity {name: \"Incan Abacus\"})\nCREATE (Yupana:Entity {name: \"Yupana\"})\nCREATE (RussianAbacus:Entity {name: \"Russian Abacus\"})\nCREATE (Schoty:Entity {name: \"Schoty\"})\n\n// Create relationships between entities\nMATCH (a:Entity {name: \"Abacus\"}), (b:Entity {name: \"Counting Frame\"})\nCREATE (a)-[:IS_ALSO_CALLED]->(b)\n\nMATCH (a:Entity {name: \"Sumerian Abacus\"})\nCREATE (Abacus)-[:APPEARED_IN]->(a)\n\nMATCH (a:Entity {name: \"Babylonian Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\n\nMATCH (a:Entity {name: \"Egyptian Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\n\nMATCH (a:Entity {name: \"Persian Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\n\nMATCH (a:Entity {name: \"Greek Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\n\nMATCH (a:Entity {name: \"Roman Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\n\nMATCH (a:Entity {name: \"Chinese Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(SuanPan)\n\nMATCH (a:Entity {name: \"Japanese Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(SoroBan)\n\nMATCH (a:Entity {name: \"Korean Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(JuPan)\nCREATE (a)-[:IS_ALSO_CALLED]->(SupAn)\nCREATE (a)-[:IS_ALSO_CALLED]->(JuSan)\n\nMATCH (a:Entity {name: \"Aztec Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(Nepohualtzintzin)\n\nMATCH (a:Entity {name: \"Incan Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(Yupana)\n\nMATCH (a:Entity {name: \"Russian Abacus\"})\nCREATE (Abacus)-[:USED_IN]->(a)\nCREATE (a)-[:IS_ALSO_CALLED]->(Schoty)\n```\n\nThis set of CYPHER queries creates nodes for the various abacus-related entities mentioned in the text, and establishes relationships between them. The `CREATE` statements define the nodes, and the `MATCH` and `CREATE` statements define the relationships between them.\n\nThe relationships established include:\n- `IS_ALSO_CALLED`: Indicates that an entity is also known by another name.\n- `APPEARED_IN`: Indicates that an abacus appeared in a particular region or culture.\n- `USED_IN`: Indicates that an abacus was used in a particular region or culture.\n\nThis knowledge graph can be used to explore the historical development and spread of abacus technology across different civilizations and regions.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 22,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 23,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 23,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 10.53087306022644
  },
  {
    "url": "https://en.wikipedia.org/wiki/Fulgurite",
    "queries": "Here are some CYPHER queries to create a knowledge graph based on the given text:\n\n```cypher\n// Create nodes for entities\nCREATE (Fulgurites:Entity {name: \"Fulgurites\"})\nCREATE (Lightning:Entity {name: \"Lightning\"})\nCREATE (Lechatelierite:Entity {name: \"Lechatelierite\"})\nCREATE (SiO2:Entity {name: \"SiO2\"})\nCREATE (Sediments:Entity {name: \"Sediments\"})\nCREATE (MineralGrains:Entity {name: \"Mineral Grains\"})\nCREATE (Polymorphism:Entity {name: \"Polymorphism\"})\nCREATE (ShockedQuartz:Entity {name: \"Shocked Quartz\"})\nCREATE (Silicides:Entity {name: \"Silicides\"})\nCREATE (Fullerenes:Entity {name: \"Fullerenes\"})\nCREATE (Schreibersite:Entity {name: \"Schreibersite\"})\nCREATE (TitaniumPhosphide:Entity {name: \"Titanium(III) Phosphide\"})\nCREATE (Avicenna:Entity {name: \"Avicenna\"})\nCREATE (AlBiruni:Entity {name: \"Al-Biruni\"})\nCREATE (LeonhardDavidHermann:Entity {name: \"Leonhard David Hermann\"})\nCREATE (CharlesDarwin:Entity {name: \"Charles Darwin\"})\nCREATE (HoraceBenedictDeSaussure:Entity {name: \"Horace B\u00e9n\u00e9dict de Saussure\"})\nCREATE (AlexanderVonHumboldt:Entity {name: \"Alexander von Humboldt\"})\nCREATE (Hentzen:Entity {name: \"Hentzen\"})\nCREATE (JohannKarlWilhelmVoigt:Entity {name: \"Johann Karl Wilhelm Voigt\"})\nCREATE (KarlGustavFiedler:Entity {name: \"Karl Gustav Fiedler\"})\n\n// Create relationships between entities\nCREATE (Fulgurites)-[:FORMED_BY]->(Lightning)\nCREATE (Fulgurites)-[:CONTAINS]->(Lechatelierite)\nCREATE (Fulgurites)-[:CONTAINS]->(SiO2)\nCREATE (Fulgurites)-[:CONTAINS]->(Sediments)\nCREATE (Fulgurites)-[:CONTAINS]->(MineralGrains)\nCREATE (Fulgurites)-[:EXHIBITS]->(Polymorphism)\nCREATE (Fulgurites)-[:EXHIBITS]->(ShockedQuartz)\nCREATE (Fulgurites)-[:CONTAINS]->(Silicides)\nCREATE (Fulgurites)-[:CONTAINS]->(Fullerenes)\nCREATE (Fulgurites)-[:CONTAINS]->(Schreibersite)\nCREATE (Fulgurites)-[:CONTAINS]->(TitaniumPhosphide)\nCREATE (Avicenna)-[:MENTIONED]->(Fulgurites)\nCREATE (AlBiruni)-[:MENTIONED]->(Fulgurites)\nCREATE (LeonhardDavidHermann)-[:MISINTERPRETED]->(Fulgurites)\nCREATE (CharlesDarwin)-[:OBSERVED]->(Fulgurites)\nCREATE (HoraceBenedictDeSaussure)-[:OBSERVED]->(Fulgurites)\nCREATE (AlexanderVonHumboldt)-[:OBSERVED]->(Fulgurites)\nCREATE (Hentzen)-[:IDENTIFIED]->(Formation_Of_Fulgurites)\nCREATE (JohannKarlWilhelmVoigt)-[:IDENTIFIED]->(Formation_Of_Fulgurites)\nCREATE (KarlGustavFiedler)-[:DOCUMENTED]->(Fulgurites)\n```\n\nThis query creates nodes for the various entities mentioned in the text, such as Fulgurites, Lightning, Lechatelierite, and others. It then creates relationships between these entities based on the information provided in the text. For example, it creates a \"FORMED_BY\" relationship between Fulgurites and Lightning, indicating that Fulgurites are formed by lightning strikes.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 20,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 19,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 19,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 7.890785217285156
  },
  {
    "url": "https://en.wikipedia.org/wiki/Albert_A._Michelson",
    "queries": "Here are the CYPHER queries to create a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n// Create nodes for persons\nCREATE\n  (albert_michelson:Person {name: \"Albert Abraham Michelson\", nationality: \"German-American\", occupation: \"Physicist\"}),\n  (samuel_michelson:Person {name: \"Samuel Michelson\", relation: \"father\"}),\n  (rozalia_michelson:Person {name: \"Rozalia Przy\u0142ubska\", relation: \"mother\"}),\n  (miriam_michelson:Person {name: \"Miriam Michelson\", relation: \"sister\"}),\n  (harriet_levy:Person {name: \"Harriet Lane Levy\", relation: \"aunt\"}),\n  (ulysses_grant:Person {name: \"Ulysses S. Grant\", occupation: \"President\"}),\n  (edward_morley:Person {name: \"Edward Morley\", relation: \"colleague\"}),\n  (dayton_miller:Person {name: \"Dayton Miller\", relation: \"physicist\"}),\n  (hendrik_lorentz:Person {name: \"Hendrik Lorentz\", relation: \"physicist\"}),\n  (robert_shankland:Person {name: \"Robert Shankland\", relation: \"physicist\"}),\n  (francis_pease:Person {name: \"Francis G. Pease\", relation: \"colleague\"}),\n  (fred_pearson:Person {name: \"Fred Pearson\", relation: \"colleague\"}),\n  (arnold_sommerfeld:Person {name: \"Arnold Sommerfeld\", relation: \"physicist\"}),\n  (margaret_hemingway:Person {name: \"Margaret Hemingway\", relation: \"wife\"}),\n  (edna_stanton:Person {name: \"Edna Stanton\", relation: \"wife\"}),\n  (peter_michelson:Person {name: \"Peter Michelson\", relation: \"great-nephew\"});\n\n// Create nodes for organizations\nCREATE\n  (us_naval_academy:Organization {name: \"U.S. Naval Academy\"}),\n  (case_school:Organization {name: \"Case School of Applied Science\"}),\n  (university_of_chicago:Organization {name: \"University of Chicago\"}),\n  (clark_university:Organization {name: \"Clark University\"}),\n  (royal_society:Organization {name: \"Royal Society\"}),\n  (national_academy_of_sciences:Organization {name: \"National Academy of Sciences\"}),\n  (american_physical_society:Organization {name: \"American Physical Society\"}),\n  (aaas:Organization {name: \"American Association for the Advancement of Science\"}),\n  (computer_measurement_group:Organization {name: \"Computer Measurement Group\"}),\n  (navy_league:Organization {name: \"Navy League of the United States\"}),\n  (us_naval_academy_division:Organization {name: \"Division of Mathematics and Science at the U.S. Naval Academy\"}),\n  (nautical_almanac_office:Organization {name: \"Nautical Almanac Office\"}),\n  (university_of_berlin:Organization {name: \"University of Berlin\"}),\n  (university_of_heidelberg:Organization {name: \"University of Heidelberg\"}),\n  (college_de_france:Organization {name: \"Coll\u00e8ge de France\"}),\n  (ecole_polytechnique:Organization {name: \"\u00c9cole Polytechnique\"}),\n  (western_reserve_university:Organization {name: \"Western Reserve University\"});\n\n// Create relationships between entities\nMATCH\n  (albert_michelson:Person),\n  (samuel_michelson:Person),\n  (rozalia_michelson:Person)\nCREATE\n  (albert_michelson)-[:CHILD_OF]->(samuel_michelson),\n  (albert_michelson)-[:CHILD_OF]->(rozalia_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (miriam_michelson:Person)\nCREATE\n  (albert_michelson)-[:SIBLING_OF]->(miriam_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (harriet_levy:Person)\nCREATE\n  (albert_michelson)-[:NEPHEW_OF]->(harriet_levy);\n\nMATCH\n  (albert_michelson:Person),\n  (ulysses_grant:Person)\nCREATE\n  (ulysses_grant)-[:AWARDED]->(albert_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (edward_morley:Person)\nCREATE\n  (albert_michelson)-[:COLLABORATED_WITH]->(edward_morley);\n\nMATCH\n  (albert_michelson:Person),\n  (dayton_miller:Person),\n  (hendrik_lorentz:Person),\n  (robert_shankland:Person)\nCREATE\n  (albert_michelson)-[:COLLABORATED_WITH]->(dayton_miller),\n  (albert_michelson)-[:COLLABORATED_WITH]->(hendrik_lorentz),\n  (albert_michelson)-[:COLLABORATED_WITH]->(robert_shankland);\n\nMATCH\n  (albert_michelson:Person),\n  (francis_pease:Person),\n  (fred_pearson:Person)\nCREATE\n  (albert_michelson)-[:COLLABORATED_WITH]->(francis_pease),\n  (albert_michelson)-[:COLLABORATED_WITH]->(fred_pearson);\n\nMATCH\n  (albert_michelson:Person),\n  (arnold_sommerfeld:Person)\nCREATE\n  (albert_michelson)-[:INFLUENCED]->(arnold_sommerfeld);\n\nMATCH\n  (albert_michelson:Person),\n  (margaret_hemingway:Person)\nCREATE\n  (albert_michelson)-[:MARRIED]->(margaret_hemingway);\n\nMATCH\n  (albert_michelson:Person),\n  (edna_stanton:Person)\nCREATE\n  (albert_michelson)-[:MARRIED]->(edna_stanton);\n\nMATCH\n  (albert_michelson:Person),\n  (peter_michelson:Person)\nCREATE\n  (albert_michelson)-[:GREAT_UNCLE_OF]->(peter_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (us_naval_academy:Organization)\nCREATE\n  (albert_michelson)-[:STUDIED_AT]->(us_naval_academy);\n\nMATCH\n  (albert_michelson:Person),\n  (case_school:Organization)\nCREATE\n  (albert_michelson)-[:WORKED_AT]->(case_school);\n\nMATCH\n  (albert_michelson:Person),\n  (university_of_chicago:Organization)\nCREATE\n  (albert_michelson)-[:WORKED_AT]->(university_of_chicago);\n\nMATCH\n  (albert_michelson:Person),\n  (clark_university:Organization)\nCREATE\n  (albert_michelson)-[:WORKED_AT]->(clark_university);\n\nMATCH\n  (albert_michelson:Person),\n  (royal_society:Organization)\nCREATE\n  (albert_michelson)-[:MEMBER_OF]->(royal_society);\n\nMATCH\n  (albert_michelson:Person),\n  (national_academy_of_sciences:Organization)\nCREATE\n  (albert_michelson)-[:MEMBER_OF]->(national_academy_of_sciences);\n\nMATCH\n  (albert_michelson:Person),\n  (american_physical_society:Organization)\nCREATE\n  (albert_michelson)-[:MEMBER_OF]->(american_physical_society);\n\nMATCH\n  (albert_michelson:Person),\n  (aaas:Organization)\nCREATE\n  (albert_michelson)-[:MEMBER_OF]->(aaas);\n\nMATCH\n  (albert_michelson:Person),\n  (computer_measurement_group:Organization)\nCREATE\n  (computer_measurement_group)-[:GIVES_AWARD_TO]->(albert_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (navy_league:Organization)\nCREATE\n  (navy_league)-[:GIVES_AWARD_TO]->(albert_michelson);\n\nMATCH\n  (albert_michelson:Person),\n  (us_naval_academy_division:Organization",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 32,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 22,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 22,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 13.14526891708374
  },
  {
    "url": "https://en.wikipedia.org/wiki/History_of_the_bicycle",
    "queries": "Here are the CYPHER queries for creating a knowledge graph based on the given text:\n\n```\n// Create nodes for entities\nCREATE (v:Vehicle {type: \"Bicycle\", description: \"Vehicles that have two wheels and require balancing by the rider\"})\nCREATE (d:Person {name: \"Gian Giacomo Caprotti\"})\nCREATE (l:Person {name: \"Hans-Erhard Lessing\"})\nCREATE (a:Person {name: \"Augusto Marinoni\"})\nCREATE (c:Person {name: \"Comte de Sivrac\"})\nCREATE (l2:Person {name: \"Louis Baudry de Saunier\"})\nCREATE (h:Person {name: \"Hiraishi Kuheiji Tokimitsu\"})\nCREATE (k:Person {name: \"Karl von Drais Sauerbronn\"})\nCREATE (d2:Person {name: \"Denis Johnson\"})\nCREATE (k2:Person {name: \"Kirkpatrick Macmillan\"})\nCREATE (g:Person {name: \"Gavin Dalzell\"})\nCREATE (t:Person {name: \"Thomas McCall\"})\nCREATE (p:Person {name: \"Philipp Moritz Fischer\"})\nCREATE (e:Person {name: \"Ernest Michaux\"})\nCREATE (p2:Person {name: \"Pierre Lallement\"})\nCREATE (a2:Person {name: \"Alexandre Lefebvre\"})\nCREATE (p3:Person {name: \"Pierre Michaux\"})\nCREATE (o:Person {name: \"Olivier brothers\"})\nCREATE (g2:Person {name: \"Georges de la Bouglise\"})\nCREATE (g3:Person {name: \"Gabert\"})\nCREATE (w:Person {name: \"William Van Anden\"})\nCREATE (e2:Person {name: \"Eug\u00e8ne Meyer\"})\nCREATE (j:Person {name: \"James Starley\"})\nCREATE (f:Person {name: \"Frank Weston\"})\nCREATE (a3:Person {name: \"Albert Augustus Pope\"})\nCREATE (g4:Person {name: \"G.W. Pressey\"})\n\n// Create relationships\nCREATE (v)-[:CLAIMED_INVENTED]->(d)\nCREATE (d)-[:CLAIMED_INVENTION_FRAUDULENT]->(l)\nCREATE (d)-[:CLAIMED_INVENTION_AUTHENTIC]->(a)\nCREATE (c)-[:CLAIMED_INVENTED]->(v)\nCREATE (l2)-[:CLAIMED_INVENTION_NEVER_EXISTED]->(c)\nCREATE (h)-[:DESCRIBED_PEDAL_POWERED_TRICYCLE]->(v)\nCREATE (k)-[:INVENTED]->(v)\nCREATE (d2)-[:IMPROVED]->(v)\nCREATE (k2)-[:CLAIMED_INVENTED]->(v)\nCREATE (g)-[:COPIED_DESIGN]->(v)\nCREATE (t)-[:FIRST_PRODUCED_TREADLE_BICYCLES]->(v)\nCREATE (p)-[:INVENTED_PEDAL_CRANK]->(v)\nCREATE (e)-[:CLAIMED_INVENTED]->(v)\nCREATE (p2)-[:CLAIMED_INVENTED]->(v)\nCREATE (a2)-[:CLAIMED_INVENTED]->(v)\nCREATE (p3)-[:PRODUCED_EARLY_BICYCLES]->(v)\nCREATE (o)-[:PARTNERED_WITH]->(p3)\nCREATE (g2)-[:PARTNERED_WITH]->(o)\nCREATE (g3)-[:WORKED_WITH]->(o)\nCREATE (w)-[:INVENTED_FREEWHEEL]->(v)\nCREATE (e2)-[:INVENTED_WIRE_SPOKE_WHEEL]->(v)\nCREATE (j)-[:IMPROVED]->(v)\nCREATE (f)-[:IMPORTED_BICYCLES]->(v)\nCREATE (a3)-[:PRODUCED_BICYCLES]->(v)\nCREATE (g4)-[:INVENTED_SMALL_FRONT_WHEEL_BICYCLE]->(v)\n```\n\nThis query creates nodes for the various entities (vehicles, people) mentioned in the text and establishes relationships between them based on the claims of invention, improvement, partnership, etc. described in the passage.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 25,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 24,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 24,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 8.604665994644165
  },
  {
    "url": "https://en.wikipedia.org/wiki/Battle_of_the_Boyne",
    "queries": "Here are the CYPHER queries to create a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```cypher\n// Create nodes for entities\nCREATE (BattleOfTheBoyne:Event {name: \"The Battle of the Boyne\"})\nCREATE (JamesII:Person {name: \"King James II\"})\nCREATE (WilliamIII:Person {name: \"King William III\"})\nCREATE (MaryII:Person {name: \"Queen Mary II\"})\nCREATE (DukeOfSchomberg:Person {name: \"Duke of Schomberg\"})\nCREATE (GeorgeWalker:Person {name: \"George Walker\"})\nCREATE (RichardTalbot:Person {name: \"Richard Talbot, 1st Earl of Tyrconnell\"})\nCREATE (SirJamesFitz-EdmondCotter:Person {name: \"Sir James Fitz-Edmond Cotter\"})\nCREATE (LauZun:Person {name: \"Lauzun\"})\nCREATE (ErnstvonTettau:Person {name: \"General Ernst von Tettau\"})\nCREATE (GodertdeGinkel:Person {name: \"Godert de Ginkel\"})\nCREATE (JamesFitzJames:Person {name: \"James FitzJames, 1st Duke of Berwick\"})\nCREATE (ConstantijnHuygens:Person {name: \"Constantijn Huygens Jr.\"})\nCREATE (PatrickSarsfield:Person {name: \"Patrick Sarsfield\"})\nCREATE (NeilO'Neill:Person {name: \"Neil O'Neill\"})\nCREATE (BonnieDundee:Person {name: \"Bonnie Dundee\"})\nCREATE (DublinCity:Place {name: \"Dublin\"})\nCREATE (LimerickCity:Place {name: \"Limerick\"})\nCREATE (Drogheda:Place {name: \"Drogheda\"})\nCREATE (Enniskillen:Place {name: \"Enniskillen\"})\nCREATE (Duleek:Place {name: \"Duleek\"})\nCREATE (Roughgrange:Place {name: \"Roughgrange\"})\nCREATE (Oldbridge:Place {name: \"Oldbridge\"})\nCREATE (Duncannon:Place {name: \"Duncannon\"})\nCREATE (Aughrim:Place {name: \"Aughrim\"})\nCREATE (Carrickfergus:Place {name: \"Carrickfergus\"})\nCREATE (Loughbrickland:Place {name: \"Loughbrickland\"})\nCREATE (CountyLouth:Place {name: \"County Louth\"})\nCREATE (CountyFermanagh:Place {name: \"County Fermanagh\"})\nCREATE (CountyAntrim:Place {name: \"County Antrim\"})\nCREATE (CountyKerry:Place {name: \"County Kerry\"})\nCREATE (CountyLimerick:Place {name: \"County Limerick\"})\nCREATE (CountyCork:Place {name: \"County Cork\"})\nCREATE (CountyTipperary:Place {name: \"County Tipperary\"})\nCREATE (Protestants:Group {name: \"Protestants\"})\nCREATE (Catholics:Group {name: \"Catholics\"})\nCREATE (Jacobites:Group {name: \"Jacobites\"})\nCREATE (Williamites:Group {name: \"Williamites\"})\nCREATE (Huguenots:Group {name: \"Huguenots\"})\nCREATE (UlsterProtestants:Group {name: \"Ulster Protestants\"})\nCREATE (EnglishProtestants:Group {name: \"English Protestants\"})\nCREATE (ScottishProtestants:Group {name: \"Scottish Protestants\"})\nCREATE (IrishCatholics:Group {name: \"Irish Catholics\"})\nCREATE (EnglishAndScottishJacobites:Group {name: \"English and Scottish Jacobites\"})\nCREATE (FrenchTroops:Group {name: \"French Troops\"})\nCREATE (DanishTroops:Group {name: \"Danish Troops\"})\nCREATE (DutchTroops:Group {name: \"Dutch Troops\"})\n\n// Create relationships between entities\nMATCH (b:Event {name: \"The Battle of the Boyne\"})\nMATCH (j:Person {name: \"King James II\"})\nMATCH (w:Person {name: \"King William III\"})\nMATCH (m:Person {name: \"Queen Mary II\"})\nMATCH (ds:Person {name: \"Duke of Schomberg\"})\nMATCH (gw:Person {name: \"George Walker\"})\nMATCH (rt:Person {name: \"Richard Talbot, 1st Earl of Tyrconnell\"})\nMATCH (sjc:Person {name: \"Sir James Fitz-Edmond Cotter\"})\nMATCH (l:Person {name: \"Lauzun\"})\nMATCH (evt:Person {name: \"General Ernst von Tettau\"})\nMATCH (gg:Person {name: \"Godert de Ginkel\"})\nMATCH (jf:Person {name: \"James FitzJames, 1st Duke of Berwick\"})\nMATCH (ch:Person {name: \"Constantijn Huygens Jr.\"})\nMATCH (ps:Person {name: \"Patrick Sarsfield\"})\nMATCH (no:Person {name: \"Neil O'Neill\"})\nMATCH (bd:Person {name: \"Bonnie Dundee\"})\nMATCH (dc:Place {name: \"Dublin\"})\nMATCH (lc:Place {name: \"Limerick\"})\nMATCH (dro:Place {name: \"Drogheda\"})\nMATCH (en:Place {name: \"Enniskillen\"})\nMATCH (du:Place {name: \"Duleek\"})\nMATCH (ro:Place {name: \"Roughgrange\"})\nMATCH (ob:Place {name: \"Oldbridge\"})\nMATCH (du:Place {name: \"Duncannon\"})\nMATCH (au:Place {name: \"Aughrim\"})\nMATCH (cf:Place {name: \"Carrickfergus\"})\nMATCH (lb:Place {name: \"Loughbrickland\"})\nMATCH (cl:Place {name: \"County Louth\"})\nMATCH (cf:Place {name: \"County Fermanagh\"})\nMATCH (ca:Place {name: \"County Antrim\"})\nMATCH (ck:Place {name: \"County Kerry\"})\nMATCH (cl:Place {name: \"County Limerick\"})\nMATCH (co:Place {name: \"County Cork\"})\nMATCH (ct:Place {name: \"County Tipperary\"})\nMATCH (p:Group {name: \"Protestants\"})\nMATCH (c:Group {name: \"Catholics\"})\nMATCH (j:Group {name: \"Jacobites\"})\nMATCH (w:Group {name: \"Williamites\"})\nMATCH (h:Group {name: \"Huguenots\"})\nMATCH (up:Group {name: \"Ulster Protestants\"})\nMATCH (ep:Group {name: \"English Protestants\"})\nMATCH (sp:Group {name: \"Scottish Protestants\"})\nMATCH (ic:Group {name: \"Irish Catholics\"})\nMATCH (esj:Group {name: \"English and Scottish Jacobites\"})\nMATCH (ft:Group {name: \"French Troops\"})\nMATCH (dt:Group {name: \"Danish Troops\"})\nMATCH (ndt:Group {name: \"Dutch Troops\"})\n\nMERGE (b)-[:TOOK_PLACE_IN]->(dro)\nMERGE (b)-[:TOOK_PLACE_IN]->(ca)\nMERGE (j)-[:FOUGHT_AGAINST]->(w)\nMERGE (j)-[:SUPPORTED_BY]->(l)\nMERGE (j)-[:SUPPORTED_BY]->(c)\nMERGE (j)-[:SUPPORTED_BY]->(esj)\nMERGE (j)-[:SUPPORTED_BY]->(ft)\nMERGE (j)-[:SUPPORTED_BY]->(ic)\nMERGE (w)-[:",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 37,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 12,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 12,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 13.943125009536743
  },
  {
    "url": "https://en.wikipedia.org/wiki/Moonlight",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the provided text:\n\n```\n// Create nodes for entities\nCREATE \n  (Moonlight:Entity {name: \"Moonlight\"}),\n  (Sun:Entity {name: \"Sun\"}),\n  (Earth:Entity {name: \"Earth\"}),\n  (Anaxagoras:Entity {name: \"Anaxagoras\"}),\n  (LunarPhase:Entity {name: \"Lunar Phase\"}),\n  (Perigee:Entity {name: \"Perigee\"}),\n  (Tropics:Entity {name: \"Tropics\"}),\n  (Purkinje_Effect:Entity {name: \"Purkinje Effect\"}),\n  (LunarSurface:Entity {name: \"Lunar Surface\"}),\n  (Atmosphere:Entity {name: \"Atmosphere\"}),\n  (Astronomers:Entity {name: \"Astronomers\"}),\n  (Folklore:Entity {name: \"Folklore\"}),\n  (Werewolf:Entity {name: \"Werewolf\"}),\n  (Lunatics:Entity {name: \"Lunatics\"}),\n  (Nyctalopia:Entity {name: \"Nyctalopia\"}),\n  (Vitamin_A:Entity {name: \"Vitamin A\"}),\n  (MoonBlindness:Entity {name: \"Moon Blindness\"}),\n  (Equine_Recurrent_Uveitis:Entity {name: \"Equine Recurrent Uveitis\"}),\n  (Moonmilk:Entity {name: \"Moonmilk\"}),\n  (LimestoneDeposit:Entity {name: \"Limestone Deposit\"}),\n  (LightBulb:Entity {name: \"Light Bulb\"}),\n  (FullMoon:Entity {name: \"Full Moon\"});\n\n// Create relationships between entities\nCREATE\n  (Moonlight)-[:CONSISTS_OF]->(Sun),\n  (Moonlight)-[:CONSISTS_OF]->(Earth),\n  (Moonlight)-[:ILLUMINATES]->(LunarSurface),\n  (Sun)-[:PROVIDES_LIGHT_TO]->(Moonlight),\n  (Anaxagoras)-[:AWARE_OF]->(Moonlight),\n  (Moonlight)-[:VARIES_WITH]->(LunarPhase),\n  (FullMoon)-[:PROVIDES_ILLUMINATION]->(Tropics),\n  (Moonlight)-[:APPEARS_BLUISH_DUE_TO]->(Purkinje_Effect),\n  (LunarSurface)-[:HAS_BOND_ALBEDO]->(0.136),\n  (Moonlight)-[:TAKES_TIME_TO_REACH]->(Atmosphere),\n  (Moonlight)-[:INCREASES_BRIGHTNESS_OF]->(NightSky),\n  (FullMoon)-[:HAS_INFLUENCE_ON]->(Folklore),\n  (FullMoon)-[:TRANSFORMS_INTO]->(Werewolf),\n  (FullMoon)-[:WORSENS_SYMPTOMS_OF]->(Lunatics),\n  (Moonlight)-[:CAUSES]->(Nyctalopia),\n  (Nyctalopia)-[:CAUSED_BY_LACK_OF]->(Vitamin_A),\n  (MoonBlindness)-[:RELATES_TO]->(Equine_Recurrent_Uveitis),\n  (Moonlight)-[:CAUSES]->(Moonmilk),\n  (Moonmilk)-[:FOUND_IN]->(LimestoneDeposit),\n  (FullMoon)-[:INSPIRED]->(LightBulb);\n```\n\nThis CYPHER query creates nodes for the various entities mentioned in the text and establishes relationships between them based on the information provided. The relationships capture the key connections, such as Moonlight consisting of sunlight and earthlight, Anaxagoras' awareness of the sun's role in providing moonlight, the effects of moonlight on the lunar surface, atmosphere, night sky, and folklore, as well as the various misconceptions and beliefs associated with moonlight.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 21,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 20,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 19,
      "Incorrectly Labelled Relationships": 2
    },
    "execution_time_in_seconds": 7.1916821002960205
  },
  {
    "url": "https://en.wikipedia.org/wiki/Japanese_tea_ceremony",
    "queries": "Based on the given text, here are some CYPHER queries that can be used to create a knowledge graph encapsulating the relationships between the entities:\n\n```cypher\n// Create nodes for the key entities\nCREATE (teaCeremony:Entity {name:'Japanese Tea Ceremony', type:'Practice'})\nCREATE (okakurKakuzo:Entity {name:'Okakura Kakuz\u014d', type:'Person'})\nCREATE (senRikyu:Entity {name:'Sen no Riky\u016b', type:'Person'})\nCREATE (omotesenke:Entity {name:'Omotesenke', type:'Organization'})\nCREATE (urasenke:Entity {name:'Urasenke', type:'Organization'})\nCREATE (mushakojitsenke:Entity {name:'Mushak\u014djisenke', type:'Organization'})\nCREATE (zenBuddhism:Entity {name:'Zen Buddhism', type:'Religion'})\nCREATE (shinto:Entity {name:'Shinto', type:'Religion'})\nCREATE (senchadao:Entity {name:'Senchad\u014d', type:'Practice'})\nCREATE (chakai:Entity {name:'Chakai', type:'Event'})\nCREATE (chaji:Entity {name:'Chaji', type:'Event'})\nCREATE (eisai:Entity {name:'Eisai', type:'Person'})\nCREATE (toyotomiHideyoshi:Entity {name:'Toyotomi Hideyoshi', type:'Person'})\nCREATE (muratajuko:Entity {name:'Murata Juk\u014d', type:'Person'})\nCREATE (ichigoichie:Entity {name:'Ichi-go ichi-e', type:'Concept'})\nCREATE (wabi:Entity {name:'Wabi', type:'Concept'})\nCREATE (sabi:Entity {name:'Sabi', type:'Concept'})\nCREATE (omotenashi:Entity {name:'Omotenashi', type:'Concept'})\nCREATE (chashitsu:Entity {name:'Chashitsu', type:'Entity'})\nCREATE (roji:Entity {name:'Roji', type:'Entity'})\nCREATE (koicha:Entity {name:'Koicha', type:'Practice'})\nCREATE (usucha:Entity {name:'Usucha', type:'Practice'})\nCREATE (chad\u014dgu:Entity {name:'Chad\u014dgu', type:'Equipment'})\n\n// Create relationships between the entities\nMATCH (teaCeremony),(okakurKakuzo)\nCREATE (teaCeremony)-[:DESCRIBED_BY]->(okakurKakuzo)\n\nMATCH (teaCeremony),(senRikyu)\nCREATE (teaCeremony)-[:REVOLUTIONIZED_BY]->(senRikyu)\n\nMATCH (senRikyu),(omotesenke),(urasenke),(mushakojitsenke)\nCREATE (senRikyu)-[:FOUNDED]->(omotesenke)\nCREATE (senRikyu)-[:FOUNDED]->(urasenke)\nCREATE (senRikyu)-[:FOUNDED]->(mushakojitsenke)\n\nMATCH (teaCeremony),(zenBuddhism),(shinto)\nCREATE (teaCeremony)-[:INFLUENCED_BY]->(zenBuddhism)\nCREATE (teaCeremony)-[:INFLUENCED_BY]->(shinto)\n\nMATCH (teaCeremony),(senchadao)\nCREATE (teaCeremony)-[:USES]->(senchadao)\n\nMATCH (chakai),(chaji)\nCREATE (chakai)-[:SUBSET_OF]->(chaji)\n\nMATCH (teaCeremony),(eisai)\nCREATE (eisai)-[:INTRODUCED]->(teaCeremony)\n\nMATCH (teaCeremony),(toyotomiHideyoshi)\nCREATE (toyotomiHideyoshi)-[:SUPPORTED]->(teaCeremony)\n\nMATCH (teaCeremony),(muratajuko)\nCREATE (muratajuko)-[:DEVELOPED]->(teaCeremony)\n\nMATCH (teaCeremony),(ichigoichie)\nCREATE (teaCeremony)-[:EMBODIED]->(ichigoichie)\n\nMATCH (teaCeremony),(wabi),(sabi),(omotenashi)\nCREATE (teaCeremony)-[:EMBODIES]->(wabi)\nCREATE (teaCeremony)-[:EMBODIES]->(sabi)\nCREATE (teaCeremony)-[:EMBODIES]->(omotenashi)\n\nMATCH (teaCeremony),(chashitsu),(roji)\nCREATE (teaCeremony)-[:USES]->(chashitsu)\nCREATE (teaCeremony)-[:USES]->(roji)\n\nMATCH (teaCeremony),(koicha),(usucha)\nCREATE (teaCeremony)-[:USES]->(koicha)\nCREATE (teaCeremony)-[:USES]->(usucha)\n\nMATCH (teaCeremony),(chad\u014dgu)\nCREATE (teaCeremony)-[:USES]->(chad\u014dgu)\n```\n\nThese queries create nodes for the key entities identified in the text, such as the Japanese Tea Ceremony, historical figures, organizations, practices, concepts, and physical elements. The relationships between these entities are then defined using the appropriate relationship types.\n\nThis knowledge graph can be used to explore the connections between the different aspects of the Japanese tea ceremony and visualize the complex web of influences and practices that make up this cultural tradition.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 25,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 22,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 22,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 10.191569089889526
  },
  {
    "url": "https://en.wikipedia.org/wiki/Supernova",
    "queries": "Here are the CYPHER queries for creating a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```cypher\n// Create nodes for the various entities\nCREATE (Supernova:Entity {name: \"Supernova\"})\nCREATE (Star:Entity {name: \"Star\"})\nCREATE (WhiteDwarf:Entity {name: \"White Dwarf\"})\nCREATE (NeutronStar:Entity {name: \"Neutron Star\"})\nCREATE (BlackHole:Entity {name: \"Black Hole\"})\nCREATE (Nebula:Entity {name: \"Nebula\"})\nCREATE (GalaxyMilkyWay:Entity {name: \"Milky Way Galaxy\"})\nCREATE (GalaxyLargeMagellanic:Entity {name: \"Large Magellanic Cloud\"})\nCREATE (SN1604:Entity {name: \"Kepler's Supernova 1604\"})\nCREATE (SN1572:Entity {name: \"Tycho's Supernova 1572\"})\nCREATE (SN1987A:Entity {name: \"SN 1987A\"})\nCREATE (SN1885A:Entity {name: \"SN 1885A\"})\nCREATE (SN1895B:Entity {name: \"SN 1895B\"})\nCREATE (SN2013fs:Entity {name: \"SN 2013fs\"})\nCREATE (SN2016gkg:Entity {name: \"SN 2016gkg\"})\nCREATE (SN2015lh:Entity {name: \"ASASSN-15lh\"})\nCREATE (JWST:Entity {name: \"James Webb Space Telescope\"})\nCREATE (CosicRays:Entity {name: \"Cosmic Rays\"})\nCREATE (GravitationalWaves:Entity {name: \"Gravitational Waves\"})\n\n// Create relationships between entities\nMATCH (Supernova),(Star) CREATE (Supernova)-[:OCCURS_DURING]->(Star)\nMATCH (Supernova),(WhiteDwarf) CREATE (Supernova)-[:TRIGGERED_BY]->(WhiteDwarf)\nMATCH (Supernova),(NeutronStar) CREATE (Supernova)-[:RESULTS_IN]->(NeutronStar)\nMATCH (Supernova),(BlackHole) CREATE (Supernova)-[:RESULTS_IN]->(BlackHole)\nMATCH (Supernova),(Nebula) CREATE (Supernova)-[:RESULTS_IN]->(Nebula)\nMATCH (Supernova),(GalaxyMilkyWay) CREATE (Supernova)-[:OCCURS_IN]->(GalaxyMilkyWay)\nMATCH (Supernova),(GalaxyLargeMagellanic) CREATE (Supernova)-[:OCCURS_IN]->(GalaxyLargeMagellanic)\nMATCH (SN1604),(GalaxyMilkyWay) CREATE (SN1604)-[:OCCURRED_IN]->(GalaxyMilkyWay)\nMATCH (SN1572),(GalaxyMilkyWay) CREATE (SN1572)-[:OCCURRED_IN]->(GalaxyMilkyWay)\nMATCH (SN1987A),(GalaxyLargeMagellanic) CREATE (SN1987A)-[:OCCURRED_IN]->(GalaxyLargeMagellanic)\nMATCH (SN1885A),(GalaxyAndromeda) CREATE (SN1885A)-[:OCCURRED_IN]->(GalaxyAndromeda)\nMATCH (SN1895B),(NGC5253) CREATE (SN1895B)-[:OCCURRED_IN]->(NGC5253)\nMATCH (SN2013fs),(NGC7610) CREATE (SN2013fs)-[:OCCURRED_IN]->(NGC7610)\nMATCH (SN2016gkg),(Rosario) CREATE (SN2016gkg)-[:DISCOVERED_BY]->(Rosario)\nMATCH (SN2015lh),(Supernova) CREATE (SN2015lh)-[:IS_THE_MOST_LUMINOUS]->(Supernova)\nMATCH (JWST),(Supernova) CREATE (JWST)-[:ADVANCED_UNDERSTANDING_OF]->(Supernova)\nMATCH (Supernova),(CosicRays) CREATE (Supernova)-[:IS_A_MAJOR_SOURCE_OF]->(CosicRays)\nMATCH (Supernova),(GravitationalWaves) CREATE (Supernova)-[:MIGHT_PRODUCE]->(GravitationalWaves)\n```\n\nThis Cypher query creates nodes for the various entities mentioned in the text, such as Supernova, Star, White Dwarf, Nebula, and different specific supernovae events. It then creates relationships between these entities based on the information provided in the text. For example, it creates a \"OCCURS_DURING\" relationship between Supernova and Star, a \"TRIGGERED_BY\" relationship between Supernova and White Dwarf, and an \"OCCURRED_IN\" relationship between specific supernova events and the galaxies they were observed in.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 19,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 18,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 18,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 10.379849910736084
  },
  {
    "url": "https://en.wikipedia.org/wiki/Paradox_of_thrift",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the relationships between the entities identified in the given text:\n\n```\n// Create nodes for the entities\nCREATE (paradox:Entity {name: \"Paradox of Thrift\"})\nCREATE (economics:Entity {name: \"Economics\"})\nCREATE (saving:Entity {name: \"Saving\"})\nCREATE (demand:Entity {name: \"Aggregate Demand\"})\nCREATE (output:Entity {name: \"Gross Output\"})\nCREATE (totalSaving:Entity {name: \"Total Saving\"})\nCREATE (fallacy:Entity {name: \"Fallacy of Composition\"})\nCREATE (individual:Entity {name: \"Individual\"})\nCREATE (economy:Entity {name: \"Economy\"})\nCREATE (Keynes:Entity {name: \"John Maynard Keynes\"})\nCREATE (income:Entity {name: \"Income\"})\nCREATE (Bees:Entity {name: \"The Fable of the Bees\"})\nCREATE (Smith:Entity {name: \"Adam Smith\"})\nCREATE (underconsumptionist:Entity {name: \"Underconsumptionist Economists\"})\nCREATE (Robertson:Entity {name: \"John M. Robertson\"})\nCREATE (Foster:Entity {name: \"William Trufant Foster\"})\nCREATE (Catchings:Entity {name: \"Waddill Catchings\"})\nCREATE (Treatise:Entity {name: \"Treatise on Money\"})\nCREATE (enterprise:Entity {name: \"Enterprise\"})\nCREATE (thrift:Entity {name: \"Thrift\"})\nCREATE (GeneralTheory:Entity {name: \"The General Theory\"})\nCREATE (Samuelson:Entity {name: \"Samuelson's Economics\"})\nCREATE (Stutzel:Entity {name: \"Wolfgang St\u00fctzel\"})\nCREATE (debtDeflation:Entity {name: \"Debt Deflation Theory\"})\nCREATE (Minsky:Entity {name: \"Hyman Minsky\"})\nCREATE (Yellen:Entity {name: \"Janet Yellen\"})\nCREATE (sectoralBalances:Entity {name: \"Sectoral Balances Analysis\"})\nCREATE (publicSector:Entity {name: \"Public Sector\"})\nCREATE (privateSector:Entity {name: \"Private Sector\"})\nCREATE (foreignSector:Entity {name: \"Foreign Sector\"})\nCREATE (SaysLaw:Entity {name: \"Say's Law\"})\nCREATE (NewKeynesian:Entity {name: \"New Keynesian Economists\"})\nCREATE (austrian:Entity {name: \"Austrian School\"})\nCREATE (Hayek:Entity {name: \"Friedrich Hayek\"})\nCREATE (capital:Entity {name: \"Capital\"})\n\n// Create relationships between the entities\nCREATE (paradox)-[:PART_OF]->(economics)\nCREATE (paradox)-[:DESCRIBES]->(saving)\nCREATE (paradox)-[:LEADS_TO]->(demand)\nCREATE (paradox)-[:LEADS_TO]->(output)\nCREATE (paradox)-[:LEADS_TO]->(totalSaving)\nCREATE (paradox)-[:EXAMPLE_OF]->(fallacy)\nCREATE (paradox)-[:RELATED_TO]->(individual)\nCREATE (paradox)-[:RELATED_TO]->(economy)\nCREATE (paradox)-[:POPULARIZED_BY]->(Keynes)\nCREATE (paradox)-[:DISCUSSED_IN]->(Bees)\nCREATE (paradox)-[:DISCUSSED_BY]->(Smith)\nCREATE (paradox)-[:DISCUSSED_BY]->(underconsumptionist)\nCREATE (paradox)-[:STATED_BY]->(Robertson)\nCREATE (paradox)-[:DISCUSSED_BY]->(Foster)\nCREATE (paradox)-[:DISCUSSED_BY]->(Catchings)\nCREATE (paradox)-[:DISCUSSED_IN]->(Treatise)\nCREATE (paradox)-[:CONTRASTED_WITH]->(enterprise)\nCREATE (paradox)-[:CONTRASTED_WITH]->(thrift)\nCREATE (paradox)-[:DISCUSSED_IN]->(GeneralTheory)\nCREATE (paradox)-[:POPULARIZED_IN]->(Samuelson)\nCREATE (paradox)-[:RELATED_TO]->(Stutzel)\nCREATE (paradox)-[:RELATED_TO]->(debtDeflation)\nCREATE (paradox)-[:RELATED_TO]->(Minsky)\nCREATE (paradox)-[:DISCUSSED_BY]->(Yellen)\nCREATE (paradox)-[:RELATED_TO]->(sectoralBalances)\nCREATE (publicSector)-[:FUNDS]->(privateSector)\nCREATE (privateSector)-[:SAVES]->(publicSector)\nCREATE (privateSector)-[:SAVES]->(foreignSector)\nCREATE (paradox)-[:CRITICIZED_BY]->(SaysLaw)\nCREATE (paradox)-[:DEFENDED_BY]->(NewKeynesian)\nCREATE (paradox)-[:CRITICIZED_BY]->(austrian)\nCREATE (paradox)-[:CRITICIZED_BY]->(Hayek)\nCREATE (saving)-[:LEADS_TO]->(capital)\n```\n\nThis CYPHER query creates nodes for the various entities mentioned in the text, such as \"Paradox of Thrift\", \"Economics\", \"Saving\", \"Aggregate Demand\", \"Gross Output\", \"Total Saving\", \"Fallacy of Composition\", \"Individual\", \"Economy\", \"John Maynard Keynes\", \"Income\", \"The Fable of the Bees\", \"Adam Smith\", \"Underconsumptionist Economists\", \"John M. Robertson\", \"William Trufant Foster\", \"Waddill Catchings\", \"Treatise on Money\", \"Enterprise\", \"Thrift\", \"The General Theory\", \"Samuelson's Economics\", \"Wolfgang St\u00fctzel\", \"Debt Deflation Theory\", \"Hyman Minsky\", \"Janet Yellen\", \"Sectoral Balances Analysis\", \"Public Sector\", \"Private Sector\", \"Foreign Sector\", \"Say's Law\", \"New Keynesian Economists\", \"Austrian School\", \"Friedrich Hayek\", and \"Capital\".\n\nThe relationships between these entities are then defined using CYPHER's relationship types, such as `:PART_OF`, `:DESCRIBES`, `:LEADS_TO`, `:EXAMPLE_OF`, `:RELATED_TO`, `:POPULARIZED_BY`, `:DISCUSSED_IN`, `:DISCUSSED_BY`, `:STATED_BY`, `:CONTRASTED_WITH`, `:DISCUSSED_IN`, `:POPULARIZED_IN`, `:RELATED_TO`, `:CRITICIZED_BY`, and `:FUNDS`.\n\nThis knowledge graph can be used to explore the relationships between the various concepts and entities involved in the paradox of thrift, as well as to answer questions and perform analysis related to this economic phenomenon.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 37,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 35,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 35,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 12.219662189483643
  },
  {
    "url": "https://en.wikipedia.org/wiki/Hula_hoop",
    "queries": "Sure, here are the CYPHER queries to create a knowledge graph based on the information provided in the text:\n\n```\n// Create nodes for entities\nCREATE\n  (hula_hoop:Toy {name: \"Hula Hoop\"}),\n  (bamboo_hoop:Material {name: \"Bamboo Hoop\"}),\n  (plastic_hoop:Material {name: \"Plastic Hoop\"}),\n  (willow:Material {name: \"Willow\"}),\n  (rattan:Material {name: \"Rattan\"}),\n  (grapevine:Material {name: \"Grapevine\"}),\n  (grass:Material {name: \"Grass\"}),\n  (native_american_hoop_dance:Dance {name: \"Native American Hoop Dance\"}),\n  (wham-o:Company {name: \"Wham-O\"}),\n  (toltoys:Company {name: \"Toltoys\"}),\n  (carlon_products:Company {name: \"Carlon Products Corporation\"}),\n  (string_cheese_incident:Band {name: \"The String Cheese Incident\"}),\n  (hooping_org:Website {name: \"Hooping.org\"}),\n  (world_hoop_day:Event {name: \"World Hoop Day\"}),\n  (pvc:Material {name: \"PVC\"}),\n  (polypropylene:Material {name: \"Polypropylene\"}),\n  (polyvinyl_chloride:Material {name: \"Polyvinyl Chloride\"}),\n  (polyethylene:Material {name: \"Polyethylene\"}),\n  (glow_in_the_dark:Feature {name: \"Glow-in-the-Dark\"}),\n  (led_lighting:Feature {name: \"LED Lighting\"}),\n  (smart_hoop:Feature {name: \"Smart Hoop\"}),\n  (fire_hooping:Activity {name: \"Fire Hooping\"}),\n  (weighted_hoop:Hoop {name: \"Weighted Hoop\"})\n\n// Create relationships between entities\nCREATE\n  (hula_hoop)-[:MADE_OF]->(bamboo_hoop),\n  (hula_hoop)-[:MADE_OF]->(plastic_hoop),\n  (hula_hoop)-[:MADE_OF]->(willow),\n  (hula_hoop)-[:MADE_OF]->(rattan),\n  (hula_hoop)-[:MADE_OF]->(grapevine),\n  (hula_hoop)-[:MADE_OF]->(grass),\n  (hula_hoop)-[:USED_IN]->(native_american_hoop_dance),\n  (plastic_hoop)-[:CREATED_BY]->(wham-o),\n  (plastic_hoop)-[:CREATED_BY]->(toltoys),\n  (plastic_hoop)-[:CREATED_BY]->(carlon_products),\n  (hula_hoop)-[:POPULARIZED_BY]->(string_cheese_incident),\n  (hula_hoop)-[:COMMUNITY_FORMED_ON]->(hooping_org),\n  (world_hoop_day)-[:ABOUT]->(hula_hoop),\n  (hula_hoop)-[:MADE_OF]->(pvc),\n  (hula_hoop)-[:MADE_OF]->(polypropylene),\n  (hula_hoop)-[:MADE_OF]->(polyvinyl_chloride),\n  (hula_hoop)-[:MADE_OF]->(polyethylene),\n  (hula_hoop)-[:HAS_FEATURE]->(glow_in_the_dark),\n  (hula_hoop)-[:HAS_FEATURE]->(led_lighting),\n  (hula_hoop)-[:HAS_FEATURE]->(smart_hoop),\n  (hula_hoop)-[:USED_IN]->(fire_hooping),\n  (hula_hoop)-[:USED_FOR]->(weighted_hoop)\n```\n\nThis query creates nodes for the various entities mentioned in the text, such as the hula hoop, its materials, companies involved in its production, and other related concepts. It then creates relationships between these entities based on the information provided.\n\nFor example, the `MADE_OF` relationship connects the hula hoop node to the various material nodes, the `CREATED_BY` relationship connects the plastic hoop node to the companies that produced it, and the `USED_IN` relationship connects the hula hoop to the Native American Hoop Dance and Fire Hooping activities.\n\nYou can then use this knowledge graph to explore the relationships between the entities and answer questions or perform analyses based on the information provided in the text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 22,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 20,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 20,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 9.006083965301514
  },
  {
    "url": "https://en.wikipedia.org/wiki/Snakes_in_mythology",
    "queries": "Based on the provided text, here are some CYPHER queries to create a knowledge graph encapsulating the relationships between entities:\n\n1. Create nodes for the various cultures and mythological entities mentioned:\n```cypher\nCREATE (Hopi:Culture)\nCREATE (Aztec:Culture)\nCREATE (Mayan:Culture)\nCREATE (Serer:Culture)\nCREATE (Dogon:Culture)\nCREATE (Sumerian:Culture)\nCREATE (Indian:Culture)\nCREATE (Chinese:Culture)\nCREATE (Greek:Culture)\nCREATE (Norse:Culture)\nCREATE (Slavic:Culture)\nCREATE (Zuni:Culture)\nCREATE (Pomo:Culture)\nCREATE (Brule_Sioux:Culture)\nCREATE (Dahomey:Culture)\nCREATE (Fijian:Culture)\nCREATE (Solomon_Islands:Culture)\nCREATE (Voodoo:Culture)\nCREATE (Korean:Culture)\nCREATE (Egyptian:Culture)\nCREATE (Mesopotamian:Culture)\nCREATE (Native_American:Culture)\n\nCREATE (Snakes:Entity)\nCREATE (Quetzalcoatl:Entity)\nCREATE (Danh:Entity)\nCREATE (Ra:Entity)\nCREATE (Amduat:Entity)\nCREATE (Jormungand:Entity)\nCREATE (Ahi_Vritra:Entity)\nCREATE (Vishnu:Entity)\nCREATE (Shesha:Entity)\nCREATE (Kurma:Entity)\nCREATE (N\u00fcwa:Entity)\nCREATE (Ophion:Entity)\nCREATE (Ouroboros:Entity)\nCREATE (Gorgons:Entity)\nCREATE (Medusa:Entity)\nCREATE (Nagas:Entity)\nCREATE (Garuda:Entity)\nCREATE (Nidhogg:Entity)\nCREATE (Yggdrasil:Entity)\nCREATE (Veles:Entity)\nCREATE (Mictlan:Entity)\nCREATE (Hecate:Entity)\nCREATE (Leviathan:Entity)\nCREATE (Koloowisi:Entity)\nCREATE (Scylla:Entity)\nCREATE (Untekhi:Entity)\nCREATE (Saint_George:Entity)\nCREATE (Saint_Columba:Entity)\nCREATE (Asclepius:Entity)\nCREATE (Nirah:Entity)\nCREATE (Mu\u0161\u1e2bu\u0161\u0161u:Entity)\nCREATE (Ninazu:Entity)\nCREATE (Ningishzida:Entity)\nCREATE (Marduk:Entity)\nCREATE (Nabu:Entity)\nCREATE (Ashur:Entity)\nCREATE (Ndengei:Entity)\nCREATE (Coatlicue:Entity)\nCREATE (Damballa:Entity)\nCREATE (Simbi:Entity)\nCREATE (Petro:Entity)\nCREATE (Eobshin:Entity)\nCREATE (Mehen:Entity)\nCREATE (Nehebkau:Entity)\nCREATE (Horned_Serpent:Entity)\nCREATE (Snake_Youth:Entity)\nCREATE (Snake_Girl:Entity)\nCREATE (Nagas:Entity)\n```\n\n2. Create relationships between the entities:\n```cypher\n// Snakes and their associations\nMATCH (Snakes:Entity)\nMATCH (Culture:Culture)\nCREATE (Snakes)-[:ASSOCIATED_WITH]->(Culture)\n\n// Quetzalcoatl's relationships\nMATCH (Quetzalcoatl:Entity)\nMATCH (Aztec:Culture)\nMATCH (Mayan:Culture)\nCREATE (Quetzalcoatl)-[:ASSOCIATED_WITH]->(Aztec)\nCREATE (Quetzalcoatl)-[:ASSOCIATED_WITH]->(Mayan)\n\n// Danh's relationship\nMATCH (Danh:Entity)\nMATCH (Dahomey:Culture)\nCREATE (Danh)-[:ASSOCIATED_WITH]->(Dahomey)\n\n// Ra's relationship\nMATCH (Ra:Entity)\nMATCH (Egyptian:Culture)\nCREATE (Ra)-[:ASSOCIATED_WITH]->(Egyptian)\n\n// Amduat's relationship\nMATCH (Amduat:Entity)\nMATCH (Egyptian:Culture)\nCREATE (Amduat)-[:ASSOCIATED_WITH]->(Egyptian)\n\n// Jormungand's relationship\nMATCH (Jormungand:Entity)\nMATCH (Norse:Culture)\nCREATE (Jormungand)-[:ASSOCIATED_WITH]->(Norse)\n\n// Ahi/Vritra's relationship\nMATCH (Ahi_Vritra:Entity)\nMATCH (Indian:Culture)\nCREATE (Ahi_Vritra)-[:ASSOCIATED_WITH]->(Indian)\n\n// Vishnu and Shesha's relationship\nMATCH (Vishnu:Entity)\nMATCH (Shesha:Entity)\nCREATE (Vishnu)-[:ASSOCIATED_WITH]->(Shesha)\n\n// N\u00fcwa's relationship\nMATCH (N\u00fcwa:Entity)\nMATCH (Chinese:Culture)\nCREATE (N\u00fcwa)-[:ASSOCIATED_WITH]->(Chinese)\n\n// Ophion's relationship\nMATCH (Ophion:Entity)\nMATCH (Greek:Culture)\nCREATE (Ophion)-[:ASSOCIATED_WITH]->(Greek)\n\n// Ouroboros' relationships\nMATCH (Ouroboros:Entity)\nMATCH (Culture:Culture)\nCREATE (Ouroboros)-[:ASSOCIATED_WITH]->(Culture)\n\n// Gorgons and Medusa's relationships\nMATCH (Gorgons:Entity)\nMATCH (Medusa:Entity)\nMATCH (Greek:Culture)\nCREATE (Gorgons)-[:ASSOCIATED_WITH]->(Greek)\nCREATE (Medusa)-[:ASSOCIATED_WITH]->(Greek)\n\n// Nagas' relationships\nMATCH (Nagas:Entity)\nMATCH (Culture:Culture)\nCREATE (Nagas)-[:ASSOCIATED_WITH]->(Culture)\n\n// Garuda's relationship\nMATCH (Garuda:Entity)\nMATCH (Indian:Culture)\nCREATE (Garuda)-[:ASSOCIATED_WITH]->(Indian)\n\n// Nidhogg and Yggdrasil's relationship\nMATCH (Nidhogg:Entity)\nMATCH (Yggdrasil:Entity)\nMATCH (Norse:Culture)\nCREATE (Nidhogg)-[:ASSOCIATED_WITH]->(Yggdrasil)\nCREATE (Nidhogg)-[:ASSOCIATED_WITH]->(Norse)\n\n// Veles' relationship\nMATCH (Veles:Entity)\nMATCH (Slavic:Culture)\nCREATE (Veles)-[:ASSOCIATED_WITH]->(Slavic)\n\n// Mictlan's relationship\nMATCH (Mictlan:Entity)\nMATCH (Aztec:Culture)\nCREATE (Mictlan)-[:ASSOCIATED_WITH]->(Aztec)\n\n// Hecate's relationship\nMATCH (Hecate:Entity)\nMATCH (Greek:Culture)\nCREATE (Hecate)-[:ASSOCIATED_WITH]->(Greek)\n\n// Leviathan's relationship\nMATCH (Leviathan:Entity)\nMATCH (Hebrew:Culture)\nCREATE (Leviathan)-[:ASSOCIATED_WITH]->(Hebrew)\n\n// Koloowisi's relationship\nMATCH (Koloowisi:Entity)\nMATCH (Zuni:Culture)\nCREATE (Koloowisi)-[:ASSOCIATED_WITH]->(Zuni)\n\n// Scylla's relationship\nMATCH (Scylla:Entity)\nMATCH (Greek:Culture)\nCREATE (Scylla)-[:ASSOCIATED_WITH]->(Greek)\n\n// Untekhi's relationship\nMATCH (Untekhi:Entity)\nMATCH (Missouri_River:Entity)\nCREATE (Untekhi)-[:ASSOCIATED_WITH]->(Missouri_River)\n\n// Saint George and Saint Columba's relationships\nMATCH (Saint_George:Entity)\nMATCH (Saint_Columba:Entity)\nMATCH (Culture:Culture)\nCREATE (Saint_George)-[:ASSOCIATED_WITH]->(Culture)\nCREATE (Saint_Columba)-[:ASSOCIATED_WITH]->(Culture)\n\n// Asclepius' relationship\nMATCH (Asclepius:Entity)\nMATCH (Greek:Culture)\nCREATE (Asclepius)-[:ASSOCIATED_WITH]->(Greek)\n\n// Nirah's relationships\nMATCH (Nirah:Entity)\nMATCH (I\u0161taran:Entity)\nMATCH (Mesopotamian:Culture)\nCREATE (Nirah",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 53,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 27,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 27,
      "Incorrectly Labelled Relationships": 2
    },
    "execution_time_in_seconds": 13.71907091140747
  },
  {
    "url": "https://en.wikipedia.org/wiki/Machine_learning",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the given text:\n\n1. Create nodes for the key entities:\n\n```cypher\nCREATE (MachineLearning:Concept {name: \"Machine Learning\"})\nCREATE (ArtificialIntelligence:Concept {name: \"Artificial Intelligence\"})\nCREATE (NeuralNetworks:Concept {name: \"Neural Networks\"})\nCREATE (ProbabilisticReasoning:Concept {name: \"Probabilistic Reasoning\"})\nCREATE (ExpertSystems:Concept {name: \"Expert Systems\"})\nCREATE (InductiveLogicProgramming:Concept {name: \"Inductive Logic Programming\"})\nCREATE (Connectionism:Concept {name: \"Connectionism\"})\nCREATE (DataMining:Concept {name: \"Data Mining\"})\nCREATE (Optimization:Concept {name: \"Optimization\"})\nCREATE (Statistics:Concept {name: \"Statistics\"})\nCREATE (CompressionAlgorithms:Concept {name: \"Compression Algorithms\"})\nCREATE (Clustering:Concept {name: \"Clustering\"})\nCREATE (SupervisedLearning:Concept {name: \"Supervised Learning\"})\nCREATE (UnsupervisedLearning:Concept {name: \"Unsupervised Learning\"})\nCREATE (SemiSupervisedLearning:Concept {name: \"Semi-supervised Learning\"})\nCREATE (WeaklySupervised:Concept {name: \"Weakly Supervised Learning\"})\nCREATE (ReinforcementLearning:Concept {name: \"Reinforcement Learning\"})\nCREATE (DimensionalityReduction:Concept {name: \"Dimensionality Reduction\"})\nCREATE (TopicModeling:Concept {name: \"Topic Modeling\"})\nCREATE (MetaLearning:Concept {name: \"Meta-learning\"})\nCREATE (SelfLearning:Concept {name: \"Self-learning\"})\n```\n\n2. Create relationships between the entities:\n\n```cypher\n// Machine Learning is a field of study in Artificial Intelligence\nMATCH (MachineLearning:Concept), (ArtificialIntelligence:Concept)\nCREATE (MachineLearning)-[:IS_A_FIELD_OF]->(ArtificialIntelligence)\n\n// Machine Learning utilizes Neural Networks\nMATCH (MachineLearning:Concept), (NeuralNetworks:Concept)\nCREATE (MachineLearning)-[:UTILIZES]->(NeuralNetworks)\n\n// Machine Learning employs Probabilistic Reasoning\nMATCH (MachineLearning:Concept), (ProbabilisticReasoning:Concept)\nCREATE (MachineLearning)-[:EMPLOYS]->(ProbabilisticReasoning)\n\n// Machine Learning was dominated by Expert Systems in the 1980s\nMATCH (MachineLearning:Concept), (ExpertSystems:Concept)\nCREATE (ExpertSystems)-[:DOMINATED]->(MachineLearning)\n\n// Inductive Logic Programming is a type of Symbolic/Knowledge-based Learning within AI\nMATCH (InductiveLogicProgramming:Concept), (ArtificialIntelligence:Concept)\nCREATE (InductiveLogicProgramming)-[:IS_A_TYPE_OF]->(ArtificialIntelligence)\n\n// Connectionism is a line of research outside AI/CS, continued by researchers from other disciplines\nMATCH (Connectionism:Concept), (ArtificialIntelligence:Concept), (ComputerScience:Concept)\nCREATE (Connectionism)-[:CONTINUED_OUTSIDE]->(ArtificialIntelligence), (Connectionism)-[:CONTINUED_OUTSIDE]->(ComputerScience)\n\n// Data Mining is a related field of study, focusing on Exploratory Data Analysis via Unsupervised Learning\nMATCH (DataMining:Concept), (UnsupervisedLearning:Concept)\nCREATE (DataMining)-[:FOCUSES_ON]->(UnsupervisedLearning)\n\n// Machine Learning is closely related to Optimization\nMATCH (MachineLearning:Concept), (Optimization:Concept)\nCREATE (MachineLearning)-[:IS_CLOSELY_RELATED_TO]->(Optimization)\n\n// Machine Learning is closely related to Statistics\nMATCH (MachineLearning:Concept), (Statistics:Concept)\nCREATE (MachineLearning)-[:IS_CLOSELY_RELATED_TO]->(Statistics)\n\n// Compression Algorithms can be used for Machine Learning\nMATCH (CompressionAlgorithms:Concept), (MachineLearning:Concept)\nCREATE (CompressionAlgorithms)-[:CAN_BE_USED_FOR]->(MachineLearning)\n\n// Clustering is a type of Unsupervised Learning\nMATCH (Clustering:Concept), (UnsupervisedLearning:Concept)\nCREATE (Clustering)-[:IS_A_TYPE_OF]->(UnsupervisedLearning)\n\n// The main Machine Learning paradigms are Supervised, Unsupervised, and Reinforcement Learning\nMATCH (SupervisedLearning:Concept), (UnsupervisedLearning:Concept), (ReinforcementLearning:Concept)\nCREATE (SupervisedLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\nCREATE (UnsupervisedLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\nCREATE (ReinforcementLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\n\n// Semi-supervised and Weakly Supervised Learning are other Machine Learning paradigms\nMATCH (SemiSupervisedLearning:Concept), (WeaklySupervised:Concept)\nCREATE (SemiSupervisedLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\nCREATE (WeaklySupervised)-[:IS_A_TYPE_OF]->(MachineLearning)\n\n// Dimensionality Reduction, Topic Modeling, and Meta-learning are other Machine Learning approaches\nMATCH (DimensionalityReduction:Concept), (TopicModeling:Concept), (MetaLearning:Concept)\nCREATE (DimensionalityReduction)-[:IS_A_TYPE_OF]->(MachineLearning)\nCREATE (TopicModeling)-[:IS_A_TYPE_OF]->(MachineLearning)\nCREATE (MetaLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\n\n// Self-learning is a Machine Learning paradigm\nMATCH (SelfLearning:Concept)\nCREATE (SelfLearning)-[:IS_A_TYPE_OF]->(MachineLearning)\n```\n\nThis set of CYPHER queries creates a knowledge graph with the key entities from the given text and the relationships between them. The graph can be further expanded and refined as needed to capture the various aspects of machine learning and its connections to other fields.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 21,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 18,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 18,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 13.534049987792969
  },
  {
    "url": "https://en.wikipedia.org/wiki/Dinosaur",
    "queries": "Here are some CYPHER queries that could be used to create a knowledge graph encapsulating the relationships between entities from the given text:\n\n```cypher\n// Create nodes for the main entities\nCREATE (Dinosauria:Class { name: \"Dinosauria\" })\nCREATE (Reptile:Class { name: \"Reptile\" })\nCREATE (Triassic:Period { name: \"Triassic\" })\nCREATE (Jurassic:Period { name: \"Jurassic\" })\nCREATE (Cretaceous:Period { name: \"Cretaceous\" })\nCREATE (Paleogene:Period { name: \"Paleogene\" })\nCREATE (Birds:Class { name: \"Birds\" })\nCREATE (Non-avian_Dinosaurs:Class { name: \"Non-avian Dinosaurs\" })\nCREATE (Herbivore:Feeding_Habit { name: \"Herbivore\" })\nCREATE (Carnivore:Feeding_Habit { name: \"Carnivore\" })\nCREATE (Omnivore:Feeding_Habit { name: \"Omnivore\" })\nCREATE (Bipedal:Locomotion { name: \"Bipedal\" })\nCREATE (Quadrupedal:Locomotion { name: \"Quadrupedal\" })\nCREATE (Armor:Adaptation { name: \"Armor\" })\nCREATE (Horns_and_Crests:Adaptation { name: \"Horns and Crests\" })\n\n// Create relationships between entities\nCREATE (Dinosauria)-[:IS_A]->(Reptile)\nCREATE (Dinosauria)-[:FIRST_APPEARED_IN]->(Triassic)\nCREATE (Dinosauria)-[:DOMINANT_DURING]->(Jurassic)\nCREATE (Dinosauria)-[:DOMINANT_DURING]->(Cretaceous)\nCREATE (Birds)-[:IS_A]->(Dinosauria)\nCREATE (Non-avian_Dinosaurs)-[:IS_A]->(Dinosauria)\nCREATE (Dinosauria)-[:INCLUDES]->(Herbivore)\nCREATE (Dinosauria)-[:INCLUDES]->(Carnivore)\nCREATE (Dinosauria)-[:INCLUDES]->(Omnivore)\nCREATE (Dinosauria)-[:INCLUDES]->(Bipedal)\nCREATE (Dinosauria)-[:INCLUDES]->(Quadrupedal)\nCREATE (Dinosauria)-[:INCLUDES]->(Armor)\nCREATE (Dinosauria)-[:INCLUDES]->(Horns_and_Crests)\nCREATE (Birds)-[:SURVIVED]->(Cretaceous_Paleogene_Extinction)\nCREATE (Non-avian_Dinosaurs)-[:WENT_EXTINCT_IN]->(Cretaceous_Paleogene_Extinction)\n```\n\nThis creates a basic knowledge graph structure with nodes representing the main entities mentioned in the text and relationships between them. The nodes are labeled with their respective classes or attributes, and the relationships describe the connections between them.\n\nYou can further expand this knowledge graph by creating additional nodes and relationships based on the detailed information provided in the text, such as specific dinosaur genera, their characteristics, and the historical context of dinosaur discovery and research.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 14,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 13,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 11,
      "Incorrectly Labelled Relationships": 4
    },
    "execution_time_in_seconds": 6.294315814971924
  },
  {
    "url": "https://en.wikipedia.org/wiki/Limerick_(poetry)",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the entities and relationships identified in the given text:\n\n```cypher\n// Create nodes for the entities\nCREATE (limerick:Poetic_Form {name: \"limerick\"})\nCREATE (england:Location {name: \"England\"})\nCREATE (edward_lear:Person {name: \"Edward Lear\"})\nCREATE (gershon_legman:Person {name: \"Gershon Legman\"})\nCREATE (david_abercrombie:Person {name: \"David Abercrombie\"})\nCREATE (w_s_gilbert:Person {name: \"W.S. Gilbert\"})\nCREATE (john_clarke:Person {name: \"John Clarke\"})\nCREATE (ezra_haber_glenn:Person {name: \"Ezra Haber Glenn\"})\nCREATE (leigh_mercer:Person {name: \"Leigh Mercer\"})\n\n// Create relationships between the entities\nMATCH (limerick:Poetic_Form), (england:Location)\nCREATE (limerick)-[:ORIGINATED_IN]->(england)\n\nMATCH (limerick:Poetic_Form), (edward_lear:Person)\nCREATE (limerick)-[:POPULARIZED_BY]->(edward_lear)\n\nMATCH (limerick:Poetic_Form), (gershon_legman:Person)\nCREATE (gershon_legman)-[:STUDIED]->(limerick)\n\nMATCH (limerick:Poetic_Form), (david_abercrombie:Person)\nCREATE (david_abercrombie)-[:STUDIED]->(limerick)\n\nMATCH (limerick:Poetic_Form), (w_s_gilbert:Person)\nCREATE (w_s_gilbert)-[:PARODIED]->(limerick)\n\nMATCH (limerick:Poetic_Form), (john_clarke:Person)\nCREATE (john_clarke)-[:PARODIED]->(limerick)\n\nMATCH (limerick:Poetic_Form), (ezra_haber_glenn:Person)\nCREATE (ezra_haber_glenn)-[:BLENDED]->(limerick)\n\nMATCH (limerick:Poetic_Form), (leigh_mercer:Person)\nCREATE (leigh_mercer)-[:DEVISED]->(limerick)\n```\n\nThis set of CYPHER queries creates the following entities and relationships in the knowledge graph:\n\n- `limerick` (Poetic_Form)\n- `england` (Location)\n- `edward_lear` (Person)\n- `gershon_legman` (Person)\n- `david_abercrombie` (Person)\n- `w_s_gilbert` (Person)\n- `john_clarke` (Person)\n- `ezra_haber_glenn` (Person)\n- `leigh_mercer` (Person)\n\nThe relationships between the entities are:\n\n- `limerick` ORIGINATED_IN `england`\n- `edward_lear` POPULARIZED_BY `limerick`\n- `gershon_legman` STUDIED `limerick`\n- `david_abercrombie` STUDIED `limerick`\n- `w_s_gilbert` PARODIED `limerick`\n- `john_clarke` PARODIED `limerick`\n- `ezra_haber_glenn` BLENDED `limerick`\n- `leigh_mercer` DEVISED `limerick`\n\nThis knowledge graph captures the key entities and relationships described in the given text about limericks.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 9,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 8,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 8,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 6.160114765167236
  },
  {
    "url": "https://en.wikipedia.org/wiki/List_of_Nobel_laureates_in_Physics",
    "queries": "Based on the given text, here are the CYPHER queries to create a knowledge graph encapsulating the relationships between the identified entities:\n\n```cypher\n// Create node for the Nobel Prize in Physics\nCREATE (:Prize {\n    name: \"Nobel Prize in Physics\",\n    language: \"Swedish\",\n    translation: \"Nobelpriset i fysik\"\n})\n\n// Create node for the Royal Swedish Academy of Sciences\nCREATE (:Organization {\n    name: \"Royal Swedish Academy of Sciences\"\n})\n\n// Create node for Alfred Nobel\nCREATE (:Person {\n    name: \"Alfred Nobel\",\n    died: 1896\n})\n\n// Create node for the Nobel Foundation\nCREATE (:Organization {\n    name: \"Nobel Foundation\"\n})\n\n// Create relationships\nMATCH (prize:Prize), (academy:Organization), (alfred:Person), (foundation:Organization)\nCREATE (prize)-[:AWARDED_BY]->(academy)\nCREATE (prize)-[:ESTABLISHED_BY]->(alfred)\nCREATE (prize)-[:ADMINISTERED_BY]->(foundation)\nCREATE (prize)-[:AWARDED_ON]->(date:Date {\n    day: 10,\n    month: 12\n})\n\n// Create node for Nobel laureates\nMERGE (wilhelm:Person {name: \"Wilhelm Conrad R\u00f6ntgen\"})\nMERGE (john:Person {name: \"John Bardeen\"})\nMERGE (william:Person {name: \"William Lawrence Bragg\", age: 25})\nMERGE (arthur:Person {name: \"Arthur Ashkin\", age: 96})\nMERGE (marie:Person {name: \"Marie Curie\"})\nMERGE (maria:Person {name: \"Maria Goeppert-Mayer\"})\nMERGE (donna:Person {name: \"Donna Strickland\"})\nMERGE (andrea:Person {name: \"Andrea Ghez\"})\nMERGE (anne:Person {name: \"Anne L'Huillier\"})\n\n// Create relationships between laureates and the Nobel Prize\nMATCH (prize:Prize), (laureate:Person)\nCREATE (laureate)-[:AWARDED_NOBEL_PRIZE]->(prize)\n\n// Create relationship for multiple Nobel Prize winners\nMATCH (john:Person)\nCREATE (john)-[:WON_NOBEL_PRIZE_TWICE]->(prize)\n\n// Create relationship for youngest and oldest laureates\nMATCH (william:Person), (arthur:Person)\nCREATE (william)-[:YOUNGEST_LAUREATE]->(prize)\nCREATE (arthur)-[:OLDEST_LAUREATE]->(prize)\n\n// Create relationship for women Nobel Prize winners\nMATCH (woman:Person)\nCREATE (woman)-[:WOMAN_LAUREATE]->(prize)\n\n// Create relationship for years the Nobel Prize was not awarded\nUNWIND [1916, 1931, 1934, 1940, 1941, 1942] AS year\nCREATE (:Year {\n    year: year,\n    prize_not_awarded: true\n})\n\n// Create relationship for years the Nobel Prize was delayed\nUNWIND [2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012] AS year\nCREATE (:Year {\n    year: year,\n    prize_delayed: true\n})\n\n// Create relationship for the study on Nobel Prize disciplines\nMERGE (study:Study {\n    year: 2020,\n    findings: \"Particle physics (14%), atomic physics (10.9%), and 3 non-physics disciplines dominate the prize in recent decades, followed by semiconductor physics and magnetics.\"\n})\nCREATE (study)-[:STUDIED]->(prize)\n```\n\nThis set of CYPHER queries creates the nodes and relationships for the entities mentioned in the given text, including the Nobel Prize in Physics, the awarding organizations, the laureates, the years the prize was not awarded or delayed, and the study on the distribution of the Nobel Prizes in various disciplines.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 25,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 28,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 28,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 7.588819980621338
  },
  {
    "url": "https://en.wikipedia.org/wiki/Ice_cream",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the given text:\n\n```cypher\n// Create nodes for the main entities\nCREATE (IceCream:Food {name: \"Ice Cream\"})\nCREATE (Gelato:Food {name: \"Gelato\"})\nCREATE (FrozenCustard:Food {name: \"Frozen Custard\"})\nCREATE (SoftServe:Food {name: \"Soft Serve\"})\nCREATE (MilkAlternatives:Food {name: \"Milk Alternatives\"})\nCREATE (BananaIceCream:Food {name: \"Banana 'Nice Cream'\"})\nCREATE (FrozenYogurt:Food {name: \"Frozen Yogurt\"})\nCREATE (Sorbet:Food {name: \"Sorbet\"})\nCREATE (Persia:Location {name: \"Persia (Iran)\"})\nCREATE (Rome:Location {name: \"Rome\"})\nCREATE (Japan:Location {name: \"Japan\"})\nCREATE (Mughal:Location {name: \"Mughal Empire\"})\nCREATE (India:Location {name: \"Indian Subcontinent\"})\nCREATE (Europe:Location {name: \"Europe\"})\nCREATE (Italy:Location {name: \"Italy\"})\nCREATE (France:Location {name: \"France\"})\nCREATE (England:Location {name: \"England\"})\nCREATE (UnitedStates:Location {name: \"United States\"})\nCREATE (NewZealand:Location {name: \"New Zealand\"})\n\n// Create relationships between entities\nCREATE (IceCream)-[:MADE_FROM]->(Milk)\nCREATE (IceCream)-[:MADE_FROM]->(Cream)\nCREATE (IceCream)-[:FLAVOURED_WITH]->(Sweetener)\nCREATE (IceCream)-[:FLAVOURED_WITH]->(Cocoa)\nCREATE (IceCream)-[:FLAVOURED_WITH]->(Vanilla)\nCREATE (IceCream)-[:FLAVOURED_WITH]->(Fruit)\nCREATE (IceCream)-[:CONTAINS]->(FoodColoring)\nCREATE (IceCream)-[:CONTAINS]->(Stabilizers)\nCREATE (IceCream)-[:SERVED_AS]->(Dish)\nCREATE (IceCream)-[:SERVED_AS]->(Cone)\nCREATE (IceCream)-[:USED_IN]->(Sundae)\nCREATE (IceCream)-[:USED_IN]->(IceCreamFloat)\nCREATE (IceCream)-[:USED_IN]->(Milkshake)\nCREATE (IceCream)-[:USED_IN]->(IceCreamCake)\nCREATE (IceCream)-[:USED_IN]->(BakedAlaska)\nCREATE (Gelato)-[:IS]->(IceCream)\nCREATE (FrozenCustard)-[:IS]->(IceCream)\nCREATE (SoftServe)-[:IS]->(IceCream)\nCREATE (MilkAlternatives)-[:USED_IN]->(IceCream)\nCREATE (BananaIceCream)-[:IS]->(IceCream)\nCREATE (FrozenYogurt)-[:SIMILAR_TO]->(IceCream)\nCREATE (Sorbet)-[:SIMILAR_TO]->(IceCream)\nCREATE (Persia)-[:ORIGIN_OF]->(IceCream)\nCREATE (Rome)-[:ORIGIN_OF]->(IceCream)\nCREATE (Japan)-[:ORIGIN_OF]->(Kakigori)\nCREATE (Mughal)-[:ORIGIN_OF]->(Kulfi)\nCREATE (India)-[:ORIGIN_OF]->(Kulfi)\nCREATE (Europe)-[:SPREAD_TO]->(IceCream)\nCREATE (Italy)-[:SPREAD_TO]->(IceCream)\nCREATE (France)-[:SPREAD_TO]->(IceCream)\nCREATE (England)-[:SPREAD_TO]->(IceCream)\nCREATE (UnitedStates)-[:SPREAD_TO]->(IceCream)\nCREATE (NewZealand)-[:SPREAD_TO]->(IceCream)\n```\n\nThis query creates nodes for the main entities mentioned in the text, such as different types of frozen desserts (ice cream, gelato, frozen custard, etc.), locations (Persia, Rome, Japan, etc.), and other related concepts. It then creates relationships between these entities based on the information provided in the text, such as the ingredients used to make ice cream, the ways it is served, its origins and spread, and the similarities and differences between related frozen desserts.",
    "summary": {
      "Syntax Errors": 15,
      "Correctly Created Nodes": 19,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 32,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 34,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 8.101634979248047
  },
  {
    "url": "https://en.wikipedia.org/wiki/Great_Wall_of_China",
    "queries": "Here are some sample CYPHER queries to create a knowledge graph based on the given text:\n\n```cypher\n// Create nodes for the different entities\nCREATE (GreatWall:Structure {name: \"Great Wall of China\"})\nCREATE (QinShiHuang:Person {name: \"Qin Shi Huang\"})\nCREATE (MingDynasty:Dynasty {name: \"Ming Dynasty\"})\nCREATE (Mongols:Group {name: \"Mongols\"})\nCREATE (Manchus:Group {name: \"Manchus\"})\nCREATE (Shanhaiguan:Location {name: \"Shanhaiguan Pass\"})\nCREATE (JiaYuPass:Location {name: \"Jiayu Pass\"})\nCREATE (YinChuanCity:Location {name: \"Yinchuan\"})\nCREATE (PiantouPass:Location {name: \"Piantou Pass\"})\nCREATE (BadalingGreatWall:Location {name: \"Badaling Great Wall\"})\nCREATE (JuYongPass:Location {name: \"Juyong Pass\"})\nCREATE (JinshanlingGreatWall:Location {name: \"Jinshanling Great Wall\"})\nCREATE (MutianYuGreatWall:Location {name: \"Mutianyu Great Wall\"})\nCREATE (ShanHaiPass:Location {name: \"Shanhai Pass\"})\nCREATE (JiaoShanGreatWall:Location {name: \"Jiaoshan Great Wall\"})\nCREATE (JiuMenKou:Location {name: \"Jiumenkou\"})\n\n// Create relationships between the entities\nMATCH (GreatWall),(QinShiHuang) \nCREATE (GreatWall)-[:BUILT_BY]->(QinShiHuang)\n\nMATCH (GreatWall),(MingDynasty)\nCREATE (GreatWall)-[:EXPANDED_BY]->(MingDynasty)  \n\nMATCH (GreatWall),(Mongols)\nCREATE (GreatWall)-[:DEFENDED_AGAINST]->(Mongols)\n\nMATCH (GreatWall),(Manchus)\nCREATE (GreatWall)-[:CONQUERED_BY]->(Manchus)\n\nMATCH (GreatWall),(Shanhaiguan)\nCREATE (GreatWall)-[:INCLUDES]->(Shanhaiguan)\n\nMATCH (GreatWall),(JiaYuPass)\nCREATE (GreatWall)-[:INCLUDES]->(JiaYuPass)\n\nMATCH (GreatWall),(YinChuanCity)\nCREATE (GreatWall)-[:INCLUDES]->(YinChuanCity)\n\nMATCH (GreatWall),(PiantouPass)\nCREATE (GreatWall)-[:INCLUDES]->(PiantouPass)\n\nMATCH (GreatWall),(BadalingGreatWall)\nCREATE (GreatWall)-[:INCLUDES]->(BadalingGreatWall)\n\nMATCH (GreatWall),(JuYongPass)\nCREATE (GreatWall)-[:INCLUDES]->(JuYongPass)\n\nMATCH (GreatWall),(JinshanlingGreatWall)\nCREATE (GreatWall)-[:INCLUDES]->(JinshanlingGreatWall)\n\nMATCH (GreatWall),(MutianYuGreatWall)\nCREATE (GreatWall)-[:INCLUDES]->(MutianYuGreatWall)\n\nMATCH (GreatWall),(ShanHaiPass)\nCREATE (GreatWall)-[:INCLUDES]->(ShanHaiPass)\n\nMATCH (GreatWall),(JiaoShanGreatWall)\nCREATE (GreatWall)-[:INCLUDES]->(JiaoShanGreatWall)\n\nMATCH (GreatWall),(JiuMenKou)\nCREATE (GreatWall)-[:INCLUDES]->(JiuMenKou)\n```\n\nThis creates a basic knowledge graph with nodes for the major entities (Great Wall, Qin Shi Huang, Ming Dynasty, Mongols, Manchus, and various locations along the Great Wall) and relationships between them. The relationships capture the key information from the text, such as the Great Wall being built by Qin Shi Huang, expanded by the Ming Dynasty, defending against the Mongols, and being conquered by the Manchus. The locations along the Great Wall are also connected to the overall Great Wall entity.\n\nYou can further extend this knowledge graph by adding more detailed information about the construction, defensive purposes, and historical significance of the Great Wall. You could also incorporate additional entities and relationships based on the details provided in the text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 16,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 15,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 15,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 8.159659147262573
  },
  {
    "url": "https://en.wikipedia.org/wiki/Octopus",
    "queries": "Here are the CYPHER queries to create a knowledge graph based on the entities and relationships identified in the given text:\n\n// Create Nodes for the entities\nCREATE \n  (octopus:Entity {name: \"Octopus\", type: \"Animal\"}),\n  (cephalopod:Entity {name: \"Cephalopod\", type: \"Class\"}),\n  (mollusk:Entity {name: \"Mollusk\", type: \"Phylum\"}),\n  (order:Entity {name: \"Octopoda\", type: \"Order\"}),\n  (species:Entity {name: \"300 species\", type: \"Species\"}),\n  (eyes:Entity {name: \"Eyes\", type: \"Anatomy\"}),\n  (beak:Entity {name: \"Beak\", type: \"Anatomy\"}),\n  (arms:Entity {name: \"Arms\", type: \"Anatomy\"}),\n  (suckers:Entity {name: \"Suckers\", type: \"Anatomy\"}),\n  (siphon:Entity {name: \"Siphon\", type: \"Anatomy\"}),\n  (nervoussystem:Entity {name: \"Nervous System\", type: \"Anatomy\"}),\n  (brain:Entity {name: \"Brain\", type: \"Anatomy\"}),\n  (circulatorysystem:Entity {name: \"Circulatory System\", type: \"Anatomy\"}),\n  (hearts:Entity {name: \"Hearts\", type: \"Anatomy\"}),\n  (respiratory:Entity {name: \"Respiratory System\", type: \"Anatomy\"}),\n  (digestivesystem:Entity {name: \"Digestive System\", type: \"Anatomy\"}),\n  (osmoregulation:Entity {name: \"Osmoregulation\", type: \"Anatomy\"}),\n  (kidneys:Entity {name: \"Kidneys\", type: \"Anatomy\"}),\n  (statocysts:Entity {name: \"Statocysts\", type: \"Anatomy\"}),\n  (inksac:Entity {name: \"Ink Sac\", type: \"Anatomy\"}),\n  (reproduction:Entity {name: \"Reproduction\", type: \"Process\"}),\n  (hectocotylus:Entity {name: \"Hectocotylus\", type: \"Anatomy\"}),\n  (spermatophores:Entity {name: \"Spermatophores\", type: \"Anatomy\"}),\n  (eggs:Entity {name: \"Eggs\", type: \"Anatomy\"}),\n  (giant_pacific_octopus:Entity {name: \"Giant Pacific Octopus\", type: \"Species\"})\n\n// Create Relationships between the entities\nCREATE\n  (octopus)-[:IS_A]->(cephalopod),\n  (cephalopod)-[:IS_A]->(mollusk),\n  (octopus)-[:BELONGS_TO]->(order),\n  (order)-[:HAS]->(species),\n  (octopus)-[:HAS]->(eyes),\n  (octopus)-[:HAS]->(beak),\n  (octopus)-[:HAS]->(arms),\n  (arms)-[:HAS]->(suckers),\n  (octopus)-[:HAS]->(siphon),\n  (octopus)-[:HAS]->(nervoussystem),\n  (nervoussystem)-[:HAS]->(brain),\n  (octopus)-[:HAS]->(circulatorysystem),\n  (circulatorysystem)-[:HAS]->(hearts),\n  (octopus)-[:HAS]->(respiratory),\n  (octopus)-[:HAS]->(digestivesystem),\n  (octopus)-[:HAS]->(osmoregulation),\n  (osmoregulation)-[:HAS]->(kidneys),\n  (octopus)-[:HAS]->(statocysts),\n  (octopus)-[:HAS]->(inksac),\n  (octopus)-[:UNDERGOES]->(reproduction),\n  (reproduction)-[:HAS]->(hectocotylus),\n  (reproduction)-[:HAS]->(spermatophores),\n  (reproduction)-[:HAS]->(eggs),\n  (giant_pacific_octopus)-[:IS_A]->(octopus)",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 25,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 22,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 22,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 7.3101959228515625
  },
  {
    "url": "https://en.wikipedia.org/wiki/Serbia",
    "queries": "Here are the CYPHER queries for creating a knowledge graph based on the relationships between entities identified in the given text:\n\n```\n// Create nodes for the countries and regions\nCREATE\n  (Serbia:Country {name: \"Serbia\"}),\n  (Hungary:Country {name: \"Hungary\"}),\n  (Romania:Country {name: \"Romania\"}),\n  (Bulgaria:Country {name: \"Bulgaria\"}),\n  (NorthMacedonia:Country {name: \"North Macedonia\"}),\n  (Croatia:Country {name: \"Croatia\"}),\n  (BosniaAndHerzegovina:Country {name: \"Bosnia and Herzegovina\"}),\n  (Montenegro:Country {name: \"Montenegro\"}),\n  (Albania:Country {name: \"Albania\"}),\n  (Kosovo:Region {name: \"Kosovo\"}),\n  (Vojvodina:Region {name: \"Vojvodina\"}),\n  (Srem:Region {name: \"Srem\"}),\n  (Backa:Region {name: \"Backa\"}),\n  (Banat:Region {name: \"Banat\"}),\n  (Ra\u0161ka:Region {name: \"Ra\u0161ka\"}),\n  (Metohija:Region {name: \"Metohija\"}),\n  (VardarianMacedonia:Region {name: \"Vardarian Macedonia\"})\n\n// Create relationships between countries and regions\nCREATE\n  (Serbia)-[:BORDERS]->(Hungary),\n  (Serbia)-[:BORDERS]->(Romania),\n  (Serbia)-[:BORDERS]->(Bulgaria),\n  (Serbia)-[:BORDERS]->(NorthMacedonia),\n  (Serbia)-[:BORDERS]->(Croatia),\n  (Serbia)-[:BORDERS]->(BosniaAndHerzegovina),\n  (Serbia)-[:BORDERS]->(Montenegro),\n  (Serbia)-[:CLAIMS_BORDER_WITH]->(Albania),\n  (Serbia)-[:INCLUDES]->(Kosovo),\n  (Serbia)-[:INCLUDES]->(Vojvodina),\n  (Serbia)-[:INCLUDES]->(Srem),\n  (Serbia)-[:INCLUDES]->(Backa),\n  (Serbia)-[:INCLUDES]->(Banat),\n  (Serbia)-[:INCLUDES]->(Ra\u0161ka),\n  (Serbia)-[:INCLUDES]->(Metohija),\n  (Serbia)-[:INCLUDES]->(VardarianMacedonia)\n\n// Create nodes for other entities\nCREATE\n  (Belgrade:City {name: \"Belgrade\"}),\n  (Nis:City {name: \"Nis\"}),\n  (Kragujevac:City {name: \"Kragujevac\"}),\n  (NoviSad:City {name: \"Novi Sad\"}),\n  (Banjica:ConcentrationCamp {name: \"Banjica Concentration Camp\"}),\n  (WhiteSerbia:Region {name: \"White Serbia\"}),\n  (Francia:Region {name: \"Francia\"}),\n  (SerbianRevolution:Event {name: \"Serbian Revolution\"}),\n  (FirstWorldWar:Event {name: \"First World War\"}),\n  (CorfulDeclaration:Event {name: \"Corfu Declaration\"}),\n  (KingdomOfSerbs:Event {name: \"Kingdom of Serbs, Croats and Slovenes\"}),\n  (Axis_Invasion:Event {name: \"Axis Invasion of Yugoslavia\"}),\n  (CivilWar:Event {name: \"Yugoslav Civil War\"})\n\n// Create relationships between entities\nCREATE\n  (Serbia)-[:CAPITAL]->(Belgrade),\n  (Serbia)-[:LARGEST_CITY]->(Belgrade),\n  (Serbia)-[:HAS_CITY]->(Nis),\n  (Serbia)-[:HAS_CITY]->(Kragujevac),\n  (Serbia)-[:HAS_CITY]->(NoviSad),\n  (Serbia)-[:HAS_CONCENTRATION_CAMP]->(Banjica),\n  (WhiteSerbia)-[:LOCATED_IN]->(Francia),\n  (Serbia)-[:ORIGINATED_FROM]->(WhiteSerbia),\n  (Serbia)-[:EXPERIENCED]->(SerbianRevolution),\n  (Serbia)-[:PARTICIPATED_IN]->(FirstWorldWar),\n  (Serbia)-[:SIGNED]->(CorfulDeclaration),\n  (Serbia)-[:FORMED]->(KingdomOfSerbs),\n  (Serbia)-[:EXPERIENCED]->(Axis_Invasion),\n  (Serbia)-[:EXPERIENCED]->(CivilWar)\n```\n\nThis query creates nodes for the various countries, regions, cities, events, and other entities mentioned in the text, and establishes relationships between them based on the information provided. The resulting knowledge graph can be used for further analysis and exploration of the entities and their connections.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 31,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 30,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 30,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 8.106963872909546
  }
]
