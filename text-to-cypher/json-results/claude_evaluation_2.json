[
    {
        "url": "https://en.wikipedia.org/wiki/List_of_fictional_robots_and_androids",
        "queries": "Based on the given text, we can create the following CYPHER queries to construct a knowledge graph:\n\n1. Create the \"Robot\" node type:\n\n```cypher\nCREATE (:Robot {name: \"Robot\"})\n```\n\n2. Create the \"Android\" node type:\n\n```cypher\nCREATE (:Android {name: \"Android\"})\n```\n\n3. Create the \"Gynoid\" node type:\n\n```cypher\nCREATE (:Gynoid {name: \"Gynoid\"})\n```\n\n4. Create the \"Medium\" node type and relationships between \"Robot\", \"Android\", \"Gynoid\" and \"Medium\":\n\n```cypher\nCREATE (literature:Medium {name: \"Literature\"})\nCREATE (television:Medium {name: \"Television\"})\nCREATE (cinema:Medium {name: \"Cinema\"})\n\nCREATE (robot:Robot)-[:DEPICTED_IN]->(literature)\nCREATE (robot:Robot)-[:DEPICTED_IN]->(television)\nCREATE (robot:Robot)-[:DEPICTED_IN]->(cinema)\n\nCREATE (android:Android)-[:DEPICTED_IN]->(literature)\nCREATE (android:Android)-[:DEPICTED_IN]->(television)\nCREATE (android:Android)-[:DEPICTED_IN]->(cinema)\n\nCREATE (gynoid:Gynoid)-[:DEPICTED_IN]->(literature)\nCREATE (gynoid:Gynoid)-[:DEPICTED_IN]->(television)\nCREATE (gynoid:Gynoid)-[:DEPICTED_IN]->(cinema)\n```\n\n5. Create the \"Concept\" node type and relationship between \"Robot\" and \"Concept\":\n\n```cypher\nCREATE (:Concept {name: \"Concept\"})\n\nCREATE (robot:Robot)-[:DEVELOPED_IN]->(concept:Concept)\n```\n\n6. Create the \"Work\" node type and relationship between \"Work\" and \"Medium\":\n\n```cypher\nCREATE (:Work {name: \"Work\"})\n\nCREATE (work:Work)-[:DEPICTED_IN]->(literature)\nCREATE (work:Work)-[:DEPICTED_IN]->(television)\nCREATE (work:Work)-[:DEPICTED_IN]->(cinema)\n```\n\n7. Create the \"Creator\" node type and relationship between \"Work\" and \"Creator\":\n\n```cypher\nCREATE (:Creator {name: \"Creator\"})\n\nCREATE (work:Work)-[:CREATED_BY]->(creator:Creator)\n```\n\n8. Create the specific \"R.U.R. (Rossum's Universal Robots)\" work and its relationship with the \"Creator\" node:\n\n```cypher\nCREATE (rur:Work {name: \"R.U.R. (Rossum's Universal Robots)\"})\nCREATE (rur)-[:CREATED_BY]->(creator:Creator {name: \"Karel \u010capek\"})\n```\n\nThese CYPHER queries create a knowledge graph that captures the relationships between entities (Robots, Androids, Gynoids, Medium, Concept, Work, and Creator) identified in the given text.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 8,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 14,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 14,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 5.516839265823364
    },
    {
        "url": "https://en.wikipedia.org/wiki/Abacus",
        "queries": "Here are some CYPHER queries that can be used to create a knowledge graph encapsulating the relationships between entities in the given text:\n\n```cypher\n// Create nodes for the main entities\nCREATE (Abacus:Entity {name: \"Abacus\"})\nCREATE (AncientNearEast:Entity {name: \"Ancient Near East\"})\nCREATE (Europe:Entity {name: \"Europe\"})\nCREATE (China:Entity {name: \"China\"})\nCREATE (Russia:Entity {name: \"Russia\"})\nCREATE (ArabicNumeralSystem:Entity {name: \"Arabic Numeral System\"})\nCREATE (Bead:Entity {name: \"Bead\"})\nCREATE (CalculatingTool:Entity {name: \"Calculating Tool\"})\nCREATE (Calculation:Entity {name: \"Calculation\"})\nCREATE (Addition:Entity {name: \"Addition\"})\nCREATE (Subtraction:Entity {name: \"Subtraction\"})\nCREATE (Multiplication:Entity {name: \"Multiplication\"})\nCREATE (Division:Entity {name: \"Division\"})\nCREATE (SquareRoot:Entity {name: \"Square Root\"})\nCREATE (CubeRoot:Entity {name: \"Cube Root\"})\nCREATE (PositionalNumeralSystem:Entity {name: \"Positional Numeral System\"})\nCREATE (BaseTen:Entity {name: \"Base Ten\"})\nCREATE (BiQuinaryCodedDecimal:Entity {name: \"Bi-Quinary Coded Decimal\"})\nCREATE (RomanNumerals:Entity {name: \"Roman Numerals\"})\nCREATE (EastAsianNumerals:Entity {name: \"East Asian Numerals\"})\nCREATE (NaturalNumbers:Entity {name: \"Natural Numbers\"})\nCREATE (FractionalComponents:Entity {name: \"Fractional Components\"})\nCREATE (DecimalPoint:Entity {name: \"Decimal Point\"})\nCREATE (FixedPointArithmetic:Entity {name: \"Fixed-Point Arithmetic\"})\nCREATE (AncientWorld:Entity {name: \"Ancient World\"})\nCREATE (Calculators:Entity {name: \"Calculators\"})\nCREATE (Computers:Entity {name: \"Computers\"})\nCREATE (WritingImplementAndPaper:Entity {name: \"Writing Implement and Paper\"})\nCREATE (ElectricPowerSource:Entity {name: \"Electric Power Source\"})\nCREATE (Merchants:Entity {name: \"Merchants\"})\nCREATE (Traders:Entity {name: \"Traders\"})\nCREATE (Clerks:Entity {name: \"Clerks\"})\nCREATE (EasternEurope:Entity {name: \"Eastern Europe\"})\nCREATE (Africa:Entity {name: \"Africa\"})\nCREATE (TableGames:Entity {name: \"Table Games\"})\nCREATE (VisualImpairment:Entity {name: \"Visual Impairment\"})\nCREATE (Calculator:Entity {name: \"Calculator\"})\nCREATE (Mathematics:Entity {name: \"Mathematics\"})\nCREATE (Children:Entity {name: \"Children\"})\nCREATE (MiddleEnglish:Entity {name: \"Middle English\"})\nCREATE (Latin:Entity {name: \"Latin\"})\nCREATE (AncientGreek:Entity {name: \"Ancient Greek\"})\nCREATE (NorthwestSemiticLanguage:Entity {name: \"Northwest Semitic Language\"})\nCREATE (Phoenician:Entity {name: \"Phoenician\"})\nCREATE (Hebrew:Entity {name: \"Hebrew\"})\nCREATE (Sumerian:Entity {name: \"Sumerian\"})\nCREATE (Babylonian:Entity {name: \"Babylonian\"})\nCREATE (OldBabylonian:Entity {name: \"Old Babylonian\"})\nCREATE (Herodotus:Entity {name: \"Herodotus\"})\nCREATE (AncientEgypt:Entity {name: \"Ancient Egypt\"})\nCREATE (Achaemenid:Entity {name: \"Achaemenid\"})\nCREATE (Parthian:Entity {name: \"Parthian\"})\nCREATE (Sassanian:Entity {name: \"Sassanian\"})\nCREATE (IranianEmpires:Entity {name: \"Iranian Empires\"})\nCREATE (India:Entity {name: \"India\"})\nCREATE (RomanEmpire:Entity {name: \"Roman Empire\"})\nCREATE (Etruscan:Entity {name: \"Etruscan\"})\nCREATE (AncientRome:Entity {name: \"Ancient Rome\"})\nCREATE (WesternChristianWorld:Entity {name: \"Western Christian World\"})\nCREATE (FrenchRevolution:Entity {name: \"French Revolution\"})\nCREATE (SalamisTeblet:Entity {name: \"Salamis Tablet\"})\nCREATE (DariusVase:Entity {name: \"Darius Vase\"})\nCREATE (RomanNumeralSystem:Entity {name: \"Roman Numeral System\"})\nCREATE (Horace:Entity {name: \"Horace\"})\nCREATE (WaxAbacus:Entity {name: \"Wax Abacus\"})\nCREATE (Stylus:Entity {name: \"Stylus\"})\nCREATE (CounterCasting:Entity {name: \"Counter Casting\"})\nCREATE (MedievalEurope:Entity {name: \"Medieval Europe\"})\nCREATE (PopeSylvesterII:Entity {name: \"Pope Sylvester II\"})\nCREATE (Beadsonwires:Entity {name: \"Beads on Wires\"})\nCREATE (ChineseAbacus:Entity {name: \"Chinese Abacus\"})\nCREATE (Suanpan:Entity {name: \"Suanpan\"})\nCREATE (HanDynasty:Entity {name: \"Han Dynasty\"})\nCREATE (SongDynasty:Entity {name: \"Song Dynasty\"})\nCREATE (MingDynasty:Entity {name: \"Ming Dynasty\"})\nCREATE (Zhang Zeduan:Entity {name: \"Zhang Zeduan\"})\nCREATE (QingmingFestival:Entity {name: \"Qingming Festival\"})\nCREATE (Apothecary:Entity {name: \"Apothecary\"})\nCREATE (RomanAbacus:Entity {name: \"Roman Abacus\"})\nCREATE (Grooves:Entity {name: \"Grooves\"})\nCREATE (ChineseCountingRods:Entity {name: \"Chinese Counting Rods\"})\nCREATE (Zero:Entity {name: \"Zero\"})\nCREATE (DecimalPoint:Entity {name: \"Decimal Point\"})\nCREATE (TangDynasty:Entity {name: \"Tang Dynasty\"})\nCREATE (India:Entity {name: \"India\"})\nCREATE (MiddleEast:Entity {name: \"Middle East\"})\nCREATE (Vasubandhu:Entity {name: \"Vasubandhu\"})\nCREATE (AbhidharmakoshaBhashya:Entity {name: \"Abhidharmakoshabh\u0101\u1e63ya\"})\nCREATE (Vartika:Entity {name: \"Vartika\"})\nCREATE (Shunya:Entity {name: \"Shunya\"})\nCREATE (Soroban:Entity {name: \"Soroban\"})\nCREATE (Muromachi:Entity {name: \"Muromachi\"})\nCREATE (JapaneseAbacus:Entity {name: \"Japanese Abacus\"})\nCREATE (Aluminium:Entity {name: \"Aluminium\"})\nCREATE (Plastic:Entity {name: \"Plastic\"})\nCREATE (MentalCalculation:Entity {name: \"Mental Calculation\"})\nCREATE (AmcMentalCalculation:Entity {name: \"Abacus-based Mental Calculation\"})\nCREATE (Korea:Entity {name: \"Korea\"})\nCREATE (Goryeo:Entity {name: \"Goryeo\"})\nCREATE (Ming:Entity {name: \"Ming\"})\nCREATE (Aztec:Entity {name: \"Aztec\"})\nCREATE (Mesoamerica:Entity {name: \"Mesoamerica\"})\nCREATE (Nepohualtzintizn:Entity {name: \"Nep\u014dhualtzintzin\"})\nCREATE (Nahuatl:Entity {name: \"Nahuatl\"})\nCREATE (Calmecac:Entity {name: \"Calmecac\"})\nCREATE (Temalpouhqueh:Entity {name: \"Temalpouhqueh\"})\nCREATE (Olmec:Entity {name: \"Olmec\"})\nCREATE (Maya:Entity {name: \"Maya\"})\nCREATE (Inca:Entity {name: \"Inca\"})\nCREATE (Quipu:Entity {name: \"Quipu\"})\nCREATE (Yupana:Entity {name: \"Yupana\"})\nCREATE (Fibonacci:Entity {name: \"Fibonacci\"})\nCREATE (Russia:Entity {name: \"Russia\"})\nCREATE (Schoty:Entity {name: \"Schoty\"})\nCREATE (SovietUnion:Entity {name: \"Soviet Union\"})\nCREATE (Odhner:Entity {name: \"Odhner\"})\nCREATE (Felix:Entity {name: \"Felix\"})\nCREATE (Microcomputer:Entity {name: \"Microcomputer\"})\nCREATE (France:Entity {name: \"France\"})\nCREATE (JeanVictorPoncelet:Entity {name: \"Jean-Victor Poncelet\"})\nCREATE (Napoleon:Entity {name: \"Napoleon\"})\nCREATE (Turkey:Entity {name: \"Turkey\"})\nCREATE (Armenia:Entity {name: \"Armenia\"})\nCREATE (Coulba:Entity {name: \"Coulba\"})\nCREATE (Choreb:Entity {name: \"Choreb\"})\nCREATE (Preschools:Entity {name: \"Preschools\"})\nCREATE (ElementarySchools:Entity {name: \"Elementary Schools\"})\nCREATE (NumericSystem:Entity {name: \"Numeric System\"})\nCREATE (Arithmetic:Entity {name: \"Arithmetic\"})\nCREATE (WesternCountries:Entity {name: \"Western Countries\"})\nCREATE (BeadFrame:Entity {name: \"Bead Frame\"})\nCREATE (PositionalNotation:Entity {name: \"Positional Notation\"})\nCREATE (RekenRek:Entity {name: \"Rekenrek\"})\nCREATE (RichardFeynman:Entity {name: \"Richard Feynman\"})\nCREATE (Brazil:Entity {name: \"Brazil\"})\nCREATE (JapaneseAbacusExpert:Entity {name: \"Japanese Abacus Expert\"})\n\n// Create relationships between the entities\nCREATE\n  (Abacus)-[:USED_IN]->(AncientNearEast),\n  (Abacus)-[:USED_IN]->(Europe),\n  (Abacus)-[:USED_IN]->(China),\n  (Abacus)-[:USED_IN]->(Russia),\n  (Abacus)-[:REPLACED_BY]->(ArabicNumeralSystem),\n  (Abacus)-[:CONSISTS_OF]->(Bead),\n  (Abacus)-[:IS_A]->(CalculatingTool),\n  (Abacus)-[:ENABLES]->(Calculation),\n  (Calculation)-[:INCLUDES]->(Addition),\n  (Calculation)-[:INCLUDES]->(Subtraction),\n  (Calculation)-[:INCLUDES]->(Multiplication),\n  (Calculation)-[:INCLUDES]->(Division),\n  (Calculation)-[:INCLUDES]->(SquareRoot),\n  (Calculation)-[:INCLUDES]->(CubeRoot),\n  (Abacus)-[:USES]->(PositionalNumeralSystem),\n  (PositionalNumeralSystem)-[:INCLUDES]->(BaseTen),\n  (PositionalNumeralSystem)-[:INCLUDES]->(BiQuinaryCodedDecimal),\n  (BiQuinaryCodedDecimal)-[:RELATED_TO]->(RomanNumerals),\n  (BiQuinaryCodedDecimal)-[:RELATED_TO]->(EastAsianNumerals),\n  (Abacus)-[:SUPPORTS]->(NaturalNumbers),\n  (Abacus)-[:SUPPORTS]->(FractionalComponents),\n  (Abacus)-[:SUPPORTS]->(DecimalPoint),\n  (Abacus)-[:SUPPORTS]->(FixedPointArithmetic),\n  (Abacus)-[:USED_IN]->(AncientWorld),",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 97,
            "Incorrectly Created Nodes": 1,
            "Correctly Created Relationships": 21,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 21,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 20.83106780052185
    },
    {
        "url": "https://en.wikipedia.org/wiki/Fulgurite",
        "queries": "Here are the CYPHER queries for creating a knowledge graph based on the given text:\n\n```\n// Create nodes for the entities\nCREATE (Fulgurites:Entity {name: \"Fulgurites\"})\nCREATE (Lightning:Entity {name: \"Lightning\"})\nCREATE (Lechatelierite:Entity {name: \"Lechatelierite\"})\nCREATE (SiO2:Entity {name: \"SiO2\"})\nCREATE (Mineraloids:Entity {name: \"Mineraloids\"})\nCREATE (Quartz:Entity {name: \"Quartz\"})\nCREATE (Polymorphism:Entity {name: \"Polymorphism\"})\nCREATE (Lichtenberg_Figures:Entity {name: \"Lichtenberg Figures\"})\nCREATE (Dielectric_Breakdown:Entity {name: \"Dielectric Breakdown\"})\nCREATE (High_Voltage_Discharges:Entity {name: \"High Voltage Discharges\"})\nCREATE (Silica_Glass:Entity {name: \"Silica Glass\"})\nCREATE (Sediments:Entity {name: \"Sediments\"})\nCREATE (Minerals:Entity {name: \"Minerals\"})\nCREATE (Iron:Entity {name: \"Iron\"})\nCREATE (Copper:Entity {name: \"Copper\"})\nCREATE (Schreibersite:Entity {name: \"Schreibersite\"})\nCREATE (Titanium_Phosphide:Entity {name: \"Titanium Phosphide\"})\nCREATE (Avicenna:Entity {name: \"Avicenna\"})\nCREATE (Al-Biruni:Entity {name: \"Al-Biruni\"})\nCREATE (Leonhard_David_Hermann:Entity {name: \"Leonhard David Hermann\"})\nCREATE (Charles_Darwin:Entity {name: \"Charles Darwin\"})\nCREATE (Horace_B\u00e9n\u00e9dict_de_Saussure:Entity {name: \"Horace B\u00e9n\u00e9dict de Saussure\"})\nCREATE (Alexander_von_Humboldt:Entity {name: \"Alexander von Humboldt\"})\nCREATE (Hentzen:Entity {name: \"Hentzen\"})\nCREATE (Johann_Karl_Wilhelm_Voigt:Entity {name: \"Johann Karl Wilhelm Voigt\"})\nCREATE (Karl_Gustav_Fiedler:Entity {name: \"Karl Gustav Fiedler\"})\n\n// Create relationships between the entities\nCREATE (Fulgurites)-[:FORMED_BY]->(Lightning)\nCREATE (Fulgurites)-[:CONTAINS]->(Lechatelierite)\nCREATE (Fulgurites)-[:CONTAINS]->(SiO2)\nCREATE (Fulgurites)-[:CLASSIFIED_AS]->(Mineraloids)\nCREATE (Fulgurites)-[:CONTAINS]->(Quartz)\nCREATE (Fulgurites)-[:EXHIBITS]->(Polymorphism)\nCREATE (Fulgurites)-[:STRUCTURALLY_SIMILAR_TO]->(Lichtenberg_Figures)\nCREATE (Lichtenberg_Figures)-[:CAUSED_BY]->(Dielectric_Breakdown)\nCREATE (Lichtenberg_Figures)-[:CAUSED_BY]->(High_Voltage_Discharges)\nCREATE (Fulgurites)-[:CONTAINS]->(Silica_Glass)\nCREATE (Fulgurites)-[:FORMED_IN]->(Sediments)\nCREATE (Fulgurites)-[:CONTAINS]->(Minerals)\nCREATE (Fulgurites)-[:CONTAINS]->(Iron)\nCREATE (Fulgurites)-[:CONTAINS]->(Copper)\nCREATE (Fulgurites)-[:CONTAINS]->(Schreibersite)\nCREATE (Fulgurites)-[:CONTAINS]->(Titanium_Phosphide)\nCREATE (Fulgurites)-[:MENTIONED_BY]->(Avicenna)\nCREATE (Fulgurites)-[:MENTIONED_BY]->(Al-Biruni)\nCREATE (Fulgurites)-[:MISINTERPRETED_BY]->(Leonhard_David_Hermann)\nCREATE (Fulgurites)-[:OBSERVED_BY]->(Charles_Darwin)\nCREATE (Fulgurites)-[:OBSERVED_BY]->(Horace_B\u00e9n\u00e9dict_de_Saussure)\nCREATE (Fulgurites)-[:OBSERVED_BY]->(Alexander_von_Humboldt)\nCREATE (Fulgurites)-[:DISCOVERED_BY]->(Hentzen)\nCREATE (Fulgurites)-[:DISCOVERED_BY]->(Johann_Karl_Wilhelm_Voigt)\nCREATE (Fulgurites)-[:DOCUMENTED_BY]->(Karl_Gustav_Fiedler)\n```\n\nThis query creates nodes for the various entities mentioned in the text, such as Fulgurites, Lightning, Lechatelierite, SiO2, Mineraloids, Quartz, Polymorphism, Lichtenberg Figures, Dielectric Breakdown, High Voltage Discharges, Silica Glass, Sediments, Minerals, Iron, Copper, Schreibersite, Titanium Phosphide, and the various scientists and researchers mentioned.\n\nIt then creates relationships between these entities based on the information provided in the text, such as Fulgurites being formed by Lightning, containing Lechatelierite and SiO2, being classified as Mineraloids, containing Quartz, exhibiting Polymorphism, being structurally similar to Lichtenberg Figures, containing Silica Glass, being formed in Sediments, containing Minerals, containing Iron and Copper, containing Schreibersite and Titanium Phosphide, being mentioned by Avicenna and Al-Biruni, being misinterpreted by Leonhard David Hermann, being observed by Charles Darwin, Horace B\u00e9n\u00e9dict de Saussure, and Alexander von Humboldt, and being discovered and documented by various researchers.\n\nThis knowledge graph can be used to explore the relationships between the different entities and to gain insights into the formation and characteristics of Fulgurites.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 26,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 28,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 28,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 10.08122706413269
    },
    {
        "url": "https://en.wikipedia.org/wiki/Albert_A._Michelson",
        "queries": "Here are the CYPHER queries for creating a knowledge graph based on the provided text:\n\n// Create nodes for entities\nCREATE (p:Person {name: \"Albert Abraham Michelson\", birth_year: 1852, death_year: 1931, nationality: \"German-American\"})\nCREATE (u:University {name: \"Case School of Applied Science\"})\nCREATE (u2:University {name: \"University of Chicago\"})\nCREATE (u3:University {name: \"Clark University\"})\nCREATE (u4:University {name: \"US Naval Academy\"})\nCREATE (o:Organization {name: \"Royal Society\"})\nCREATE (o2:Organization {name: \"National Academy of Sciences\"})\nCREATE (o3:Organization {name: \"American Physical Society\"})\nCREATE (o4:Organization {name: \"American Association for the Advancement of Science\"})\nCREATE (a:Award {name: \"Nobel Prize in Physics\"})\nCREATE (a2:Award {name: \"Copley Medal\"})\nCREATE (a3:Award {name: \"Henry Draper Medal\"})\nCREATE (a4:Award {name: \"Gold Medal of the Royal Astronomical Society\"})\nCREATE (a5:Award {name: \"Bomem-Michelson Award\"})\nCREATE (a6:Award {name: \"Michelson\u2013Morley Award\"})\nCREATE (a7:Award {name: \"A.A. Michelson Award\"})\nCREATE (a8:Award {name: \"Albert A. Michelson Award\"})\n\n// Create relationships\nCREATE (p)-[:WORKED_AT]->(u)\nCREATE (p)-[:WORKED_AT]->(u2)\nCREATE (p)-[:WORKED_AT]->(u3)\nCREATE (p)-[:WORKED_AT]->(u4)\nCREATE (p)-[:MEMBER_OF]->(o)\nCREATE (p)-[:MEMBER_OF]->(o2)\nCREATE (p)-[:MEMBER_OF]->(o3)\nCREATE (p)-[:MEMBER_OF]->(o4)\nCREATE (p)-[:RECEIVED]->(a)\nCREATE (p)-[:RECEIVED]->(a2)\nCREATE (p)-[:RECEIVED]->(a3)\nCREATE (p)-[:RECEIVED]->(a4)\nCREATE (p)-[:FOUNDED]->(u)\nCREATE (p)-[:FOUNDED]->(u2)\nCREATE (p)-[:DISCOVERED]->(a5)\nCREATE (p)-[:DISCOVERED]->(a6)\nCREATE (p)-[:DISCOVERED]->(a7)\nCREATE (p)-[:DISCOVERED]->(a8)\n\n// Create relationships for collaborators\nCREATE (p)-[:COLLABORATED_WITH]->(e:Person {name: \"Edward Morley\"})\nCREATE (p)-[:COLLABORATED_WITH]->(e2:Person {name: \"Simon Newcomb\"})\nCREATE (p)-[:COLLABORATED_WITH]->(e3:Person {name: \"Francis G. Pease\"})\nCREATE (p)-[:COLLABORATED_WITH]->(e4:Person {name: \"Fred Pearson\"})\nCREATE (p)-[:RELATED_TO]->(e5:Person {name: \"Peter Michelson\"})\n\n// Create relationships for Michelson-Morley experiment\nCREATE (p)-[:CONDUCTED]->(e:ExperimentEntity {name: \"Michelson-Morley experiment\"})\nCREATE (e)-[:INFLUENCED]->(e6:Person {name: \"Hendrik Lorentz\"})\nCREATE (e)-[:INFLUENCED]->(e7:Person {name: \"Albert Einstein\"})\nCREATE (e)-[:INFLUENCED]->(e8:Person {name: \"Dayton Miller\"})\nCREATE (e)-[:INFLUENCED]->(e9:Person {name: \"Robert Shankland\"})\n\n// Create relationships for other experiments and inventions\nCREATE (p)-[:CONDUCTED]->(e10:ExperimentEntity {name: \"Measurement of the speed of light\"})\nCREATE (p)-[:INVENTED]->(e11:InventionEntity {name: \"Harmonic analyzer\"})\nCREATE (p)-[:MEASURED]->(e12:ExperimentEntity {name: \"Stellar diameters and binary star separations\"})\nCREATE (p)-[:CONTRIBUTED_TO]->(e13:ExperimentEntity {name: \"Gravitational wave detection\"})",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 25,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 34,
            "Incorrectly Created Relationships": 4,
            "Correctly Labelled Relationships": 34,
            "Incorrectly Labelled Relationships": 4
        },
        "execution_time_in_seconds": 7.335217237472534
    },
    {
        "url": "https://en.wikipedia.org/wiki/History_of_the_bicycle",
        "queries": "Here are the CYPHER QUERIES for creating a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```\n// Create node for Vehicles with two wheels and require balancing\nCREATE (vehicles_two_wheels:Entity {name: \"Vehicles with two wheels and require balancing\"})\n\n// Create node for Draisine\nCREATE (draisine:Entity {name: \"Draisine\"})\nMERGE (vehicles_two_wheels)-[:INCLUDES]->(draisine)\n\n// Create node for Bicycle\nCREATE (bicycle:Entity {name: \"Bicycle\"})\nMERGE (vehicles_two_wheels)-[:INCLUDES]->(bicycle)\n\n// Create node for Penny Farthing\nCREATE (penny_farthing:Entity {name: \"Penny Farthing\"})\nMERGE (bicycle)-[:SUBTYPE_OF]->(penny_farthing)\n\n// Create node for Rikushu-honsha (Pedal-powered tricycle in Japan)\nCREATE (rikushu_honsha:Entity {name: \"Rikushu-honsha\"})\nMERGE (vehicles_two_wheels)-[:INCLUDES]->(rikushu_honsha)\n\n// Create node for Karl von Drais\nCREATE (karl_von_drais:Entity {name: \"Karl von Drais\"})\nMERGE (draisine)-[:INVENTED_BY]->(karl_von_drais)\n\n// Create node for Denis Johnson\nCREATE (denis_johnson:Entity {name: \"Denis Johnson\"})\nMERGE (bicycle)-[:IMPROVED_BY]->(denis_johnson)\n\n// Create node for Kirkpatrick Macmillan\nCREATE (kirkpatrick_macmillan:Entity {name: \"Kirkpatrick Macmillan\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(kirkpatrick_macmillan)\n\n// Create node for Gavin Dalzell\nCREATE (gavin_dalzell:Entity {name: \"Gavin Dalzell\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(gavin_dalzell)\n\n// Create node for Thomas McCall\nCREATE (thomas_mccall:Entity {name: \"Thomas McCall\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(thomas_mccall)\n\n// Create node for Philipp Moritz Fischer\nCREATE (philipp_moritz_fischer:Entity {name: \"Philipp Moritz Fischer\"})\nMERGE (bicycle)-[:INVENTED_PEDALS]->(philipp_moritz_fischer)\n\n// Create node for Ernest Michaux\nCREATE (ernest_michaux:Entity {name: \"Ernest Michaux\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(ernest_michaux)\n\n// Create node for Pierre Lallement\nCREATE (pierre_lallement:Entity {name: \"Pierre Lallement\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(pierre_lallement)\n\n// Create node for Alexandre Lefebvre\nCREATE (alexandre_lefebvre:Entity {name: \"Alexandre Lefebvre\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(alexandre_lefebvre)\n\n// Create node for Aim\u00e9 Olivier\nCREATE (aime_olivier:Entity {name: \"Aim\u00e9 Olivier\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(aime_olivier)\n\n// Create node for Ren\u00e9 Olivier\nCREATE (rene_olivier:Entity {name: \"Ren\u00e9 Olivier\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(rene_olivier)\n\n// Create node for Georges de la Bouglise\nCREATE (georges_de_la_bouglise:Entity {name: \"Georges de la Bouglise\"})\nMERGE (bicycle)-[:EARLY_DESIGN]->(georges_de_la_bouglise)\n\n// Create node for William Van Anden\nCREATE (william_van_anden:Entity {name: \"William Van Anden\"})\nMERGE (bicycle)-[:INVENTED_FREEWHEEL]->(william_van_anden)\n\n// Create node for Eug\u00e8ne Meyer\nCREATE (eugene_meyer:Entity {name: \"Eug\u00e8ne Meyer\"})\nMERGE (penny_farthing)-[:INVENTED]->(eugene_meyer)\n\n// Create node for James Starley\nCREATE (james_starley:Entity {name: \"James Starley\"})\nMERGE (penny_farthing)-[:IMPROVED]->(james_starley)\n\n// Create node for Frank Weston\nCREATE (frank_weston:Entity {name: \"Frank Weston\"})\nMERGE (bicycle)-[:IMPORTED_TO_US]->(frank_weston)\n\n// Create node for Albert Augustus Pope\nCREATE (albert_augustus_pope:Entity {name: \"Albert Augustus Pope\"})\nMERGE (bicycle)-[:MANUFACTURED_IN_US]->(albert_augustus_pope)\n\n// Create node for G.W. Pressey\nCREATE (g_w_pressey:Entity {name: \"G.W. Pressey\"})\nMERGE (penny_farthing)-[:INVENTED_AMERICAN_STAR_BICYCLE]->(g_w_pressey)\n\n// Create node for John Kemp Starley\nCREATE (john_kemp_starley:Entity {name: \"John Kemp Starley\"})\nMERGE (safety_bicycle:Entity {name: \"Safety Bicycle\"})-[:INVENTED_BY]->(john_kemp_starley)\n\n// Create node for John Dunlop\nCREATE (john_dunlop:Entity {name: \"John Dunlop\"})\nMERGE (safety_bicycle)-[:IMPROVED_BY]->(john_dunlop)\n\n// Create node for Isaac R. Johnson\nCREATE (isaac_r_johnson:Entity {name: \"Isaac R. Johnson\"})\nMERGE (safety_bicycle)-[:INVENTED_FOLDING_BICYCLE]->(isaac_r_johnson)\n\n// Create node for Hosea W. Libbey\nCREATE (hosea_w_libbey:Entity {name: \"Hosea W. Libbey\"})\nMERGE (bicycle)-[:INVENTED_ELECTRIC_BICYCLE]->(hosea_w_libbey)\n```\n\nThis set of CYPHER queries creates a knowledge graph with the following relationships:\n\n1. Vehicles with two wheels and require balancing includes the Draisine, Bicycle, and Rikushu-honsha.\n2. The Bicycle includes the Penny Farthing as a subtype.\n3. The Draisine was invented by Karl von Drais.\n4. The Bicycle was improved by Denis Johnson.\n5. The Bicycle had early designs by Kirkpatrick Macmillan, Gavin Dalzell, Thomas McCall, Ernest Michaux, Pierre Lallement, Alexandre Lefebvre, Aim\u00e9 Olivier, Ren\u00e9 Olivier, and Georges de la Bouglise.\n6. Philipp Moritz Fischer invented the pedals for the Bicycle.\n7. William Van Anden invented the freewheel for the Bicycle.\n8. Eug\u00e8ne Meyer invented the Penny Farthing, and James Starley improved it.\n9. Frank Weston imported the Bicycle to the US, and Albert Augustus Pope manufactured it in the US.\n10. G.W. Pressey invented the American Star Bicycle, a variant of the Penny Farthing.\n11. John Kemp Starley invented the Safety Bicycle, which was improved by John Dunlop and had a folding design invented by Isaac R. Johnson.\n12. Hosea W. Libbey invented the first electric bicycle.\n\nThis knowledge graph can be used to explore the relationships between the various entities involved in the history and development of bicycles.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 24,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 24,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 24,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 13.06663990020752
    },
    {
        "url": "https://en.wikipedia.org/wiki/Battle_of_the_Boyne",
        "queries": "Based on the information provided in the text, here are the CYPHER queries to create a knowledge graph encapsulating the key relationships between entities:\n\n```\n// Create nodes for the main entities\nCREATE (battle:Event {name: \"Battle of the Boyne\", date: \"1690-07-01\"})\nCREATE (james:Person {name: \"James II\"})\nCREATE (william:Person {name: \"William III\"})\nCREATE (mary:Person {name: \"Mary II\"})\nCREATE (louis:Person {name: \"Louis XIV\"})\nCREATE (schomberg:Person {name: \"Duke of Schomberg\"})\nCREATE (talbot:Person {name: \"Richard Talbot, 1st Earl of Tyrconnell\"})\nCREATE (cotter:Person {name: \"Sir James Fitz Edmond Cotter\"})\nCREATE (lauzun:Person {name: \"Lauzun\"})\nCREATE (tettau:Person {name: \"Ernst von Tettau\"})\nCREATE (berwick:Person {name: \"James FitzJames, 1st Duke of Berwick\"})\nCREATE (ginkel:Person {name: \"Godert de Ginkel\"})\nCREATE (sarsfield:Person {name: \"Patrick Sarsfield\"})\n\n// Create relationships between entities\nMATCH (battle)-[:INVOLVED]->(james)\nMATCH (battle)-[:INVOLVED]->(william)\nMATCH (william)-[:SPOUSE]->(mary)\nMATCH (james)-[:RELATIVE]->(louis)\nMATCH (battle)-[:COMMANDED]->(schomberg)\nMATCH (battle)-[:COMMANDED]->(talbot)\nMATCH (battle)-[:COMMANDED]->(cotter)\nMATCH (battle)-[:COMMANDED]->(lauzun)\nMATCH (battle)-[:COMMANDED]->(tettau)\nMATCH (battle)-[:COMMANDED]->(berwick)\nMATCH (battle)-[:COMMANDED]->(ginkel)\nMATCH (sarsfield)-[:INVOLVED]->(battle)\n\n// Create additional relationships if needed\nMATCH (battle)-[:OCCURRED_IN]->(ireland)\nMATCH (battle)-[:RESULT]->(protestant_ascendancy)\nMATCH (battle)-[:PART_OF]->(war_of_the_grand_alliance)\nMATCH (battle)-[:CAUSED]->(james_fled_to_france)\nMATCH (battle)-[:LED_TO]->(treaty_of_limerick)\n```\n\nThis query creates nodes for the main entities involved in the Battle of the Boyne, such as the battle itself, the key historical figures, and the events and outcomes associated with the battle. It then creates relationships between these entities to capture the relevant connections, such as the involvement of various commanders in the battle, the relationship between William, Mary, and James, and the broader context of the battle within the larger conflict.\n\nYou can further extend this knowledge graph by adding more entities and relationships as needed to fully capture the details and context provided in the given text.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 13,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 14,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 14,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 6.547699213027954
    },
    {
        "url": "https://en.wikipedia.org/wiki/Moonlight",
        "queries": "Here are the CYPHER queries to create a knowledge graph based on the given text:\n\n```\n// Create nodes for entities\nCREATE\n  (Moonlight:Entity {name: \"Moonlight\"}),\n  (Sun:Entity {name: \"Sun\"}),\n  (Moon:Entity {name: \"Moon\"}),\n  (Anaxagoras:Entity {name: \"Anaxagoras\"}),\n  (FullMoon:Entity {name: \"Full Moon\"}),\n  (Perigee:Entity {name: \"Perigee\"}),\n  (Tropics:Entity {name: \"Tropics\"}),\n  (PurkynjeEffect:Entity {name: \"Purkinje effect\"}),\n  (BondAlbedo:Entity {name: \"Bond albedo\"}),\n  (Werewolf:Entity {name: \"Werewolf\"}),\n  (Lunatics:Entity {name: \"Lunatics\"}),\n  (NyctalopiaNightBlindness:Entity {name: \"Nyctalopia (night blindness)\"}),\n  (MoonmilkCaves:Entity {name: \"Moonmilk (caves)\"}),\n  (KatiePaterson:Entity {name: \"Katie Paterson\"}),\n  (LightBulbSimulatingMoonlight:Entity {name: \"Light bulb to Simulate Moonlight\"})\n\n// Create relationships between entities\nCREATE\n  (Moonlight)-[:CONSISTS_OF]->(Sun),\n  (Moonlight)-[:CONSISTS_OF]->(Earthlight),\n  (Moonlight)-[:ILLUMINATES]->(Moon),\n  (Sun)-[:PROVIDES_BRIGHTNESS_TO]->(Moon),\n  (Anaxagoras)-[:AWARE_THAT]->(Moonlight),\n  (FullMoon)-[:HAS_ILLUMINANCE]->(Lux),\n  (Perigee)-[:RELATED_TO]->(FullMoon),\n  (Tropics)-[:LOCATION_OF]->(FullMoon),\n  (Moonlight)-[:HAS_APPEARANCE]->(PurkynjeEffect),\n  (Moon)-[:HAS_BOND_ALBEDO]->(BondAlbedo),\n  (Moonlight)-[:TAKES_TIME_TO_REACH]->(Earth),\n  (Moonlight)-[:INCREASES_BRIGHTNESS_OF]->(NightSky),\n  (Moonlight)-[:HAS_INFLUENCE_ON]->(Werewolf),\n  (Moonlight)-[:HAS_INFLUENCE_ON]->(Lunatics),\n  (Moonlight)-[:CAUSES]->(NyctalopiaNightBlindness),\n  (MoonmilkCaves)-[:CAUSED_BY]->(Moonlight),\n  (KatiePaterson)-[:PRODUCED]->(LightBulbSimulatingMoonlight)\n```\n\nThis CYPHER query creates nodes for the various entities mentioned in the text, such as Moonlight, Sun, Moon, Anaxagoras, and so on. It then creates relationships between these entities based on the information provided in the text.\n\nFor example, the relationship `(Moonlight)-[:CONSISTS_OF]->(Sun)` indicates that Moonlight consists of mostly sunlight. The relationship `(Sun)-[:PROVIDES_BRIGHTNESS_TO]->(Moon)` shows that the Sun provides brightness to the Moon. The relationship `(Moonlight)-[:HAS_INFLUENCE_ON]->(Werewolf)` represents the folklore belief that moonlight can transform a person into a werewolf.\n\nYou can use this CYPHER query as a starting point and modify it further to create a more detailed knowledge graph based on your specific requirements.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 14,
            "Incorrectly Created Nodes": 1,
            "Correctly Created Relationships": 10,
            "Incorrectly Created Relationships": 7,
            "Correctly Labelled Relationships": 6,
            "Incorrectly Labelled Relationships": 11
        },
        "execution_time_in_seconds": 7.3163111209869385
    },
    {
        "url": "https://en.wikipedia.org/wiki/Japanese_tea_ceremony",
        "queries": "Here are the CYPHER queries to create a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```cypher\n// Create nodes for entities\nCREATE (tea_ceremony:Entity{name:\"Japanese tea ceremony\"})\nCREATE (sad\u014d:Entity{name:\"sad\u014d/chad\u014d\"})\nCREATE (chanoyu:Entity{name:\"chanoyu\"})\nCREATE (matcha:Entity{name:\"matcha\"})\nCREATE (temae:Entity{name:\"temae\"})\nCREATE (teaism:Entity{name:\"Teaism\"})\nCREATE (okakura_kakuzo:Entity{name:\"Okakura Kakuz\u014d\"})\nCREATE (sen_no_rikyu:Entity{name:\"Sen no Riky\u016b\"})\nCREATE (omotesenke:Entity{name:\"Omotesenke\"})\nCREATE (urasenke:Entity{name:\"Urasenke\"})\nCREATE (mushakojisen:Entity{name:\"Mushak\u014djisenke\"})\nCREATE (daimyo:Entity{name:\"daimyo\"})\nCREATE (samurai:Entity{name:\"samurai\"})\nCREATE (zen_buddhism:Entity{name:\"Zen Buddhism\"})\nCREATE (shinto:Entity{name:\"Shinto\"})\nCREATE (misogi:Entity{name:\"misogi\"})\nCREATE (chashitsu:Entity{name:\"chashitsu\"})\nCREATE (torii:Entity{name:\"torii\"})\nCREATE (sencha:Entity{name:\"sencha\"})\nCREATE (senchad\u014d:Entity{name:\"senchad\u014d\"})\nCREATE (chakai:Entity{name:\"chakai\"})\nCREATE (chaji:Entity{name:\"chaji\"})\nCREATE (wagashi:Entity{name:\"wagashi\"})\nCREATE (kaiseki:Entity{name:\"kaiseki\"})\nCREATE (eich\u016b:Entity{name:\"Eich\u016b\"})\nCREATE (emperor_saga:Entity{name:\"Emperor Saga\"})\nCREATE (karasaki:Entity{name:\"Karasaki\"})\nCREATE (dancha:Entity{name:\"dancha\"})\nCREATE (pu_er_tea:Entity{name:\"pu-er tea\"})\nCREATE (lu_yu:Entity{name:\"Lu Yu\"})\nCREATE (eisai:Entity{name:\"Eisai\"})\nCREATE (t\u014dcha:Entity{name:\"t\u014dcha\"})\nCREATE (muromachi_period:Entity{name:\"Muromachi period\"})\nCREATE (kitayama_culture:Entity{name:\"Kitayama Culture\"})\nCREATE (ashikaga_yoshimitsu:Entity{name:\"Ashikaga Yoshimitsu\"})\nCREATE (kinkaku_ji:Entity{name:\"Kinkaku-ji\"})\nCREATE (higashiyama_culture:Entity{name:\"Higashiyama culture\"})\nCREATE (ashikaga_yoshimasa:Entity{name:\"Ashikaga Yoshimasa\"})\nCREATE (ginkaku_ji:Entity{name:\"Ginkaku-ji\"})\nCREATE (wabi_sabi:Entity{name:\"wabi-sabi\"})\nCREATE (wabi:Entity{name:\"wabi\"})\nCREATE (sabi:Entity{name:\"sabi\"})\nCREATE (omotenashi:Entity{name:\"omotenashi\"})\nCREATE (murata_juk\u014d:Entity{name:\"Murata Juk\u014d\"})\nCREATE (ikky\u016b:Entity{name:\"Ikky\u016b\"})\nCREATE (takeno_j\u014d\u014d:Entity{name:\"Takeno J\u014d\u014d\"})\nCREATE (ichi_go_ichi_e:Entity{name:\"ichi-go ichi-e\"})\nCREATE (wa:Entity{name:\"wa\"})\nCREATE (kei:Entity{name:\"kei\"})\nCREATE (sei:Entity{name:\"sei\"})\nCREATE (jaku:Entity{name:\"jaku\"})\nCREATE (toyotomi_hideyoshi:Entity{name:\"Toyotomi Hideyoshi\"})\nCREATE (golden_tea_room:Entity{name:\"Golden Tea Room\"})\nCREATE (kitano_tea_ceremony:Entity{name:\"Grand Kitano Tea Ceremony\"})\nCREATE (yamanoue_s\u014dji:Entity{name:\"Yamanoue S\u014dji\"})\nCREATE (san_senke:Entity{name:\"san-senke\"})\nCREATE (nodate:Entity{name:\"nodate\"})\nCREATE (nodatekasa:Entity{name:\"nodatekasa\"})\nCREATE (mizuya:Entity{name:\"mizuya\"})\nCREATE (ro:Entity{name:\"ro\"})\nCREATE (furo:Entity{name:\"furo\"})\nCREATE (neriko:Entity{name:\"Neriko\"})\nCREATE (jin:Entity{name:\"Jin\"})\nCREATE (byakudan:Entity{name:\"Byakudan\"})\nCREATE (kokukobei:Entity{name:\"Kokukobei\"})\nCREATE (umegako:Entity{name:\"Umegako\"})\nCREATE (koicha:Entity{name:\"koicha\"})\nCREATE (usucha:Entity{name:\"usucha\"})\nCREATE (chatsubo:Entity{name:\"chatsubo\"})\nCREATE (chasen:Entity{name:\"chasen\"})\nCREATE (chaji:Entity{name:\"chaji\"})\nCREATE (chad\u014dgu:Entity{name:\"chad\u014dgu\"})\nCREATE (chigusa:Entity{name:\"Chigusa\"})\nCREATE (senke_jusshoku:Entity{name:\"Senke Jusshoku\"})\nCREATE (kombu_tea:Entity{name:\"kombu tea\"})\nCREATE (roasted_barley_tea:Entity{name:\"roasted barley tea\"})\nCREATE (sakurayu:Entity{name:\"sakurayu\"})\nCREATE (tsukubai:Entity{name:\"tsukubai\"})\nCREATE (nijiri_guchi:Entity{name:\"nijiri-guchi\"})\nCREATE (seiza:Entity{name:\"seiza\"})\nCREATE (nakadachi:Entity{name:\"nakadachi\"})\nCREATE (kaishi:Entity{name:\"kaishi\"})\nCREATE (higashi:Entity{name:\"higashi\"})\nCREATE (tabako_bon:Entity{name:\"tabako-bon\"})\n\n// Create relationships between entities\nMATCH (tea_ceremony),(sad\u014d) RETURN tea_ceremony,sad\u014d\nCREATE (tea_ceremony)-[:ALTERNATIVE_NAME]->(sad\u014d)\nMATCH (tea_ceremony),(chanoyu) RETURN tea_ceremony,chanoyu\nCREATE (tea_ceremony)-[:ALTERNATIVE_NAME]->(chanoyu)\nMATCH (tea_ceremony),(matcha) RETURN tea_ceremony,matcha\nCREATE (tea_ceremony)-[:INVOLVES]->(matcha)\nMATCH (tea_ceremony),(temae) RETURN tea_ceremony,temae\nCREATE (tea_ceremony)-[:INVOLVES]->(temae)\nMATCH (teaism),(okakura_kakuzo) RETURN teaism,okakura_kakuzo\nCREATE (okakura_kakuzo)-[:COINED]->(teaism)\nMATCH (tea_ceremony),(sen_no_rikyu) RETURN tea_ceremony,sen_no_rikyu\nCREATE (sen_no_rikyu)-[:REVOLUTIONIZED]->(tea_ceremony)\nMATCH (sen_no_rikyu),(omotesenke),(urasenke),(mushakojisen) RETURN sen_no_rikyu,omotesenke,urasenke,mushakojisen\nCREATE (sen_no_rikyu)-[:FOUNDED]->(omotesenke)\nCREATE (sen_no_rikyu)-[:FOUNDED]->(urasenke)\nCREATE (sen_no_rikyu)-[:FOUNDED]->(mushakojisen)\nMATCH (tea_ceremony),(daimyo),(samurai) RETURN tea_ceremony,daimyo,samurai\nCREATE (tea_ceremony)-[:SPREAD_TO]->(daimyo)\nCREATE (tea_ceremony)-[:SPREAD_TO]->(samurai)\nMATCH (tea_ceremony),(zen_buddhism) RETURN tea_ceremony,zen_buddhism\nCREATE (zen_buddhism)-[:INFLUENCED]->(tea_ceremony)\nMATCH (tea_ceremony),(shinto),(misogi) RETURN tea_ceremony,shinto,misogi\nCREATE (shinto)-[:INFLUENCED]->(tea_ceremony)\nCREATE (misogi)-[:INFLUENCED]->(tea_ceremony)\nMATCH (tea_ceremony),(chashitsu),(torii) RETURN tea_ceremony,chashitsu,torii\nCREATE (chashitsu)-[:INFLUENCED_BY]->(shinto)\nCREATE (torii)-[:INFLUENCED_BY]->(shinto)\nMATCH (tea_ceremony),(sencha),(senchad\u014d) RETURN tea_ceremony,sencha,senchad\u014d\nCREATE (sencha)-[:USED_IN]->(tea_ceremony)\nCREATE (senchad\u014d)-[:PRACTICE_OF]->(tea_ceremony)\nMATCH (tea_ceremony),(chakai),(chaji) RETURN tea_ceremony,chakai,chaji\nCREATE (chakai)-[:TYPE_OF]->(tea_ceremony)\nCREATE (chaji)-[:TYPE_OF]->(tea_ceremony)\nMATCH (chakai),(wagashi) RETURN chakai,wagashi\nCREATE (chakai)-[:INVOLVES]->(wagashi)\nMATCH (chaji),(kaiseki) RETURN chaji,kaiseki\nCREATE (chaji)-[:INVOLVES]->(kaiseki)\nMATCH (tea_ceremony),(eich\u016b),(emperor_saga),(karasaki) RETURN tea_ceremony,eich\u016b,emperor_saga,karasaki\nCREATE (eich\u016b)-[:BROUGHT]->(tea_ceremony)\nCREATE (eich\u016b)-[:SERVED]->(emperor_saga)\nMATCH (tea_ceremony),(dancha),(pu_er_tea) RETURN tea_ceremony,dancha,pu_er_tea\nCREATE (dancha)-[:PRECURSOR_OF]->(tea_ceremony)\nMATCH (tea_ceremony),(lu_yu) RETURN tea_ceremony,lu_yu\nCREATE (lu_yu)-[:INFLUENCED]->(tea_ceremony)\nMATCH (tea_ceremony),(eisai) RETURN tea_ceremony,eisai\nCREATE (eisai)-[:INTRODUCED]->(tea_ceremony)\nMATCH (tea_ceremony),(t\u014dcha) RETURN tea_ceremony,t\u014dcha\nCREATE (t\u014dcha)-[:PRACTICE_IN]->(tea_ceremony)\nMATCH (tea_ceremony),(muromachi_period),(kitayama_culture),(ashikaga_yoshimitsu),(kinkaku_ji),(higashiyama_culture),(ashikaga_yoshimasa),(ginkaku_ji) RETURN tea_ceremony,muromachi_period,kitayama_culture,ashikaga_yoshimitsu,kinkaku_ji,higashiyama_culture,ashikaga_yoshimasa,ginkaku_ji\nCREATE (muromachi_period)-[:SAW_RISE_OF]->(kitayama_culture)\nCREATE (muromachi_period)-[:SAW_RISE_OF]->(higashiyama_culture)\nCREATE (ashikaga_yoshimitsu)-[:ASSOCIATED_WITH]->(kitayama_culture)\nCREATE (ashikaga_yoshimasa)-[:ASSOCIATED_WITH]->(higashiyama_culture)\nMATCH (tea_ceremony),(wabi_sabi),(wabi),(sabi) RETURN tea_ceremony,wabi_sabi,wabi,sabi\nCREATE (wabi_sabi)-[:INFLUENCED]->(tea_ceremony)\nCREATE (wabi)-[:ASPECT_OF]->(wabi_sabi)\nCREATE (sabi)-[:ASPECT_OF]->(wabi_sabi)\nMATCH (tea_ceremony),(omotenashi) RETURN tea_ceremony,omotenashi\nCREATE (omotenashi)-[:CENTRAL_CONCEPT_OF]->(tea_ceremony)\nMATCH (tea_ceremony),(murata_juk\u014d),(ikky\u016b) RETURN tea_ceremony,murata_juk\u014d,ikky\u016b\nCREATE (murata_juk\u014d)-[:DEVELOPED]->(tea_ceremony)\nCREATE (ikky\u016b)-[:INFLUENCED]->(murata_juk\u014d)\nMATCH (tea_ceremony),(takeno_j\u014d\u014d),(ichi_go_ichi_e) RETURN tea_ceremony,takeno_j\u014d\u014d,ichi_go_ichi_e\nCREATE (takeno_j\u014d\u014d)-[:CONCEPT_OF]->(ichi_go_ichi_e)\nCREATE (ichi_go_ichi_e)-[:CENTRAL_PHILOSOPHY",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 69,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 75,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 75,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 22.43900203704834
    },
    {
        "url": "https://en.wikipedia.org/wiki/Supernova",
        "queries": "Here are the CYPHER queries for creating a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```cypher\n// Create nodes for entities\nCREATE (Supernova:Entity {name: \"Supernova\"})\nCREATE (Star:Entity {name: \"Star\"})\nCREATE (WhiteDwarf:Entity {name: \"White Dwarf\"})\nCREATE (NeutronStar:Entity {name: \"Neutron Star\"})\nCREATE (BlackHole:Entity {name: \"Black Hole\"})\nCREATE (Nebula:Entity {name: \"Nebula\"})\nCREATE (CosmicRays:Entity {name: \"Cosmic Rays\"})\nCREATE (GravitationalWaves:Entity {name: \"Gravitational Waves\"})\nCREATE (SupernovaeClassification:Entity {name: \"Supernovae Classification\"})\nCREATE (SN1604:Entity {name: \"SN 1604\"})\nCREATE (SN1572:Entity {name: \"SN 1572\"})\nCREATE (SN1006:Entity {name: \"SN 1006\"})\nCREATE (SN1054:Entity {name: \"SN 1054\"})\nCREATE (G1.9+0.3:Entity {name: \"G1.9+0.3\"})\nCREATE (CassiopeiaA:Entity {name: \"Cassiopeia A\"})\nCREATE (SN1885A:Entity {name: \"SN 1885A\"})\nCREATE (SN1895B:Entity {name: \"SN 1895B\"})\nCREATE (ASASSN-15lh:Entity {name: \"ASASSN-15lh\"})\nCREATE (SN2013fs:Entity {name: \"SN 2013fs\"})\nCREATE (SN2016gkg:Entity {name: \"SN 2016gkg\"})\nCREATE (JWST:Entity {name: \"James Webb Space Telescope\"})\nCREATE (JADES:Entity {name: \"JWST Advanced Deep Extragalactic Survey\"})\nCREATE (SNEWS:Entity {name: \"Supernova Early Warning System\"})\nCREATE (Pantheon:Entity {name: \"Pantheon\"})\n\n// Create relationships between entities\nMATCH (Supernova),(Star) \nCREATE (Supernova)-[:OCCURS_IN]->(Star)\n\nMATCH (Supernova),(WhiteDwarf)\nCREATE (Supernova)-[:OCCURS_IN]->(WhiteDwarf)\n\nMATCH (Supernova),(NeutronStar)\nCREATE (Supernova)-[:RESULTS_IN]->(NeutronStar)\n\nMATCH (Supernova),(BlackHole)\nCREATE (Supernova)-[:RESULTS_IN]->(BlackHole)\n\nMATCH (Supernova),(Nebula)\nCREATE (Supernova)-[:RESULTS_IN]->(Nebula)\n\nMATCH (Supernova),(CosmicRays)\nCREATE (Supernova)-[:PRODUCES]->(CosmicRays)\n\nMATCH (Supernova),(GravitationalWaves) \nCREATE (Supernova)-[:MAY_PRODUCE]->(GravitationalWaves)\n\nMATCH (Supernova),(SupernovaeClassification)\nCREATE (Supernova)-[:CLASSIFIED_AS]->(SupernovaeClassification)\n\nMATCH (SN1604),(SN1572),(SN1006),(SN1054)\nCREATE (SN1604)-[:NAMED_AS]->(Supernova)\nCREATE (SN1572)-[:NAMED_AS]->(Supernova)\nCREATE (SN1006)-[:NAMED_AS]->(Supernova)\nCREATE (SN1054)-[:NAMED_AS]->(Supernova)\n\nMATCH (G1.9+0.3),(CassiopeiaA)\nCREATE (G1.9+0.3)-[:NAMED_AS]->(Supernova)\nCREATE (CassiopeiaA)-[:NAMED_AS]->(Supernova)\n\nMATCH (SN1885A),(SN1895B)\nCREATE (SN1885A)-[:NAMED_AS]->(Supernova)\nCREATE (SN1895B)-[:NAMED_AS]->(Supernova)\n\nMATCH (ASASSN-15lh),(SN2013fs),(SN2016gkg)\nCREATE (ASASSN-15lh)-[:NAMED_AS]->(Supernova)\nCREATE (SN2013fs)-[:NAMED_AS]->(Supernova)\nCREATE (SN2016gkg)-[:NAMED_AS]->(Supernova)\n\nMATCH (JWST),(JADES)\nCREATE (JWST)-[:USED_IN]->(JADES)\n\nMATCH (SNEWS)\nCREATE (Supernova)-[:DETECTED_BY]->(SNEWS)\n\nMATCH (Pantheon)\nCREATE (Supernova)-[:OBSERVED_IN]->(Pantheon)\n```\n\nThis Cypher query creates a knowledge graph with the following entities and relationships:\n\n1. Entities:\n   - Supernova\n   - Star\n   - White Dwarf\n   - Neutron Star \n   - Black Hole\n   - Nebula\n   - Cosmic Rays\n   - Gravitational Waves\n   - Supernovae Classification\n   - SN 1604\n   - SN 1572\n   - SN 1006\n   - SN 1054\n   - G1.9+0.3\n   - Cassiopeia A\n   - SN 1885A\n   - SN 1895B\n   - ASASSN-15lh\n   - SN 2013fs\n   - SN 2016gkg\n   - James Webb Space Telescope (JWST)\n   - JWST Advanced Deep Extragalactic Survey (JADES)\n   - Supernova Early Warning System (SNEWS)\n   - Pantheon\n\n2. Relationships:\n   - `OCCURS_IN`: Supernova occurs in a Star or White Dwarf\n   - `RESULTS_IN`: Supernova results in a Neutron Star, Black Hole, or Nebula\n   - `PRODUCES`: Supernova produces Cosmic Rays\n   - `MAY_PRODUCE`: Supernova may produce Gravitational Waves\n   - `CLASSIFIED_AS`: Supernova is classified as a type in Supernovae Classification\n   - `NAMED_AS`: Specific supernovae (e.g., SN 1604, SN 1572) are named as a Supernova\n   - `USED_IN`: JWST is used in the JADES program\n   - `DETECTED_BY`: Supernova is detected by the SNEWS system\n   - `OBSERVED_IN`: Supernova is observed and included in the Pantheon dataset\n\nThis knowledge graph captures the key entities and relationships described in the text, allowing for the exploration and analysis of the phenomena surrounding supernovae.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 24,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 32,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 32,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 12.74770712852478
    },
    {
        "url": "https://en.wikipedia.org/wiki/Paradox_of_thrift",
        "queries": "To create a knowledge graph encapsulating the relationships between entities identified from the given text, we can use the Cypher query language in the Neo4j graph database. Here's an example of how to create the knowledge graph:\n\n```cypher\n// Create nodes for the entities\nCREATE (paradox:Concept {name: \"Paradox of thrift\"})\nCREATE (economics:Concept {name: \"Economics\"})\nCREATE (demand:Concept {name: \"Aggregate demand\"})\nCREATE (output:Concept {name: \"Gross output\"})\nCREATE (saving:Concept {name: \"Saving\"})\nCREATE (fallacy:Concept {name: \"Fallacy of composition\"})\nCREATE (individual:Concept {name: \"Individual\"})\nCREATE (economy:Concept {name: \"Economy\"})\nCREATE (keynes:Person {name: \"John Maynard Keynes\"})\nCREATE (mandeville:Person {name: \"Bernard Mandeville\"})\nCREATE (smith:Person {name: \"Adam Smith\"})\nCREATE (robertson:Person {name: \"John M. Robertson\"})\nCREATE (foster:Person {name: \"William Trufant Foster\"})\nCREATE (catchings:Person {name: \"Waddill Catchings\"})\nCREATE (stutzel:Person {name: \"Wolfgang St\u00fctzel\"})\nCREATE (minsky:Person {name: \"Hyman Minsky\"})\nCREATE (yellen:Person {name: \"Janet Yellen\"})\n\n// Create relationships between the entities\nCREATE\n  (paradox)-[:PART_OF]->(economics),\n  (paradox)-[:STATES]->(demand),\n  (demand)-[:CAUSES]->(output),\n  (output)-[:CAUSES]->(saving),\n  (paradox)-[:EXAMPLE_OF]->(fallacy),\n  (paradox)-[:GOOD_FOR]->(individual),\n  (paradox)-[:BAD_FOR]->(economy),\n  (paradox)-[:POPULARIZED_BY]->(keynes),\n  (paradox)-[:MENTIONED_IN]->(mandeville),\n  (paradox)-[:MENTIONED_IN]->(smith),\n  (paradox)-[:STATED_BY]->(robertson),\n  (paradox)-[:MENTIONED_BY]->(foster),\n  (paradox)-[:MENTIONED_BY]->(catchings),\n  (paradox)-[:DESCRIBED_BY]->(stutzel),\n  (paradox)-[:RELATED_TO]->(minsky),\n  (paradox)-[:DISCUSSED_BY]->(yellen)\n```\n\nThis Cypher query creates nodes for the various entities mentioned in the text, such as the \"Paradox of thrift\", \"Economics\", \"Aggregate demand\", \"Gross output\", \"Saving\", \"Fallacy of composition\", \"Individual\", \"Economy\", and the people associated with the paradox. It then creates relationships between these entities to capture the key ideas and connections described in the text.\n\nYou can visualize the resulting knowledge graph in the Neo4j Browser or using a tool like Neo4j Bloom.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 16,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 17,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 17,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 5.797126770019531
    },
    {
        "url": "https://en.wikipedia.org/wiki/Hula_hoop",
        "queries": "Here are some sample CYPHER queries to create a knowledge graph based on the given text:\n\n// Create nodes for entities\nCREATE\n  (h:HulaHoop {type: 'Toy', material: 'Plastic'}),\n  (w:Wham-O {type: 'Company'}),\n  (a:AustralianBamboo {type: 'Material'}),\n  (n:NativeAmerican {type: 'Culture'}),\n  (f:FireHooping {type: 'Technique'}),\n  (m:ModernHooping {type: 'Activity'})\n\n// Create relationships between entities\nCREATE\n  (h)-[:INSPIRED_BY]->(a),\n  (h)-[:POPULARIZED_BY]->(w),\n  (h)-[:USED_IN]->(n),\n  (h)-[:EVOLVED_INTO]->(f),\n  (h)-[:EVOLVED_INTO]->(m)\n\n// Add more specific details as properties\nSET\n  h.diameter = ['70cm', '100cm'],\n  h.traditionalMaterials = ['Willow', 'Rattan', 'Grapevine', 'Grass'],\n  h.createdIn = '1950s',\n  w.founded = '1948',\n  f.description = 'Hoop with spokes and kevlar wicks lit on fire',\n  m.description = 'Fitness activity and performance art'\n\n// Create relationship between Wham-O and Toltoys\nCREATE\n  (t:Toltoys {type: 'Company'}),\n  (w)-[:WORKED_WITH]->(t)\n\n// Create relationship between Hula Hoop and historical craze\nCREATE\n  (c:Craze {period: '14th century', effects: ['Pain', 'Dislocation', 'Heart failure']}),\n  (h)-[:PRECEDED_BY]->(c)\n\n// Create relationship between Hula Hoop and Hooping\nCREATE\n  (h)-[:EVOLVED_INTO]->(m)\n\nThe above queries create a knowledge graph with nodes representing the key entities (Hula Hoop, Wham-O, Australian Bamboo, Native American, Fire Hooping, Modern Hooping) and the relationships between them. The properties added to the nodes capture additional details about the entities. This structure can be queried and explored to uncover the connections and evolution of the hula hoop concept.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 6,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 6,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 6,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 6.099942922592163
    },
    {
        "url": "https://en.wikipedia.org/wiki/Snakes_in_mythology",
        "queries": "Here are the CYPHER queries for creating a knowledge graph based on the relationships between entities identified in the given text:\n\n```\n// Create nodes for the entities\nCREATE (Snakes:Entity {type: \"Creature\"})\nCREATE (HopiPeople:Entity {type: \"Culture\"})\nCREATE (MexicanFolkCulture:Entity {type: \"Culture\"})\nCREATE (GreatGoddess:Entity {type: \"Deity\"})\nCREATE (Quetzalcoatl:Entity {type: \"Deity\"})\nCREATE (Danh:Entity {type: \"Deity\"})\nCREATE (Ra:Entity {type: \"Deity\"})\nCREATE (Ouroboros:Entity {type: \"Symbol\"})\nCREATE (Mertseger:Entity {type: \"Deity\"})\nCREATE (Serer:Entity {type: \"Culture\"})\nCREATE (Pangool:Entity {type: \"Concept\"})\nCREATE (Dogon:Entity {type: \"Culture\"})\nCREATE (Lebe:Entity {type: \"Deity\"})\nCREATE (Ninazu:Entity {type: \"Deity\"})\nCREATE (Ningishzida:Entity {type: \"Deity\"})\nCREATE (RainbowSnake:Entity {type: \"Deity\"})\nCREATE (Ahi:Entity {type: \"Deity\"})\nCREATE (Vritra:Entity {type: \"Deity\"})\nCREATE (Vishnu:Entity {type: \"Deity\"})\nCREATE (Shesha:Entity {type: \"Deity\"})\nCREATE (Kurma:Entity {type: \"Deity\"})\nCREATE (N\u00fcwa:Entity {type: \"Deity\"})\nCREATE (Ophion:Entity {type: \"Deity\"})\nCREATE (Gorgons:Entity {type: \"Creature\"})\nCREATE (Medusa:Entity {type: \"Creature\"})\nCREATE (Nagas:Entity {type: \"Creature\"})\nCREATE (Garuda:Entity {type: \"Deity\"})\nCREATE (Aapep:Entity {type: \"Deity\"})\nCREATE (Nidhogg:Entity {type: \"Deity\"})\nCREATE (Yggdrasil:Entity {type: \"Concept\"})\nCREATE (Veles:Entity {type: \"Deity\"})\nCREATE (Mictlan:Entity {type: \"Concept\"})\nCREATE (BruleSioux:Entity {type: \"Culture\"})\nCREATE (Pomo:Entity {type: \"Culture\"})\nCREATE (Hopi:Entity {type: \"Culture\"})\nCREATE (Hecate:Entity {type: \"Deity\"})\nCREATE (Ahi:Entity {type: \"Deity\"})\nCREATE (Vritra:Entity {type: \"Deity\"})\nCREATE (Jormungand:Entity {type: \"Deity\"})\nCREATE (Leviathan:Entity {type: \"Creature\"})\nCREATE (Koloowisi:Entity {type: \"Deity\"})\nCREATE (Scylla:Entity {type: \"Creature\"})\nCREATE (Untekhi:Entity {type: \"Deity\"})\nCREATE (SaintGeorge:Entity {type: \"Saint\"})\nCREATE (SaintColumba:Entity {type: \"Saint\"})\nCREATE (Nagaraja:Entity {type: \"Deity\"})\nCREATE (Asclepius:Entity {type: \"Deity\"})\nCREATE (Nirah:Entity {type: \"Deity\"})\nCREATE (I\u015f\u1e2b\u0101ran:Entity {type: \"Deity\"})\nCREATE (Mu\u0161\u1e2bu\u0161\u0161u:Entity {type: \"Creature\"})\nCREATE (Ninazu:Entity {type: \"Deity\"})\nCREATE (Ningishzida:Entity {type: \"Deity\"})\nCREATE (Marduk:Entity {type: \"Deity\"})\nCREATE (Nabu:Entity {type: \"Deity\"})\nCREATE (Ashur:Entity {type: \"Deity\"})\nCREATE (Ndengei:Entity {type: \"Deity\"})\nCREATE (Coatlicue:Entity {type: \"Deity\"})\nCREATE (Damballa:Entity {type: \"Deity\"})\nCREATE (Simbi:Entity {type: \"Deity\"})\nCREATE (Petro:Entity {type: \"Deity\"})\nCREATE (Eobshin:Entity {type: \"Deity\"})\nCREATE (Shiva:Entity {type: \"Deity\"})\nCREATE (Mehen:Entity {type: \"Deity\"})\nCREATE (Nehebkau:Entity {type: \"Deity\"})\nCREATE (HornedSerpent:Entity {type: \"Creature\"})\nCREATE (SnakeYouth:Entity {type: \"Deity\"})\nCREATE (SnakeGirl:Entity {type: \"Deity\"})\nCREATE (NagaPancami:Entity {type: \"Ritual\"})\nCREATE (NagaKuan:Entity {type: \"Location\"})\nCREATE (Nagaloka:Entity {type: \"Concept\"})\n\n// Create relationships between the entities\nMATCH (s:Entity), (t:Entity)\nWHERE s.type <> t.type\nCREATE (s)-[:ASSOCIATED_WITH]->(t)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(HopiPeople)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"healing, transformation, fertility\"}]->(HopiPeople)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(MexicanFolkCulture)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"fear\"}]->(MexicanFolkCulture)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(GreatGoddess)\nCREATE (Snakes)-[:FAMILIAR_OF]->(GreatGoddess)\n\nMATCH (Quetzalcoatl)-[:ASSOCIATED_WITH]-(Mayan), (Quetzalcoatl)-[:ASSOCIATED_WITH]-(Aztec)\nCREATE (Quetzalcoatl)-[:DEITY_OF {roles: [\"god and man\", \"man and serpent\", \"fertility\", \"morning winds\", \"bright daylight\", \"sea\", \"floods\"]}]->(Mayan), (Quetzalcoatl)-[:DEITY_OF {roles: [\"god and man\", \"man and serpent\", \"fertility\", \"morning winds\", \"bright daylight\", \"sea\", \"floods\"]}]->(Aztec)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Danh)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"immortality\"}]->(Danh)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Ra)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"sun\"}]->(Ra)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Ouroboros)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"eternity\"}]->(Ouroboros)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Mertseger)\nCREATE (Snakes)-[:ASSOCIATED_WITH {meaning: \"healing\"}]->(Mertseger)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Serer)\nCREATE (Snakes)-[:SYMBOL_OF {meaning: \"saints and ancestral spirits\"}]->(Serer)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Pangool)\nCREATE (Snakes)-[:EMBODIMENT_OF]->(Pangool)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Dogon)\nCREATE (Snakes)-[:REVERENCE_FOR]->(Dogon)\n\nMATCH (Lebe)-[:ASSOCIATED_WITH]-(Dogon)\nCREATE (Lebe)-[:REINCARNATION_OF {entity: \"first ancestor\"}]->(Dogon)\n\nMATCH (Ninazu)-[:ASSOCIATED_WITH]-(Ningishzida)\nCREATE (Ninazu)-[:PATRON_OF {domain: \"healing\"}]->(Ningishzida)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(RainbowSnake)\nCREATE (RainbowSnake)-[:CREATOR_OF {entities: [\"animals\", \"rivers\", \"creeks\", \"oceans\"]}]->(Snakes)\n\nMATCH (Ahi), (Vritra)\nCREATE (Ahi)-[:SAME_AS]->(Vritra)\nCREATE (Ahi)-[:SWALLOWED {entity: \"primordial ocean\"}]->()\nCREATE (Indra)-[:SPLIT {entity: \"Vritra's stomach\"}]->()\n\nMATCH (Vishnu)-[:ASSOCIATED_WITH]-(Shesha)\nCREATE (Vishnu)-[:PROTECTED_BY]->(Shesha)\nCREATE (Shesha)-[:SUPPORTER_OF]->(Kurma)\n\nMATCH (N\u00fcwa)-[:ASSOCIATED_WITH]-(Humans)\nCREATE (N\u00fcwa)-[:CREATOR_OF]->(Humans)\n\nMATCH (Ophion)-[:ASSOCIATED_WITH]-(Primordial_Egg)\nCREATE (Ophion)-[:INCUBATED]->(Primordial_Egg)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Gorgons), (Gorgons)-[:ASSOCIATED_WITH]-(Medusa)\nCREATE (Gorgons)-[:HYBRID_OF {entities: [\"snake\", \"human\"]}]->()\nCREATE (Medusa)-[:ABILITY {effect: \"turn flesh to stone\"}]->(Snakes)\n\nMATCH (Nagas), (Garuda)\nCREATE (Nagas)-[:PERPETUALLY_AT_WAR_WITH]->(Garuda)\n\nMATCH (Aapep)-[:ASSOCIATED_WITH]-(Ra)\nCREATE (Aapep)-[:ATTACKS]->(Ra)\nCREATE (Aapep)-[:SYMBOL_OF {meaning: \"chaos\"}]->()\n\nMATCH (Nidhogg)-[:ASSOCIATED_WITH]-(Yggdrasil)\nCREATE (Nidhogg)-[:COILS_AROUND]->(Yggdrasil)\nCREATE (Nidhogg)-[:TRIES_TO_DESTROY]->(Yggdrasil)\n\nMATCH (Veles)-[:ASSOCIATED_WITH]-(Underworld)\nCREATE (Veles)-[:PRESIDES_OVER]->(Underworld)\nCREATE (Veles)-[:GUARDED_BY]->(Yggdrasil)\n\nMATCH (Mictlan)-[:ASSOCIATED_WITH]-(Python-trees), (Mictlan)-[:ASSOCIATED_WITH]-(Alligator), (Mictlan)-[:ASSOCIATED_WITH]-(Snake)\nCREATE (Mictlan)-[:PROTECTED_BY]->(Python-trees), (Mictlan)-[:PROTECTED_BY]->(Alligator), (Mictlan)-[:PROTECTED_BY]->(Snake)\n\nMATCH (BruleSioux)-[:ASSOCIATED_WITH]-(Snakes)\nCREATE (BruleSioux)-[:HELPED_AND_GUIDED_BY]->(Snakes)\n\nMATCH (Pomo)-[:ASSOCIATED_WITH]-(Snakes)\nCREATE (Pomo)-[:MARRIED_TO]->(Snakes)\nCREATE (Pomo)-[:GAVE_BIRTH_TO]->(Snake-children)\n\nMATCH (Hopi)-[:ASSOCIATED_WITH]-(Snakes)\nCREATE (Hopi)-[:PERFORMED_RITUAL {name: \"snake dance\", purpose: \"renew fertility of nature\"}]->(Snakes)\n\nMATCH (Snakes)-[:ASSOCIATED_WITH]-(Hecate)\nCREATE (Snakes)-[:ASSOCIATED_WITH {domain: \"magic\", \"lower world\"}]->(Hecate)\n\nMATCH (Ahi), (Vritra)\nCREATE (Ahi)-[:SAME_AS]->(Vritra)\nCREATE (Ahi)-[:SWALLOWED {entity: \"primordial ocean\"}]->()\nCREATE (Indra)-[:SPLIT {entity: \"Vritra's stomach\"}]->()\n\nMATCH (Jormungand)-[:ASSOCIATED_WITH]-(Primordial_Ocean)\nCREATE (Jormungand)-[:SYMBOL_OF {meaning: \"eternal ring which enclosed the world\"}]->(Primordial_Ocean)",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 100,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 90,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 90,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 22.234956979751587
    },
    {
        "url": "https://en.wikipedia.org/wiki/Machine_learning",
        "queries": "Here are CYPHER queries to create a knowledge graph encapsulating the relationships between entities identified from the given text:\n\n```\n// Create nodes for the main entities\nCREATE (MachineLearning:Concept {name: \"Machine Learning\"})\nCREATE (ArtificialIntelligence:Concept {name: \"Artificial Intelligence\"})\nCREATE (DataMining:Concept {name: \"Data Mining\"})\nCREATE (NeuralNetworks:Concept {name: \"Neural Networks\"})\nCREATE (PatternRecognition:Concept {name: \"Pattern Recognition\"})\nCREATE (ProbabilisticReasoning:Concept {name: \"Probabilistic Reasoning\"})\nCREATE (ExpertSystems:Concept {name: \"Expert Systems\"})\nCREATE (InductiveLogicProgramming:Concept {name: \"Inductive Logic Programming\"})\nCREATE (Connectionism:Concept {name: \"Connectionism\"})\nCREATE (Optimization:Concept {name: \"Optimization\"})\nCREATE (StatisticalLearning:Concept {name: \"Statistical Learning\"})\nCREATE (ComputationalLearningTheory:Concept {name: \"Computational Learning Theory\"})\nCREATE (SupervisedLearning:Concept {name: \"Supervised Learning\"})\nCREATE (UnsupervisedLearning:Concept {name: \"Unsupervised Learning\"})\nCREATE (SemiSupervisedLearning:Concept {name: \"Semi-supervised Learning\"})\nCREATE (WeaklySupervised:Concept {name: \"Weakly Supervised Learning\"})\nCREATE (ReinforcementLearning:Concept {name: \"Reinforcement Learning\"})\nCREATE (DimensionalityReduction:Concept {name: \"Dimensionality Reduction\"})\nCREATE (FeatureLearning:Concept {name: \"Feature Learning\"})\nCREATE (ManifoldLearning:Concept {name: \"Manifold Learning\"})\nCREATE (DeepLearning:Concept {name: \"Deep Learning\"})\nCREATE (SelfLearning:Concept {name: \"Self-Learning\"})\n\n// Create relationships between the entities\nCREATE (MachineLearning)-[:PART_OF]->(ArtificialIntelligence)\nCREATE (DataMining)-[:RELATED_TO]->(MachineLearning)\nCREATE (NeuralNetworks)-[:PART_OF]->(MachineLearning)\nCREATE (PatternRecognition)-[:PART_OF]->(MachineLearning)\nCREATE (ProbabilisticReasoning)-[:PART_OF]->(MachineLearning)\nCREATE (ExpertSystems)-[:PART_OF]->(ArtificialIntelligence)\nCREATE (InductiveLogicProgramming)-[:PART_OF]->(ArtificialIntelligence)\nCREATE (Connectionism)-[:PART_OF]->(NeuralNetworks)\nCREATE (Optimization)-[:RELATED_TO]->(MachineLearning)\nCREATE (StatisticalLearning)-[:RELATED_TO]->(MachineLearning)\nCREATE (ComputationalLearningTheory)-[:RELATED_TO]->(MachineLearning)\nCREATE (SupervisedLearning)-[:PART_OF]->(MachineLearning)\nCREATE (UnsupervisedLearning)-[:PART_OF]->(MachineLearning)\nCREATE (SemiSupervisedLearning)-[:PART_OF]->(MachineLearning)\nCREATE (WeaklySupervised)-[:PART_OF]->(MachineLearning)\nCREATE (ReinforcementLearning)-[:PART_OF]->(MachineLearning)\nCREATE (DimensionalityReduction)-[:PART_OF]->(MachineLearning)\nCREATE (FeatureLearning)-[:PART_OF]->(MachineLearning)\nCREATE (ManifoldLearning)-[:PART_OF]->(MachineLearning)\nCREATE (DeepLearning)-[:PART_OF]->(MachineLearning)\nCREATE (SelfLearning)-[:PART_OF]->(MachineLearning)\n```\n\nThis creates a knowledge graph with the main entities as nodes, and the relationships between them as directed edges. You can further extend this graph by adding additional details and attributes to the nodes and relationships based on the information provided in the text.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 22,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 22,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 22,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 7.2595601081848145
    },
    {
        "url": "https://en.wikipedia.org/wiki/Dinosaur",
        "queries": "Here are the CYPHER queries for creating a knowledge graph based on the given text:\n\n```cypher\n// Create nodes for main entities\nCREATE (Dinosauria:Entity {name: \"Dinosauria\"})\nCREATE (Birds:Entity {name: \"Birds\"})\nCREATE (NonAvianDinosaurs:Entity {name: \"Non-Avian Dinosaurs\"})\nCREATE (Archosaurs:Entity {name: \"Archosaurs\"})\nCREATE (Sauropsida:Entity {name: \"Sauropsida\"})\nCREATE (Synapsid:Entity {name: \"Synapsid\"})\nCREATE (Pterosaurs:Entity {name: \"Pterosaurs\"})\nCREATE (Mosasaurs:Entity {name: \"Mosasaurs\"})\nCREATE (Ichthyosaurs:Entity {name: \"Ichthyosaurs\"})\nCREATE (Plesiosaurs:Entity {name: \"Plesiosaurs\"})\nCREATE (Dimetrodon:Entity {name: \"Dimetrodon\"})\n\n// Create relationships between entities\nMATCH (Dinosauria), (Birds) \nCREATE (Birds)-[:IS_A]->(Dinosauria)\n\nMATCH (Dinosauria), (NonAvianDinosaurs)\nCREATE (NonAvianDinosaurs)-[:IS_A]->(Dinosauria)\n\nMATCH (Dinosauria), (Archosaurs)\nCREATE (Dinosauria)-[:IS_A]->(Archosaurs)\n\nMATCH (Archosaurs), (Sauropsida)\nCREATE (Archosaurs)-[:IS_A]->(Sauropsida)\n\nMATCH (Sauropsida), (Synapsid)\nCREATE (Synapsid)-[:IS_A]->(Sauropsida)\n\nMATCH (Archosaurs), (Pterosaurs)\nCREATE (Pterosaurs)-[:IS_A]->(Archosaurs)\n\nMATCH (Sauropsida), (Mosasaurs)\nCREATE (Mosasaurs)-[:IS_A]->(Sauropsida)\n\nMATCH (Sauropsida), (Ichthyosaurs)\nCREATE (Ichthyosaurs)-[:IS_A]->(Sauropsida)\n\nMATCH (Sauropsida), (Plesiosaurs)\nCREATE (Plesiosaurs)-[:IS_A]->(Sauropsida)\n\nMATCH (Synapsid), (Dimetrodon)\nCREATE (Dimetrodon)-[:IS_A]->(Synapsid)\n\n// Create properties for Dinosauria\nMATCH (Dinosauria)\nSET Dinosauria.appeared = \"Triassic period, between 243 and 233.23 million years ago\"\nSET Dinosauria.dominance = \"Jurassic and Cretaceous periods\"\nSET Dinosauria.extinction = \"Cretaceous\u2013Paleogene extinction event approximately 66 mya\"\nSET Dinosauria.definition = \"the most recent common ancestor (MRCA) of Triceratops and modern birds (Neornithes), and all its descendants\"\n\n// Create properties for Birds\nMATCH (Birds)\nSET Birds.diversity = \"over 11,000 living species\"\nSET Birds.origin = \"evolved from earlier theropods during the Late Jurassic epoch\"\n\n// Create properties for Non-Avian Dinosaurs\nMATCH (NonAvianDinosaurs)\nSET NonAvianDinosaurs.diversity = \"over 900 distinct genera and more than 1,000 different species\"\nSET NonAvianDinosaurs.physiology = \"active animals with elevated metabolisms and numerous adaptations for social interaction\"\nSET NonAvianDinosaurs.diet = \"herbivorous and carnivorous\"\nSET NonAvianDinosaurs.reproduction = \"egg-laying\"\nSET NonAvianDinosaurs.locomotion = \"bipedal, quadrupedal, and able to shift between these stances\"\nSET NonAvianDinosaurs.size = \"from human-sized or smaller to the largest sauropod dinosaurs that reached lengths of 39.7 meters (130 feet) and heights of 18 m (59 ft)\"\n\n// Create properties for Archosaurs\nMATCH (Archosaurs)\nSET Archosaurs.features = \"two pairs of Infratemporal fenestrae, openings in the snout and lower jaw\"\n\n// Create properties for Sauropsida\nMATCH (Sauropsida)\nSET Sauropsida.members = \"reptiles, birds, and other related extinct groups\"\n\n// Create properties for Synapsid\nMATCH (Synapsid)\nSET Synapsid.members = \"mammal-like reptiles and mammals\"\n\n// Create properties for Pterosaurs\nMATCH (Pterosaurs)\nSET Pterosaurs.relation = \"distantly related to dinosaurs, being members of the clade Ornithodira\"\n\n// Create properties for Mosasaurs, Ichthyosaurs, Plesiosaurs, Dimetrodon\nMATCH (m:Entity {name: \"Mosasaurs\"})\nSET m.relation = \"members of Sauropsida (the reptile and bird clade)\"\nMATCH (i:Entity {name: \"Ichthyosaurs\"})\nSET i.relation = \"members of Sauropsida (the reptile and bird clade)\" \nMATCH (p:Entity {name: \"Plesiosaurs\"})\nSET p.relation = \"members of Sauropsida (the reptile and bird clade)\"\nMATCH (d:Entity {name: \"Dimetrodon\"})\nSET d.relation = \"a synapsid\"\n```\n\nThis CYPHER code creates a knowledge graph with the main entities and their relationships based on the information provided in the given text. The nodes represent the key entities, such as Dinosauria, Birds, Non-Avian Dinosaurs, Archosaurs, Sauropsida, Synapsid, Pterosaurs, Mosasaurs, Ichthyosaurs, Plesiosaurs, and Dimetrodon. The relationships between these entities are defined using the `:IS_A` relationship.\n\nAdditionally, the code sets various properties for the entities, such as their appearance, dominance, extinction, definition, diversity, physiology, diet, reproduction, locomotion, and size. These properties help to capture the key characteristics and details about each entity as described in the text.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 11,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 10,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 10,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 11.926084756851196
    },
    {
        "url": "https://en.wikipedia.org/wiki/Limerick_(poetry)",
        "queries": "Here are some CYPHER queries to create a knowledge graph based on the relationships between entities identified in the given text:\n\n```\n// Create nodes for the different entities\nCREATE\n  (limerick:Entity {name: \"Limerick\"}),\n  (lear:Person {name: \"Edward Lear\"}),\n  (legman:Person {name: \"Gershon Legman\"}),\n  (abercrombie:Person {name: \"David Abercrombie\"}),\n  (gilbert:Person {name: \"W.S. Gilbert\"}),\n  (clarke:Person {name: \"John Clarke\"}),\n  (glenn:Person {name: \"Ezra Haber Glenn\"}),\n  (mercer:Person {name: \"Leigh Mercer\"}),\n  (form:Entity {name: \"Limerick Form\"}),\n  (song:Entity {name: \"Limerick Song\"}),\n  (verse:Entity {name: \"Limerick Verse\"}),\n  (poem:Entity {name: \"Limerick Poem\"})\n\n// Create relationships between the entities\nCREATE\n  (limerick)-[:APPEARED_IN]->(england:Place {name: \"England\"}),\n  (limerick)-[:POPULARIZED_BY]->(lear),\n  (limerick)-[:DESCRIBED_BY]->(legman),\n  (limerick)-[:ANALYZED_BY]->(abercrombie),\n  (limerick)-[:PARODIED_BY]->(gilbert),\n  (limerick)-[:PARODIED_BY]->(clarke),\n  (limerick)-[:BLENDED_WITH]->(glenn),\n  (limerick)-[:DEVISED_BY]->(mercer),\n  (limerick)-[:HAS_FORM]->(form),\n  (limerick)-[:HAS_SONG]->(song),\n  (limerick)-[:HAS_VERSE]->(verse),\n  (limerick)-[:HAS_POEM]->(poem)\n```\n\nThis query creates nodes for the different entities mentioned in the text, such as \"Limerick\", \"Edward Lear\", \"Gershon Legman\", and others. It then creates relationships between these entities based on the information provided in the text, such as \"APPEARED_IN\", \"POPULARIZED_BY\", \"DESCRIBED_BY\", \"ANALYZED_BY\", \"PARODIED_BY\", \"BLENDED_WITH\", \"DEVISED_BY\", \"HAS_FORM\", \"HAS_SONG\", \"HAS_VERSE\", and \"HAS_POEM\".\n\nYou can further extend this knowledge graph by adding more detailed information about each entity, such as their properties, relationships, and so on, depending on the requirements of your application.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 12,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 12,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 12,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 5.64359188079834
    },
    {
        "url": "https://en.wikipedia.org/wiki/List_of_Nobel_laureates_in_Physics",
        "queries": "Here are the CYPHER queries to create a knowledge graph based on the given text:\n\n1. Create the `Nobel Prize in Physics` node:\n```cypher\nCREATE (nobelPrizeInPhysics:Prize {\n  name: \"Nobel Prize in Physics\",\n  awardedBy: \"Royal Swedish Academy of Sciences\",\n  awardedOn: \"10 December\",\n  establishedBy: \"Alfred Nobel\",\n  establishedIn: 1895\n})\n```\n\n2. Create the `Laureate` nodes and relate them to the `Nobel Prize in Physics`:\n```cypher\nCREATE (wilhelmR\u00f6ntgen:Laureate {\n  name: \"Wilhelm Conrad R\u00f6ntgen\",\n  year: 1901,\n  amount: 150782,\n  country: \"Germany\"\n})\nCREATE (johnBardeen:Laureate {\n  name: \"John Bardeen\",\n  year: 1956,\n  year2: 1972,\n  country: \"United States\"\n})\nCREATE (williamBragg:Laureate {\n  name: \"William Lawrence Bragg\",\n  year: 1915,\n  age: 25,\n  country: \"United Kingdom\"\n})\nCREATE (arthurAshkin:Laureate {\n  name: \"Arthur Ashkin\",\n  year: 2018,\n  age: 96,\n  country: \"United States\"\n})\nCREATE (marieCurie:Laureate {\n  name: \"Marie Curie\",\n  year: 1903,\n  awardShare: 0.25,\n  country: \"Poland/France\"\n})\nCREATE (mariaGoeppertMayer:Laureate {\n  name: \"Maria Goeppert-Mayer\",\n  year: 1963,\n  awardShare: 0.25,\n  country: \"United States\"\n})\nCREATE (donnaStrickland:Laureate {\n  name: \"Donna Strickland\",\n  year: 2018,\n  awardShare: 0.25,\n  country: \"Canada\"\n})\nCREATE (andreaGhez:Laureate {\n  name: \"Andrea Ghez\",\n  year: 2020,\n  awardShare: 0.25,\n  country: \"United States\"\n})\nCREATE (anneLhuillier:Laureate {\n  name: \"Anne L'Huillier\",\n  year: 2023,\n  awardShare: 0.33,\n  country: \"France\"\n})\n\nMATCH (l:Laureate), (p:Prize) \nWHERE p.name = \"Nobel Prize in Physics\"\nCREATE (l)-[:AWARDED_NOBEL_PRIZE]->(p)\n```\n\n3. Create the `Discipline` nodes and relate them to the `Nobel Prize in Physics`:\n```cypher\nCREATE (particlePhysics:Discipline {\n  name: \"Particle Physics\"\n})\nCREATE (atomicPhysics:Discipline {\n  name: \"Atomic Physics\"\n})\nCREATE (semiconductorPhysics:Discipline {\n  name: \"Semiconductor Physics\"\n})\nCREATE (magnetics:Discipline {\n  name: \"Magnetics\"\n})\n\nMATCH (p:Prize), (d:Discipline)\nWHERE p.name = \"Nobel Prize in Physics\"\nCREATE (p)-[:AWARDED_IN]->(d)\n```\n\n4. Create the `Year` nodes and relate them to the `Nobel Prize in Physics` when it was not awarded:\n```cypher\nCREATE (year1916:Year {\n  year: 1916,\n  awardedStatus: \"Not Awarded\"\n})\nCREATE (year1931:Year {\n  year: 1931,\n  awardedStatus: \"Not Awarded\"\n})\nCREATE (year1934:Year {\n  year: 1934,\n  awardedStatus: \"Not Awarded\"\n})\nCREATE (year1940:Year {\n  year: 1940,\n  awardedStatus: \"Not Awarded\"\n})\nCREATE (year1941:Year {\n  year: 1941,\n  awardedStatus: \"Not Awarded\"\n})\nCREATE (year1942:Year {\n  year: 1942,\n  awardedStatus: \"Not Awarded\"\n})\n\nMATCH (p:Prize), (y:Year)\nWHERE p.name = \"Nobel Prize in Physics\" AND y.awardedStatus = \"Not Awarded\"\nCREATE (p)-[:NOT_AWARDED_IN]->(y)\n```\n\n5. Create the `Study` node and relate it to the `Nobel Prize in Physics`:\n```cypher\nCREATE (study2020:Study {\n  year: 2020,\n  findings: \"Half of the Nobel Prizes for science awarded between 1995 and 2017 are clustered in few disciplines. Particle physics (14%), atomic physics (10.9%), and 3 non-physics disciplines dominate the prize in recent decades, followed by semiconductor physics and magnetics.\"\n})\n\nMATCH (p:Prize), (s:Study)\nWHERE p.name = \"Nobel Prize in Physics\"\nCREATE (p)-[:STUDIED_IN]->(s)\n```\n\nThese CYPHER queries create a knowledge graph with the following entities and relationships:\n- `Nobel Prize in Physics` node\n- `Laureate` nodes connected to the `Nobel Prize in Physics` node\n- `Discipline` nodes connected to the `Nobel Prize in Physics` node\n- `Year` nodes connected to the `Nobel Prize in Physics` node when it was not awarded\n- `Study` node connected to the `Nobel Prize in Physics` node\n\nThis knowledge graph can be used to explore the relationships between the Nobel Prize in Physics, the laureates, the disciplines, the years when the prize was not awarded, and the study findings.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 21,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 22,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 22,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 9.923979997634888
    },
    {
        "url": "https://en.wikipedia.org/wiki/Ice_cream",
        "queries": "Here are some CYPHER queries that could be used to create a knowledge graph encapsulating the relationships between entities in the given text:\n\n```cypher\n// Create nodes for the main entities\nCREATE (IceCream:FrozenDessert {name: \"Ice Cream\"})\nCREATE (Gelato:FrozenDessert {name: \"Gelato\"})\nCREATE (FrozenCustard:FrozenDessert {name: \"Frozen Custard\"})\nCREATE (SoftServe:FrozenDessert {name: \"Soft Serve\"})\nCREATE (AlternativeMilk:FrozenDessert {name: \"Alternative Milk Ice Cream\"})\nCREATE (BananaIceCream:FrozenDessert {name: \"Banana Nice Cream\"})\nCREATE (FrozenYogurt:FrozenDessert {name: \"Frozen Yogurt\"})\nCREATE (Sorbet:FrozenDessert {name: \"Sorbet\"})\nCREATE (Sherbet:FrozenDessert {name: \"Sherbet\"})\n\n// Create relationships between the main entities\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (g:FrozenDessert {name: \"Gelato\"})\nCREATE (i)-[:VARIANT_OF]->(g)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (f:FrozenDessert {name: \"Frozen Custard\"})\nCREATE (f)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (s:FrozenDessert {name: \"Soft Serve\"})\nCREATE (s)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (a:FrozenDessert {name: \"Alternative Milk Ice Cream\"})\nCREATE (a)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (b:FrozenDessert {name: \"Banana Nice Cream\"})\nCREATE (b)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (f:FrozenDessert {name: \"Frozen Yogurt\"})\nCREATE (f)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (s:FrozenDessert {name: \"Sorbet\"})\nCREATE (s)-[:VARIANT_OF]->(i)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (s:FrozenDessert {name: \"Sherbet\"})\nCREATE (s)-[:VARIANT_OF]->(i)\n\n// Create nodes for the historical facts\nCREATE (Persia:Location {name: \"Persia\"})\nCREATE (Rome:Location {name: \"Rome\"})\nCREATE (Japan:Location {name: \"Japan\"})\nCREATE (MughalEmpire:Location {name: \"Mughal Empire\"})\nCREATE (France:Location {name: \"France\"})\nCREATE (EnglandUK:Location {name: \"England/UK\"})\nCREATE (Italy:Location {name: \"Italy\"})\nCREATE (US:Location {name: \"United States\"})\nCREATE (NewZealand:Location {name: \"New Zealand\"})\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (p:Location {name: \"Persia\"})\nCREATE (i)-[:ORIGINATED_IN]->(p)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (r:Location {name: \"Rome\"})\nCREATE (i)-[:ORIGINATED_IN]->(r)\n\nMATCH (i:FrozenDessert {name: \"Kakig\u014dri\"})\nMATCH (j:Location {name: \"Japan\"})\nCREATE (i)-[:ORIGINATED_IN]->(j)\n\nMATCH (i:FrozenDessert {name: \"Kulfi\"})\nMATCH (m:Location {name: \"Mughal Empire\"})\nCREATE (i)-[:ORIGINATED_IN]->(m)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (f:Location {name: \"France\"})\nCREATE (i)-[:INTRODUCED_TO]->(f)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (e:Location {name: \"England/UK\"})\nCREATE (i)-[:INTRODUCED_TO]->(e)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (it:Location {name: \"Italy\"})\nCREATE (i)-[:INTRODUCED_TO]->(it)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (u:Location {name: \"United States\"})\nCREATE (i)-[:INTRODUCED_TO]->(u)\n\nMATCH (i:FrozenDessert {name: \"Ice Cream\"})\nMATCH (n:Location {name: \"New Zealand\"})\nCREATE (i)-[:INTRODUCED_TO]->(n)\n```\n\nThis creates nodes for the various types of frozen desserts mentioned in the text, with relationships between them indicating which ones are variants of ice cream. It also creates nodes for the locations mentioned in the history of ice cream, and relationships indicating where different frozen desserts originated from or were introduced to.\n\nYou can further enrich the knowledge graph by creating nodes for the key people, techniques, and inventions mentioned in the text, and adding relationships between those entities and the frozen dessert types.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 18,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 17,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 17,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 11.094358682632446
    },
    {
        "url": "https://en.wikipedia.org/wiki/Great_Wall_of_China",
        "queries": "Here are some CYPHER queries for creating a knowledge graph based on the information in the given text:\n\n1. Create nodes for the different entities mentioned:\n```cypher\nCREATE (:Entity {name: \"Great Wall of China\"})\nCREATE (:Entity {name: \"Qin Shi Huang\"})\nCREATE (:Entity {name: \"Ming dynasty\"})\nCREATE (:Entity {name: \"Mongol tribes\"})\nCREATE (:Entity {name: \"Manchu\"})\nCREATE (:Entity {name: \"Jiayu Pass\"})\nCREATE (:Entity {name: \"Badaling Great Wall\"})\nCREATE (:Entity {name: \"Jinshanling\"})\nCREATE (:Entity {name: \"Mutianyu Great Wall\"})\nCREATE (:Entity {name: \"Shanhai Pass\"})\nCREATE (:Entity {name: \"Jiaoshan Great Wall\"})\nCREATE (:Entity {name: \"Jiumenkou\"})\nCREATE (:Entity {name: \"Sticky rice mortar\"})\n```\n\n2. Create relationships between the entities:\n```cypher\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (qsh:Entity {name: \"Qin Shi Huang\"})\nCREATE (gw)-[:BUILT_BY]->(qsh)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (md:Entity {name: \"Ming dynasty\"})\nCREATE (gw)-[:REBUILT_BY]->(md)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (mt:Entity {name: \"Mongol tribes\"})\nCREATE (gw)-[:DEFENDED_AGAINST]->(mt)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (mc:Entity {name: \"Manchu\"})\nCREATE (gw)-[:DEFENDED_AGAINST]->(mc)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (jp:Entity {name: \"Jiayu Pass\"})\nCREATE (gw)-[:HAS_PART]->(jp)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (bg:Entity {name: \"Badaling Great Wall\"})\nCREATE (gw)-[:HAS_PART]->(bg)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (js:Entity {name: \"Jinshanling\"})\nCREATE (gw)-[:HAS_PART]->(js)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (mw:Entity {name: \"Mutianyu Great Wall\"})\nCREATE (gw)-[:HAS_PART]->(mw)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (sp:Entity {name: \"Shanhai Pass\"})\nCREATE (gw)-[:HAS_PART]->(sp)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (jg:Entity {name: \"Jiaoshan Great Wall\"})\nCREATE (gw)-[:HAS_PART]->(jg)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (jm:Entity {name: \"Jiumenkou\"})\nCREATE (gw)-[:HAS_PART]->(jm)\n\nMATCH (gw:Entity {name: \"Great Wall of China\"})\nMATCH (sm:Entity {name: \"Sticky rice mortar\"})\nCREATE (gw)-[:BUILT_WITH]->(sm)\n```\n\n3. Add additional properties to the nodes:\n```cypher\nMATCH (e:Entity)\nSET e.type = CASE\n  WHEN e.name = \"Great Wall of China\" THEN \"Fortification\"\n  WHEN e.name = \"Qin Shi Huang\" THEN \"Historical Figure\"\n  WHEN e.name = \"Ming dynasty\" THEN \"Dynasty\"\n  WHEN e.name = \"Mongol tribes\" THEN \"Ethnic Group\"\n  WHEN e.name = \"Manchu\" THEN \"Ethnic Group\"\n  WHEN e.name = \"Jiayu Pass\" THEN \"Location\"\n  WHEN e.name = \"Badaling Great Wall\" THEN \"Location\"\n  WHEN e.name = \"Jinshanling\" THEN \"Location\"\n  WHEN e.name = \"Mutianyu Great Wall\" THEN \"Location\"\n  WHEN e.name = \"Shanhai Pass\" THEN \"Location\"\n  WHEN e.name = \"Jiaoshan Great Wall\" THEN \"Location\"\n  WHEN e.name = \"Jiumenkou\" THEN \"Location\"\n  WHEN e.name = \"Sticky rice mortar\" THEN \"Material\"\n  ELSE \"Unknown\"\nEND\n```\n\nThis should create a basic knowledge graph representing the key entities and relationships mentioned in the text. You can further extend the graph by creating additional nodes and relationships as needed.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 13,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 12,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 12,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 9.200992107391357
    },
    {
        "url": "https://en.wikipedia.org/wiki/Octopus",
        "queries": "Based on the information provided in the text, here are some CYPHER queries that could be used to create a knowledge graph encapsulating the relationships between entities:\n\n1. Create nodes for the different types of octopuses:\n```\nCREATE\n  (octopus:Entity {name: \"Octopus\"}),\n  (giantPacificOctopus:Entity {name: \"Giant Pacific Octopus\"}),\n  (blueRingedOctopus:Entity {name: \"Blue-Ringed Octopus\"}),\n  (caribbeanReefOctopus:Entity {name: \"Caribbean Reef Octopus\"}),\n  (californiaTwoSpotOctopus:Entity {name: \"California Two-Spot Octopus\"}),\n  (eledoneeMoschata:Entity {name: \"Eledone moschata\"}),\n  (deepSeaOctopus:Entity {name: \"Deep Sea Octopus\"}),\n  (hawaiianDayOctopus:Entity {name: \"Hawaiian Day Octopus\"}),\n  (argonaut:Entity {name: \"Argonaut\"}),\n  (spoonArmedOctopus:Entity {name: \"Spoon-Armed Octopus\"}),\n  (vulcanoctopus:Entity {name: \"Vulcanoctopus hydrothermalis\"}),\n  (cirrate:Entity {name: \"Cirrate Octopus\"}),\n  (grimpoteuthis:Entity {name: \"Grimpoteuthis (Dumbo Octopus)\"})\n```\n\n2. Create nodes for the different body parts and features of octopuses:\n```\nCREATE\n  (arm:Entity {name: \"Arm\"}),\n  (mantle:Entity {name: \"Mantle\"}),\n  (siphon:Entity {name: \"Siphon\"}),\n  (beak:Entity {name: \"Beak\"}),\n  (radula:Entity {name: \"Radula\"}),\n  (sucker:Entity {name: \"Sucker\"}),\n  (infundibulum:Entity {name: \"Infundibulum\"}),\n  (acetabulum:Entity {name: \"Acetabulum\"}),\n  (eye:Entity {name: \"Eye\"}),\n  (pupil:Entity {name: \"Pupil\"}),\n  (lens:Entity {name: \"Lens\"}),\n  (retina:Entity {name: \"Retina\"}),\n  (statocyst:Entity {name: \"Statocyst\"}),\n  (inksac:Entity {name: \"Ink Sac\"}),\n  (gonad:Entity {name: \"Gonad\"}),\n  (testis:Entity {name: \"Testis\"}),\n  (ovary:Entity {name: \"Ovary\"}),\n  (hectocotylus:Entity {name: \"Hectocotylus\"}),\n  (spermatophore:Entity {name: \"Spermatophore\"}),\n  (eggs:Entity {name: \"Eggs\"}),\n  (yolksac:Entity {name: \"Yolk Sac\"}),\n  (paralarva:Entity {name: \"Paralarva\"}),\n  (shell:Entity {name: \"Shell\"})\n```\n\n3. Create relationships between the entities:\n```\nMATCH (o:Entity {name: \"Octopus\"})\nCREATE\n  (o)-[:HAS_PART]->(arm:Entity {name: \"Arm\"}),\n  (o)-[:HAS_PART]->(mantle:Entity {name: \"Mantle\"}),\n  (o)-[:HAS_PART]->(siphon:Entity {name: \"Siphon\"}),\n  (o)-[:HAS_PART]->(beak:Entity {name: \"Beak\"}),\n  (o)-[:HAS_PART]->(radula:Entity {name: \"Radula\"}),\n  (o)-[:HAS_PART]->(sucker:Entity {name: \"Sucker\"}),\n  (sucker)-[:HAS_PART]->(infundibulum:Entity {name: \"Infundibulum\"}),\n  (sucker)-[:HAS_PART]->(acetabulum:Entity {name: \"Acetabulum\"}),\n  (o)-[:HAS_PART]->(eye:Entity {name: \"Eye\"}),\n  (eye)-[:HAS_PART]->(pupil:Entity {name: \"Pupil\"}),\n  (eye)-[:HAS_PART]->(lens:Entity {name: \"Lens\"}),\n  (eye)-[:HAS_PART]->(retina:Entity {name: \"Retina\"}),\n  (o)-[:HAS_PART]->(statocyst:Entity {name: \"Statocyst\"}),\n  (o)-[:HAS_PART]->(inksac:Entity {name: \"Ink Sac\"}),\n  (o)-[:HAS_PART]->(gonad:Entity {name: \"Gonad\"}),\n  (gonad)-[:HAS_PART]->(testis:Entity {name: \"Testis\"}),\n  (gonad)-[:HAS_PART]->(ovary:Entity {name: \"Ovary\"}),\n  (o)-[:HAS_PART]->(hectocotylus:Entity {name: \"Hectocotylus\"}),\n  (hectocotylus)-[:CONTAINS]->(spermatophore:Entity {name: \"Spermatophore\"}),\n  (o)-[:LAYS]->(eggs:Entity {name: \"Eggs\"}),\n  (eggs)-[:HAS_PART]->(yolksac:Entity {name: \"Yolk Sac\"}),\n  (eggs)-[:DEVELOPS_INTO]->(paralarva:Entity {name: \"Paralarva\"}),\n  (argonaut)-[:HAS_PART]->(shell:Entity {name: \"Shell\"})\n```\n\n4. Create relationships between the different types of octopuses:\n```\nMATCH (o:Entity {name: \"Octopus\"})\nCREATE\n  (giantPacificOctopus:Entity {name: \"Giant Pacific Octopus\"})-[:SUBCLASS_OF]->(o),\n  (blueRingedOctopus:Entity {name: \"Blue-Ringed Octopus\"})-[:SUBCLASS_OF]->(o),\n  (caribbeanReefOctopus:Entity {name: \"Caribbean Reef Octopus\"})-[:SUBCLASS_OF]->(o),\n  (californiaTwoSpotOctopus:Entity {name: \"California Two-Spot Octopus\"})-[:SUBCLASS_OF]->(o),\n  (eledoneeMoschata:Entity {name: \"Eledone moschata\"})-[:SUBCLASS_OF]->(o),\n  (deepSeaOctopus:Entity {name: \"Deep Sea Octopus\"})-[:SUBCLASS_OF]->(o),\n  (hawaiianDayOctopus:Entity {name: \"Hawaiian Day Octopus\"})-[:SUBCLASS_OF]->(o),\n  (argonaut:Entity {name: \"Argonaut\"})-[:SUBCLASS_OF]->(o),\n  (spoonArmedOctopus:Entity {name: \"Spoon-Armed Octopus\"})-[:SUBCLASS_OF]->(o),\n  (vulcanoctopus:Entity {name: \"Vulcanoctopus hydrothermalis\"})-[:SUBCLASS_OF]->(o),\n  (cirrate:Entity {name: \"Cirrate Octopus\"})-[:SUBCLASS_OF]->(o),\n  (grimpoteuthis:Entity {name: \"Grimpoteuthis (Dumbo Octopus)\"})-[:SUBCLASS_OF]->(o)\n```\n\nThese queries create a knowledge graph with nodes representing the different types of octopuses, their body parts and features, and the relationships between them. This can be used to explore the relationships and properties of octopuses based on the information provided in the given text.",
        "summary": {
            "Syntax Errors": 0,
            "Correctly Created Nodes": 35,
            "Incorrectly Created Nodes": 0,
            "Correctly Created Relationships": 28,
            "Incorrectly Created Relationships": 0,
            "Correctly Labelled Relationships": 28,
            "Incorrectly Labelled Relationships": 0
        },
        "execution_time_in_seconds": 14.946768760681152
    },
    {
        "url": "https://en.wikipedia.org/wiki/Serbia",
        "queries": "Here are the CYPHER queries for creating a knowledge graph based on the given text:\n\n```cypher\n// Create nodes for countries and regions\nCREATE (Serbia:Country {name: \"Serbia\"})\nCREATE (Hungary:Country {name: \"Hungary\"})\nCREATE (Romania:Country {name: \"Romania\"})\nCREATE (Bulgaria:Country {name: \"Bulgaria\"})\nCREATE (NorthMacedonia:Country {name: \"North Macedonia\"})\nCREATE (Croatia:Country {name: \"Croatia\"})\nCREATE (BosniaAndHerzegovina:Country {name: \"Bosnia and Herzegovina\"})\nCREATE (Montenegro:Country {name: \"Montenegro\"})\nCREATE (Kosovo:Region {name: \"Kosovo\"})\nCREATE (Vojvodina:Region {name: \"Vojvodina\"})\nCREATE (Srem:Region {name: \"Srem\"})\nCREATE (Backa:Region {name: \"Ba\u010dka\"})\nCREATE (Banat:Region {name: \"Banat\"})\nCREATE (Pannonia:Region {name: \"Pannonian Plain\"})\nCREATE (Balkans:Region {name: \"Balkans\"})\n\n// Create nodes for historical states\nCREATE (PrincipalityOfSerbia:HistoricalState {name: \"Principality of Serbia\", period: \"1815-1882\"})\nCREATE (KingdomOfSerbia:HistoricalState {name: \"Kingdom of Serbia\", period: \"1882-1918\"})\nCREATE (PeoplesRepublicOfSerbia:HistoricalState {name: \"People's Republic of Serbia\", period: \"1945-1963\"})\nCREATE (SocialistRepublicOfSerbia:HistoricalState {name: \"Socialist Republic of Serbia\", period: \"1963-1990\"})\n\n// Create nodes for empires and kingdoms\nCREATE (ByzantineEmpire:Empire {name: \"Byzantine Empire\"})\nCREATE (FrankishKingdom:Kingdom {name: \"Frankish Kingdom\"})\nCREATE (HungarianKingdom:Kingdom {name: \"Hungarian Kingdom\"})\nCREATE (OttomanEmpire:Empire {name: \"Ottoman Empire\"})\nCREATE (HabsburgEmpire:Empire {name: \"Habsburg Empire\"})\nCREATE (SerbianKingdom:Kingdom {name: \"Serbian Kingdom\"})\nCREATE (SerbianEmpire:Empire {name: \"Serbian Empire\"})\n\n// Create nodes for historical figures\nCREATE (ConstantineTheGreat:HistoricalFigure {name: \"Constantine the Great\"})\nCREATE (Karad\u017eordePetrovi\u0107:HistoricalFigure {name: \"Kara\u0111or\u0111e Petrovi\u0107\"})\nCREATE (Milo\u0161Obrenovi\u010d:HistoricalFigure {name: \"Milo\u0161 Obrenovi\u0107\"})\nCREATE (AleksandarKaradjordjevi\u010d:HistoricalFigure {name: \"Aleksandar Kara\u0111or\u0111evi\u0107\"})\nCREATE (PeterI:HistoricalFigure {name: \"Peter I of Serbia\"})\nCREATE (Alexander:HistoricalFigure {name: \"Alexander I of Yugoslavia\"})\nCREATE (Dra\u017eaMihailovi\u0107:HistoricalFigure {name: \"Dra\u017ea Mihailovi\u0107\"})\nCREATE (JosipBrozTito:HistoricalFigure {name: \"Josip Broz Tito\"})\nCREATE (SlobodanMilo\u0161evi\u0107:HistoricalFigure {name: \"Slobodan Milo\u0161evi\u0107\"})\n\n// Create relationships between entities\nMATCH (Serbia)-[:LOCATED_IN]->(Balkans)\nMATCH (Serbia)-[:LOCATED_IN]->(Pannonia)\nMATCH (Serbia)-[:BORDERED_BY]->(Hungary)\nMATCH (Serbia)-[:BORDERED_BY]->(Romania)\nMATCH (Serbia)-[:BORDERED_BY]->(Bulgaria)\nMATCH (Serbia)-[:BORDERED_BY]->(NorthMacedonia)\nMATCH (Serbia)-[:BORDERED_BY]->(Croatia)\nMATCH (Serbia)-[:BORDERED_BY]->(BosniaAndHerzegovina)\nMATCH (Serbia)-[:BORDERED_BY]->(Montenegro)\nMATCH (Serbia)-[:CLAIMS_BORDER_WITH]->(Kosovo)\nMATCH (PrincipalityOfSerbia)-[:PRECURSOR_OF]->(KingdomOfSerbia)\nMATCH (KingdomOfSerbia)-[:PRECURSOR_OF]->(PeoplesRepublicOfSerbia)\nMATCH (PeoplesRepublicOfSerbia)-[:PRECURSOR_OF]->(SocialistRepublicOfSerbia)\nMATCH (SerbianKingdom)-[:RECOGNIZED_BY]->(HolySee)\nMATCH (SerbianKingdom)-[:RECOGNIZED_BY]->(ByzantineEmpire)\nMATCH (SerbianEmpire)-[:EXPANDED_FROM]->(SerbianKingdom)\nMATCH (ConstantineTheGreat)-[:WAS_BORN_IN]->(Serbia)\nMATCH (Karad\u017eordePetrovi\u0107)-[:LED]->(FirstSerbianUprising)\nMATCH (Milo\u0161Obrenovi\u010d)-[:LED]->(SecondSerbianUprising)\nMATCH (AleksandarKaradjordjevi\u010d)-[:RULED]->(PrincipalityOfSerbia)\nMATCH (PeterI)-[:BECAME_KING_OF]->(KingdomOfSerbia)\nMATCH (Alexander)-[:BECAME_KING_OF]->(KingdomOfSerbs,Croats,Slovenes)\nMATCH (Dra\u017eaMihailovi\u0107)-[:LED]->(Chetniks)\nMATCH (JosipBrozTito)-[:LED]->(Partisans)\nMATCH (SlobodanMilo\u0161evi\u0107)-[:ROSE_TO_POWER_IN]->(Serbia)\n```\n\nThis set of CYPHER queries creates a knowledge graph with the following entities and relationships:\n\n1. Countries: Serbia, Hungary, Romania, Bulgaria, North Macedonia, Croatia, Bosnia and Herzegovina, Montenegro.\n2. Regions: Kosovo, Vojvodina, Srem, Ba\u010dka, Banat, Pannonian Plain, Balkans.\n3. Historical states: Principality of Serbia, Kingdom of Serbia, People's Republic of Serbia, Socialist Republic of Serbia.\n4. Empires and kingdoms: Byzantine Empire, Frankish Kingdom, Hungarian Kingdom, Ottoman Empire, Habsburg Empire, Serbian Kingdom, Serbian Empire.\n5. Historical figures: Constantine the Great, Kara\u0111or\u0111e Petrovi\u0107, Milo\u0161 Obrenovi\u0107, Aleksandar Kara\u0111or\u0111evi\u0107, Peter I, Alexander I of Yugoslavia, Dra\u017ea Mihailovi\u0107, Josip Broz Tito, Slobodan Milo\u0161evi\u0107.\n6. Relationships between entities, such as location, borders, claims, predecessors, recognition, expansion, leadership, and rise to power.\n\nThis knowledge graph can be used to explore the historical, political, and geographical context of Serbia, as well as the relationships between various entities mentioned in the given text.",
        "summary": {
            "Syntax Errors": 22,
            "Correctly Created Nodes": 31,
            "Incorrectly Created Nodes": 1,
            "Correctly Created Relationships": 0,
            "Incorrectly Created Relationships": 22,
            "Correctly Labelled Relationships": 0,
            "Incorrectly Labelled Relationships": 22
        },
        "execution_time_in_seconds": 12.24170708656311
    }
]