[
  {
    "url": "https://en.wikipedia.org/wiki/List_of_fictional_robots_and_androids",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the relationships between entities in the given text:\n```\n// Create nodes for the concepts mentioned in the text\nCREATE (Fiction {name: 'Works of Fiction'})\nCREATE (Robots {name: 'Robots and Androids'})\nCREATE (KarelCapek {name: 'Karel \u010capek'})\nCREATE (Play {name: 'Play'})\nCREATE (RUR {name: 'R.U.R.'})\n\n// Create relationships between the concepts\nMATCH (a:Concept {name: 'Works of Fiction'}), (b:Concept {name: 'Robots and Androids'})\nMERGE (a)-[:INCLUDES]->(b)\n\nMATCH (a:Concept {name: 'Robots and Androids'}), (b:Person {name: 'Karel \u010capek'})\nMERGE (a)-[:CREATED_BY]->(b)\n\nMATCH (a:Person {name: 'Karel \u010capek'}), (b:Concept {name: 'Play'})\nMERGE (a)-[:WROTE]->(b)\n\nMATCH (a:Concept {name: 'Play'}), (b:Work {name: 'R.U.R.'})\nMERGE (a)-[:NAMED]->(b)\n\n// Create properties for the nodes\nSET Robots.description = 'Depictions of robots, androids, and gynoids in literature, TV, and cinema'\nSET RUR.properties = 'Written in 1920, first performed in 1921'\n```\n\nThese queries create nodes for the main concepts mentioned in the text (\"Works of Fiction,\" \"Robots and Androids,\" \"Karel \u010capek,\" \"Play,\" and \"R.U.R.\"), establish relationships between these concepts (such as \"INCLUDES,\" \"CREATED_BY,\" \"WROTE,\" and \"NAMED\"), and set properties for the nodes to provide additional information, such as descriptions and dates.",
    "summary": {
      "Syntax Errors": 2,
      "Correctly Created Nodes": 3,
      "Incorrectly Created Nodes": 2,
      "Correctly Created Relationships": 1,
      "Incorrectly Created Relationships": 3,
      "Correctly Labelled Relationships": 2,
      "Incorrectly Labelled Relationships": 2
    },
    "execution_time_in_seconds": 218.60828399658203
  },
  {
    "url": "https://en.wikipedia.org/wiki/Abacus",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for main entities\nMERGE (abacus:Entity {name: 'Abacus'})\nMERGE (society:Entity {name: 'Society'})\nMERGE (calculation:Entity {name: 'Calculation'})\nMERGE (design:Entity {name: 'Design'})\nMERGE (counting_frame:Entity {name: 'Counting Frame'})\nMERGE (history:Entity {name: 'History'})\nMERGE (countries:Entity {name: 'Countries'})\nMERGE (suanpan:Entity {name: 'Suanpan'})\nMERGE (soroban:Entity {name: 'Soroban'})\nMERGE (nepohualtzintzin:Entity {name: 'Nepohualtzintzin'})\nMERGE (quipu:Entity {name: 'Quipu'})\n\n# Create relationships between entities\nMERGE (abacus)-[:RELATED_TO]->(society)\nMERGE (abacus)-[:USED_FOR]->(calculation)\nMERGE (abacus)-[:HAS_A]->(design)\nMERGE (abacus)-[:HAS_A]->(counting_frame)\nMERGE (abacus)-[:HAS_A_HISTORY]->(history)\nMERGE (abacus)-[:USED_IN]->(countries)\nMERGE (suanpan)-[:IS_A]->(abacus)\nMERGE (soroban)-[:IS_A]->(abacus)\nMERGE (nepohualtzintzin)-[:IS_A]->(abacus)\nMERGE (quipu)-[:IS_RELATED_TO]->(abacus)\n\n# Add properties to entities\nSET abacus.description = 'A hand-operated calculating tool used from ancient times until the adoption of the Arabic numeral system.'\nSET society.description = 'Abacus was used in various societies around the world, including ancient Near East, Europe, China, and Russia.'\nSET calculation.description = 'Abacus was used for calculations like addition, subtraction, multiplication, division, and square and cube roots.'\nSET design.description = 'The design of an abacus consists of a two-dimensional array of slidable beads or similar objects, arranged on rods or in grooves.'\nSET counting_frame.description = 'Counting frame is another name for an abacus, emphasizing its function in counting and arithmetic operations.'\nSET history.description = 'The history of the abacus dates back to ancient civilizations and has been used by various cultures over time.'\nSET countries.description = 'Abacus is still used in some countries, such as Eastern Europe, Russia, China, and Africa, for calculations and teaching mathematics.'\nSET suanpan.description = 'Suanpan is the Chinese abacus, with a unique design and calculation techniques, and is widely used in China.'\nSET soroban.description = 'Soroban is the Japanese abacus, introduced from China, and is known for its 1:4 bead ratio and diamond-shaped beads.'\nSET nepohualtzintzin.description = 'Nepohualtzintzin was an abacus used in ancient Aztec culture with a base-20 system and 13 rows of beads.'\nSET quipu.description = 'Quipu is an ancient Inca recording device made of knotted cords used for accounting, storytelling, and possibly other purposes.'\n```\n\nThese queries create a basic knowledge graph with nodes representing main entities and relationships between them. The `MERGE` keyword is used to create new nodes or match existing ones. Relationships are created using the `-[:RELATIONSHIP_TYPE]->` syntax. Properties are set using the `SET` keyword.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 11,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 10,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 10,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 120.17533802986145
  },
  {
    "url": "https://en.wikipedia.org/wiki/Fulgurite",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Node definitions\nMERGE (Fulgurites:Entity {name: 'Fulgurites'})\nMERGE (FossilizedLightning:Entity {name: 'Fossilized Lightning'})\nMERGE (Latin:Entity {name: 'Latin'})\nMERGE (SiO2:Entity {name: 'SiO2'})\nMERKE (Lechatelierite:Entity {name: 'Lechatelierite'})\nMERGE (Mineraloid:Entity {name: 'Mineraloid'})\nMERGE (CloudGroundLightning:Entity {name: 'Cloud-Ground Lightning'})\nMERGE (Voltage:Entity {name: 'Voltage'})\nMERGE (Sediments:Entity {name: 'Sediments'})\nMERGE (Glass:Entity {name: 'Glass'})\nMERGE (Insulators:Entity {name: 'Insulators'})\nMERGE (DielectricBreakdown:Entity {name: 'Dielectric Breakdown'})\nMERGE (Lightning:Entity {name: 'Lightning'})\nMERGE (MineralGrains:Entity {name: 'Mineral Grains'})\nMERGE (AmorphousSilicaGlass:Entity {name: 'Amorphous Silica Glass'})\nMERGE (Protocrystalline:Entity {name: 'Protocrystalline'})\nMERGE (Microcrystalline:Entity {nameIntersect: 'Microcrystalline'})\nMERGE (Mineraloids:Entity {name: 'Mineraloids'})\nMERGE (DeformationFeatures:Entity {name: 'Deformation Features'})\nMERGE (Polymorphism:Entity {name: 'Polymorphism'})\nMERGE (MoistureContent:Entity {name: 'Moisture Content'})\nMERGE (NaturalFulgurites:Entity {name: 'Natural Fulgurites'})\nMERGE (Coloration:Entity {name: 'Coloration'})\nMERGE (PowerLines:Entity {name: 'Power Lines'})\nMERGE (SyntheticMaterials:Entity {name: 'Synthetic Materials'})\nMERGE (ManMadeObjects:Entity {name: 'Man-Made Objects'})\nMERGE (TypeIFulgurites:Entity {name: 'Type I Fulgurites'})\nMERGE (Sand:Entity {name: 'Sand'})\nMERGE (Exteriors:Entity {name: 'Exteriors'})\nMERGE (BranchingFulgurites:Entity {name: 'Branching Fulgurites'})\nMERGE (Fractal:Entity {name: 'Fractal'})\nMERGE (MacroscopicNetwork:Entity {name: 'Macroscopic Network'})\nMERGE (MicroscopicNetwork:Entity {name: 'Microscopic Network'})\nMERGE (RootLikeBranches:Entity {name: 'Root-Like Branches'})\nMERGE (LargeSpecimens:Entity {name: 'Large Specimens'})\nMERGE (Subsoil:Entity {name: 'Subsoil'})\nMERGE (SedimentarySurface:Entity {name: 'Sedimentary Surface'})\nMERGE (YaleUniversity:Entity {name: 'Yale University'})\nMERGE (PeabodyMuseum:Entity {name: 'Peabody Museum'})\nMERGE (NaturalHistory:Entity {name: 'Natural History'})\nMERGE (CharlesDarwin:Entity {name: 'Charles Darwin'})\nMERGE (Beagle:Entity {name: 'Beagle'})\nMERGE (Cumberland:Entity {name: 'Cumberland'})\nMERGE (WinansLake:Entity {name: 'Winans Lake'})\nMERGE (LivingstonCounty:Entity {name: 'Livingston County'})\nMERGE (Michigan:Entity {name: 'Michigan'})\nMERGE (Sediment:Entity {name: 'Sediment'})\nMERGE (Frequency:Entity {name: 'Frequency'})\nMERGE (LightningStrikes:Entity {name: 'Lightning Strikes'})\nMERGE (RegionalClimates:Entity {name: 'Regional Climates'})\nMERGE (Paleolightning:Entity {name: 'Paleolightning'})\nMERGE (Indicators:Entity {name: 'Indicators'})\nMERGE (RemanentMagnetizationSignatures:Entity {name: 'Remanent Magnetization Signatures'})\nMERGE (HighPressureMaterials:Entity {name: 'High-Pressure Materials'})\nMERGE (HighTemperatureMaterials:Entity {name: 'High-Temperature Materials'})\nMERGE (NuclearWeaponTests:Entity {name: 'Nuclear Weapon Tests'})\nMERGE (HypervelocityImpacts:Entity {name: 'Hypervelocity Impacts'})\nMERGE (InterstellarSpace:Entity {name: 'Interstellar Space'})\nMERGE (ShockedQuartz:Entity {name: 'Shocked Quartz'})\nMERGE (PersianPolymaths:Entity {name: 'Persian Polymaths'})\nMERGE (Avicenna:Entity {name: 'Avicenna'})\nMERGE (AlBiruni:Entity {name: 'Al-Biruni'})\nMERGE (Centuries:Entity {name: 'Centuries'})\nMERGE (SubterrestrialFires:Entity {name: 'Subterrestrial Fires'})\nMERGE (CurativePowers:Entity {name: 'Curative Powers'})\nMERGE (LeonhardDavidHermann:Entity {name: 'Leonhard David Hermann'})\nMERGE (Maslographia:Entity {name: 'Maslographia'})\nMERGE (NaturalScientists:Entity {name: 'Natural Scientists'})\nMERGE (HoraceBenedictDeSaussure:Entity {name: 'Horace Benedict de Saussure'})\nMERGE (AlexanderVonHumboldt:Entity {name: 'Alexander von Humboldt'})\nMERGE (Agriculturist:Entity {name: 'Agriculturist'})\nMERGE (Hentzen:Entity {name: 'Hentzen'})\nMERGE (Mineralogist:Entity {name: 'Mineralogist'})\nMERGE (MiningEngineer:Entity {name: 'Mining Engineer'})\nMERGE (JohannKarlWilhelmVoigt:Entity {name: 'Johann Karl Wilhelm Voigt'})\nMERGE (KarlGustavFiedler:Entity {name: 'Karl Gustav Fiedler'})\nMERGE (AnnalenDerPhysik:Entity {name: 'Annalen der Physik'})\n\n# Relationship definitions\nMERGE (Fulgurites)-[:IS_A]->(FossilizedLightning)\nMERGE (Fulgurites)-[:DERIVED_FROM]->(Latin)\nMERGE (Fulgurites)-[:COMPOSED_OF]->(Lechatelierite)\nMERGE (Lechatelierite)-[:IS_A]->(Mineraloid)\nMERGE (Fulgurites)-[:FORMED_BY]->(CloudGroundLightning)\nMERGE (CloudGroundLightning)-[:BRIDGES]->(Voltage)\nMERGE (CloudGroundLightning)-[:PROPAGATES_INTO]->(Sediments)\nMERGE (Sediments)-[:CONTAIN]->(SiO2)\nMERGE (Sediments)-[:RESULT_IN]->(Glass)\nMERGE (Glass)-[:HAS]->(Insulators)\nMERGE (Insulators)-[:PRODUCED_BY]->(DielectricBreakdown)\nMERGE (DielectricBreakdown)-[:PRODUCED_BY]->(HighVoltageDischarges)\nMERGE (HighVoltageDischarges)-[:INCLUDE]->(Lightning)\nMERGE (Lightning)-[:STRIKES]->(MineralGrains)\nMERGE (MineralGrains)-[:CONTAIN]->(SiO2)\nMERGE (SiO2)-[:HAS_PHASE]->(Lechatelierite)\nMERGE (Lechatelierite)-[:IS]->(AmorphousSilicaGlass)\nMERGE (Fulgurites)-[:SHOW_EVIDENCE_OF]->(Protocrystalline)\nMERGE (Fulgurites)-[:SHOW_EVIDENCE_OF]->(Microcrystalline)\nMERGE (Fulgurites)-[:CLASSIFIED_AS]->(Mineraloids)\nMERGE (LightningChannel)-[:HAS]->(DeformationFeatures)\nMERGE (DeformationFeatures)-[:IS_A]->(Polymorphism)\nMERGE (Fulgurites)-[:DEPEND_ON]->(MoistureContent)\nMERGE (NaturalFulgurites)-[:FALL_ON]->(Coloration)\nMERGE (Coloration)-[:RESULT_FROM]->(Iron)\nMERGE (Lechatelierite)-[:PRODUCED_VIA]->(ControlledArcing)\nMERGE (ControlledArcing)-[:PRODUCED_BY]->(ArtificialElectricity)\nMERGE (Lechatelierite)-[:PRODUCED_VIA]->(UncontrolledArcing)\nMERGE (UncontrolledArcing)-[:PRODUCED_BY]->(PowerLines)\nMERGE (PowerLines)-[:PRODUCE]->(BrightlyColoredLechatelierites)\nMERGE (BrightlyColoredLechatelierites)-[:ARE]->(SyntheticMaterials)\nMERGE (BrightlyColoredLechatelierites)-[:REFLECT]->(SyntheticMaterials)\nMERGE (Lightning)-[:STRIKES]->(ManMadeObjects)\nMERGE (TypeIFulgurites)-[:ARE]->(Sand)\nMERGE (TypeIFulgurites)-[:HAVE_INTERIOR]->(SmoothInterior)\nMERGE (SmoothInterior)-[:LINED_WITH]->(FineBubbles)\nMERGE (TypeIFulgurites)-[:HAVE_EXTERIORS]->(Exteriors)\nMERGE (Exteriors)-[:COATED_WITH]->(RoughSedimentaryParticles)\nMERGE (Exteriors)-[:COATED_WITH]->(SmallRocks)\nMERGE (OtherTypes)-[:HAVE_EXTERIORS]->(Exteriors)\nMERGE (Exteriors)-[:CAN_BE]->(Porous)\nMERGE (Exteriors)-[:CAN_BE]->(Smooth)\nMERGE (BranchingFulgurites)-[:DISPLAY]->(Fractal)\nMERGE (Fractal)-[:HAS_PROPERTY]->(SelfSimilarity)\nMERGE (Fractal)-[:HAS_PROPERTY]->(StructuralScaleInvariance)\nMERGE (BranchingFulgurites)-[:DISPLAY]->(MacroscopicNetwork)\nMERGE (BranchingFulgurites)-[:DISPLAY]->(MicroscopicNetwork)\nMERGE (MacroscopicNetwork)-[:HAS]->(RootLikeBranches)\nMERGE (MicroscopicNetwork)-[:HAS]->(RootLikeBranches)\nMERGE (BranchingFulgurites)-[:DISPLAY]->(Texture)\nMERGE (Texture)-[:WITHOUT]->(CentralChannels)\nMERGE (Fulgurites)-[:INCLUDE]->(LargeSpecimens)\nMERGE (LargeSpecimens)-[:ARE_DIFFICULT_TO]->(Collect)\nMERGE (Fulgurites)-[:CAN_EXCEED]->(Diameter)\nMERGE (Fulgurites)-[:CAN_PENETRATE]->(Subsoil)\nMERGE (Fulgurites)-[:CAN_FORM_ON]->(SedimentarySurface)\nMERGE (YaleUniversity)-[:HAS]->(PeabodyMuseum)\nMERGE (PeabodyMuseum)-[:HAS_COLLECTION_OF]->(FulguriteSpecimen)\nMERGE (FulguriteSpecimen)-[:IS_ONE_OF]->(LongestKnown)\nMERGE (CharlesDarwin)-[:RECORDED_IN]->(Beagle)\nMERGE (Tubes)-[:FOUND_IN]->(Drigg)\nMERGE (Drigg)-[:IS_IN]->(Cumberland)\nMERGE (Fulgurites)-[:FOUND_IN]->(WinansLake)\nMERGE (WinansLake)-[:IS_IN]->(LivingstonCounty)\nMERGE (LivingstonCounty)-[:IS_IN]->(Michigan)\nMERGE (Fulgurites)-[:CLASSIFIED_INTO]->(Types)\nMERGE (Types)-[:RELATED_TO]->(Sediment)\nMERGE (Fulgurites)-[:CAN_BE_USED_TO]->(Estimate)\nMERGE (Estimate)-[:HELP_UNDERSTAND]->(Frequency)\nMERGE (Frequency)-[:OF]->(LightningStrikes)\nMERGE (LightningStrikes)-[:OVER_A]->(Period)\nMERGE (Paleolightning)-[:IS_THE_STUDY_OF]->(Indicators)\nMERGE (Indicators)-[:OF]->(PastLightningStrikes)\nMERGE (PastLightningStrikes)-[:IN_THE_FORM_OF]->(Fulgurites)\nMERGE (PastLightningStrikes)-[:IN_THE_FORM_OF]->(RemanentMagnetizationSignatures)\nMERGE (HighPressureMaterials)-[:HAVE_BEEN_OBSERVED_IN]->(Fulgurites)\nMERGE (HighTemperatureMaterials)-[:HAVE_BEEN_OBSERVED_IN]->(Fulgurites)\nMERGE (HighPressureMaterials)-[:HAVE_BEEN_OBSERVED_IN]->(HighTemperatureMaterials)\nMERGE (HighPressureMaterials)-[:FORMED_IN]->(ExtremeEnvironments)\nMERGE (HighTemperatureMaterials)-[:FORMED_IN]->(ExtremeEnvironments)\nMERGE (ExtremeEnvironments)-[:INCLUDE]->(NuclearWeaponTests)\nMERGE (ExtremeEnvironments)-[:INCLUDE]->(HypervelocityImpacts)\nMERGE (ExtremeEnvironments)-[:INCLUDE]->(InterstellarSpace)\nMERGE (ShockedQuartz)-[:FIRST_DESCRIBED_IN]->(Fulgurites)\nMERGE (PersianPolymaths)-[:MENTIONED]->(FulguriteTubes)\nMERGE (Avicenna)-[:IS_A]->(PersianPolymaths)\nMERGE (AlBiruni)-[:IS_A]->(PersianPolymaths)\nMERGE (Fulgurites)-[:DESCRIBED_BUT_MISINTERPRETED_AS]->(Centuries)\nMERGE (Centuries)-[:RESULT_FROM]->(SubterrestrialFires)\nMERGE (SubterrestrialFires)-[:ATTRIBUTED]->(CurativePowers)\nMERGE (LeonhardDavidHermann)-[:MENTIONED_IN]->(Maslographia)\nMERGE (NaturalScientists)-[:GAVE_ATTENTION_TO]->(Fulgurites)\nMERGE (CharlesDarwin)-[:IS_A]->(NaturalScientists)\nMERGE (HoraceBenedictDeSaussure)-[:IS_A]->(NaturalScientists)\nMERGE (AlexanderVonHumboldt)-[:IS_A]->(NaturalScientists)\nMERGE (TrueProcess)-[:IDENTIFIED_BY]->(Agriculturist)\nMERGE (Hentzen)-[:IS_AN]->(Agriculturist)\nMERGE (TrueProcess)-[:IDENTIFIED_BY]->(Mineralogist)\nMERGE (TrueProcess)-[:IDENTIFIED_BY]->(MiningEngineer)\nMERGE (JohannKarlWilhelmVoigt)-[:IS_A]->(Mineralogist)\nMERGE (JohannKarlWilhelmVoigt)-[:IS_A]->(MiningEngineer)\nMERGE (KarlGustavFiedler)-[:PUBLISHED]->(Phenomenon)\nMERGE (Phenomenon)-[:DOCUMENTED_IN]->(AnnalenDerPhysik)\n```\n\nNote that I've made some assumptions and simplifications in the interest of brevity. You may want to further refine the schema and relationships based on your specific requirements and the context of the text.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 75,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 105,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 105,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 168.18278121948242
  },
  {
    "url": "https://en.wikipedia.org/wiki/Albert_A._Michelson",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Person nodes and relationships\nCREATE (albert:Person {name: \"Albert Abraham Michelson\", birthDate: \"December 19, 1852\", deathDate: \"May 9, 1931\"})\nCREATE (ulysses:Person {name: \"Ulysses S. Grant\"})\nCREATE (william:Person {name: \"William T. Sampson\"})\nCREATE (harriet:Person {name: \"Harriet Lane Levy\"})\nCREATE (miriam:Person {name: \"Miriam Michelson\", occupation: \"Novelist\"})\nCREATE (edna:Person {name: \"Edna Stanton\"})\nCREATE (margaret:Person {name: \"Margaret Hemingway\"})\nCREATE (peter:Person {name: \"Peter Michelson\", occupation: \"Physicist\"})\nCREATE (edward:Person {name: \"Edward Williams Morley\"})\nCREATE (francis:Person {name: \"Francis G. Pease\"})\nCREATE (hendrik:Person {name: \"Hendrik Lorentz\"})\nCREATE (robert:Person {name: \"Robert Shankland\"})\nCREATE (simon:Person {name: \"Simon Newcomb\"})\nCREATE (albert)-[:AWARDED_BY]->(ulysses)\nCREATE (albert)-[:MARRIED_TO]->(margaret)\nCREATE (albert)-[:MARRIED_TO]->(edna)\nCREATE (margaret)-[:RELATED_TO]->(william)\nCREATE (harriet)-[:RELATED_TO]->(william)\nCREATE (albert)-[:SIBLING_OF]->(miriam)\nCREATE (peter)-[:RELATED_TO]->(albert)\nCREATE (albert)-[:COLLABORATED_WITH]->(edward)\nCREATE (albert)-[:COLLABORATED_WITH]->(francis)\nCREATE (albert)-[:COLLABORATED_WITH]->(hendrik)\nCREATE (albert)-[:COLLABORATED_WITH]->(robert)\nCREATE (albert)-[:COLLABORATED_WITH]->(simon)\n\n# Create Organization nodes and relationships\nCREATE (usNavalAcademy:Organization {name: \"U.S. Naval Academy\"})\nCREATE (caseWesternReserve:Organization {name: \"Case Western Reserve University\"})\nCREATE (universityOfChicago:Organization {name: \"University of Chicago\"})\nCREATE (usNavy:Organization {name: \"United States Navy\"})\nCREATE (clarkUniversity:Organization {name: \"Clark University\"})\nCREATE (westernReserve:Organization {name: \"Western Reserve University\"})\nCREATE (collegeDeFrance:Organization {name: \"Coll\u00e8ge de France\"})\nCREATE (ecolePolytechnique:Organization {name: \"\u00c9cole Polytechnique\"})\nCREATE (nauticalAlmanacOffice:Organization {name: \"Nautical Almanac Office\"})\nCREATE (usNavalObservatory:Organization {name: \"United States Naval Observatory\"})\nCREATE (universityOfBerlin:Organization {name: \"University of Berlin\"})\nCREATE (universityOfHeidelberg:Organization {name: \"University of Heidelberg\"})\nCREATE (nobelPrize:Organization {name: \"Nobel Prize\"})\nCREATE (copleyMedal:Organization {name: \"Copley Medal\"})\nCREATE (henryDraperMedal:Organization {name: \"Henry Draper Medal\"})\nCREATE (goldMedal:Organization {name: \"Gold Medal of the Royal Astronomical Society\"})\nCREATE (mountWilsonObservatory:Organization {name: \"Mount Wilson Observatory\"})\nCREATE (navyLeague:Organization {name: \"Navy League of the United States\"})\nCREATE (computerMeasurementGroup:Organization {name: \"Computer Measurement Group\"})\nCREATE (bomemMichelsonAward:Organization {name: \"Bomem-Michelson Award\"})\nCREATE (michelsonMorleyAward:Organization {name: \"Michelson-Morley Award\"})\nCREATE (michelsonLectureSeries:Organization {name: \"Michelson Lecture Series\"})\nCREATE (michelsonPostdoctoralPrize:Organization {name: \"Michelson Postdoctoral Prize Lectureship\"})\nCREATE (aaMichelsonAward:Organization {name: \"A.A. Michelson Award\"})\nCREATE (michelsonMemorialLectures:Organization {name: \"Michelson Memorial Lecture Series\"})\nCREATE (us:Organization {name: \"United States\"})\nCREATE (prussia:Organization {name: \"Kingdom of Prussia\"})\nCREATE (poland:Organization {name: \"Poland\"})\nCREATE (navy:Organization {name: \"Navy\"})\nCREATE (army:Organization {name: \"Army\"})\nCREATE (npo:Organization {name: \"Ninth Naval District\"})\nCREATE (coblentzSociety:Organization {name: \"Coblentz Society\"})\nCREATE (americanPhilosophicalSociety:Organization {name: \"American Philosophical Society\"})\nCREATE (americanPhysicalSociety:Organization {name: \"American Physical Society\"})\nCREATE (americanAssociation:Organization {name: \"American Association for the Advancement of Science\"})\nCREATE (npo:Organization {name: \"NPOI\"})\nCREATE (vlti:Organization {name: \"VLTI\"})\nCREATE (chara:Organization {name: \"CHARA\"})\nCREATE (navy:Organization {name: \"Navy\"})\nCREATE (army:Organization {name: \"Army\"})\nCREATE (npo:Organization {name: \"Ninth Naval District\"})\nCREATE (coblentzSociety:Organization {name: \"Coblentz Society\"})\nCREATE (albert)-[:AFFILIATED_WITH]->(usNavalAcademy)\nCREATE (albert)-[:AFFILIATED_WITH]->(caseWesternReserve)\nCREATE (albert)-[:AFFILIATED_WITH]->(universityOfChicago)\nCREATE (albert)-[:AFFILIATED_WITH]->(usNavy)\nCREATE (albert)-[:AFFILIATED_WITH]->(clarkUniversity)\nCREATE (albert)-[:AFFILIATED_WITH]->(westernReserve)\nCREATE (albert)-[:AFFILIATED_WITH]->(collegeDeFrance)\nCREATE (albert)-[:AFFILIATED_WITH]->(ecolePolytechnique)\nCREATE (albert)-[:AFFILIATED_WITH]->(nauticalAlmanacOffice)\nCREATE (albert)-[:AFFILIATED_WITH]->(usNavalObservatory)\nCREATE (albert)-[:AFFILIATED_WITH]->(universityOfBerlin)\nCREATE (albert)-[:AFFILIATED_WITH]->(universityOfHeidelberg)\nCREATE (albert)-[:AWARDED_BY]->(nobelPrize)\nCREATE (albert)-[:AWARDED_BY]->(copleyMedal)\nCREATE (albert)-[:AWARDED_BY]->(henryDraperMedal)\nCREATE (albert)-[:AWARDED_BY]->(goldMedal)\nCREATE (albert)-[:AFFILIATED_WITH]->(mountWilsonObservatory)\nCREATE (albert)-[:AWARDED_BY]->(navyLeague)\nCREATE (albert)-[:AWARDED_BY]->(computerMeasurementGroup)\nCREATE (bomemMichelsonAward)-[:AWARDED_BY]->(coblentzSociety)\nCREATE (michelsonMorleyAward)-[:AWARDED_BY]->(caseWesternReserve)\nCREATE (michelsonLectureSeries)-[:AWARDED_BY]->(caseWesternReserve)\nCREATE (michelsonPostdoctoralPrize)-[:AWARDED_BY]->(caseWesternReserve)\nCREATE (aaMichelsonAward)-[:AWARDED_BY]->(computerMeasurementGroup)\nCREATE (michelsonMemorialLectures)-[:AWARDED_BY]->(usNavalAcademy)\nCREATE (albert)-[:BORN_IN]->(prussia)\nCREATE (albert)-[:DIED_IN]->(us)\nCREATE (albert)-[:AFFILIATED_WITH]->(navy)\nCREATE (albert)-[:RELEASED_FROM]->(npo)\nCREATE (albert)-[:AFFILIATED_WITH]->(army)\nCREATE (caseWesternReserve)-[:AFFILIATED_WITH]->(coblentzSociety)\nCREATE (albert)-[:MEMBER_OF]->(americanPhilosophicalSociety)\nCREATE (albert)-[:MEMBER_OF]->(americanPhysicalSociety)\nCREATE (albert)-[:MEMBER_OF]->(americanAssociation)\nCREATE (npo)-[:AFFILIATED_WITH]->(navy)\nCREATE (npo)-[:AFFILIATED_WITH]->(army)\nCREATE (albert)-[:AFFILIATED_WITH]->(vlti)\nCREATE (albert)-[:AFFILIATED_WITH]->(chara)\nCREATE (albert)-[:AFFILIATED_WITH]->(npo)\n\n# Create Location nodes and relationships\nCREATE (strelno:Location {name: \"Strelno\"})\nCREATE (posen:Location {name: \"Posen\"})\nCREATE (poland:Location {name: \"Poland\"})\nCREATE (sanFrancisco:Location {name: \"San Francisco\"})\nCREATE (murphysCamp:Location {name: \"Murphy's Camp, California\"})\nCREATE (virginiaCity:Location {name: \"Virginia City, Nevada\"})\nCREATE (paris:Location {name: \"Paris\"})\nCREATE (berlin:Location {name: \"Berlin\"})\nCREATE (heidelberg:Location {name: \"Heidelberg\"})\nCREATE (cleveland:Location {name: \"Cleveland, Ohio\"})\nCREATE (worcester:Location {name: \"Worcester, Massachusetts\"})\nCREATE (chicago:Location {name: \"Chicago\"})\nCREATE (pasadena:Location {name: \"Pasadena, California\"})\nCREATE (annapolis:Location {name: \"Annapolis\"})\nCREATE (washington:Location {name: \"Washington DC\"})\nCREATE (newYork:Location {name: \"New York\"})\nCREATE (irvineRanch:Location {name: \"Irvine Ranch, California\"})\nCREATE (santaAna:Location {name: \"Santa Ana, California\"})\nCREATE (mountWilson:Location {name: \"Mount Wilson\"})\nCREATE (lookoutMountain:Location {name: \"Lookout Mountain\"})\nCREATE (mountSanAntonio:Location {name: \"Mount San Antonio\"})\nCREATE (stellaDiameter:Location {name: \"Stellar Diameter\"})\nCREATE (stellaSeparation:Location {name: \"Stellar Separation\"})\nCREATE (stellaInterferometry:Location {name: \"Stellar Interferometry\"})\nCREATE (stellaInterferometryConfig:Location {name: \"Stellar Interferometry Configuration\"})\nCREATE (stellaInterferometryConfig)-[:LOCATED_IN]->(stellaInterferometry)\nCREATE (stellaDiameter)-[:LOCATED_IN]->(stellaInterferometry)\nCREATE (stellaSeparation)-[:LOCATED_IN]->(stellaInterferometry)\nCREATE (albert)-[:BORN_IN]->(strelno)\nCREATE (albert)-[:BORN_IN]->(posen)\nCREATE (prussia)-[:LOCATED_IN]->(poland)\nCREATE (albert)-[:LIVED_IN]->(sanFrancisco)\nCREATE (albert)-[:LIVED_IN]->(murphysCamp)\nCREATE (albert)-[:LIVED_IN]->(virginiaCity)\nCREATE (collegeDeFrance)-[:LOCATED_IN]->(paris)\nCREATE (ecolePolytechnique)-[:LOCATED_IN]->(paris)\nCREATE (universityOfBerlin)-[:LOCATED_IN]->(berlin)\nCREATE (universityOfHeidelberg)-[:LOCATED_IN]->(heidelberg)\nCREATE (caseWesternReserve)-[:LOCATED_IN]->(cleveland)\nCREATE (clarkUniversity)-[:LOCATED_IN]->(worcester)\nCREATE (universityOfChicago)-[:LOCATED_IN]->(chicago)\nCREATE (albert)-[:DIED_IN]->(pasadena)\nCREATE (usNavalAcademy)-[:LOCATED_IN]->(annapolis)\nCREATE (nauticalAlmanacOffice)-[:LOCATED_IN]->(washington)\nCREATE (margaret)-[:LIVED_IN]->(newYork)\nCREATE (irvineRanch)-[:LOCATED_IN]->(santaAna)\nCREATE (mountWilsonObservatory)-[:LOCATED_IN]->(mountWilson)\nCREATE (lookoutMountain)-[:LOCATED_IN]->(mountSanAntonio)\n```\n\nThese queries create nodes for people, organizations, and locations, as well as relationships between them. The relationships represent various affiliations, collaborations, awards, and geographical connections mentioned in the text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 90,
      "Incorrectly Created Nodes": 6,
      "Correctly Created Relationships": 98,
      "Incorrectly Created Relationships": 4,
      "Correctly Labelled Relationships": 92,
      "Incorrectly Labelled Relationships": 10
    },
    "execution_time_in_seconds": 142.30811429023743
  },
  {
    "url": "https://en.wikipedia.org/wiki/History_of_the_bicycle",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create a Person node for each unique person mentioned\nCREATE (GianGiacomoCaprotti:Person {name: \"Gian Giacomo Caprotti\"})\nCREATE (LeonardoDaVinci:Person {name: \"Leonardo da Vinci\"})\nCREATE (HansErhardLessing:Person {name: \"Hans-Erhard Lessing\"})\nCREATE (AugustoMarinoni:Person {name: \"Augusto Marinoni\"})\nCREATE (KarlVonDrais:Person {name: \"Karl von Drais\"})\nCREATE (DenisJohnson:Person {name: \"Denis Johnson\"})\nCREATE (JohnKeats:Person {name: \"John Keats\"})\nCREATE (WillardSawyer:Person {name: \"Willard Sawyer\"})\nCREATE (KirkpatrickMacmillan:Person {name: \"Kirkpatrick Macmillan\"})\nCREATE (GavinDalzell:Person {name: \"Gavin Dalzell\"})\nCREATE (ThomasMcCall:Person {name: \"Thomas McCall\"})\nCREATE (PhilippMoritzFischer:Person {name: \"Philipp Moritz Fischer\"})\nCREATE (ErnestMichaux:Person {name: \"Ernest Michaux\"})\nCREATE (PierreLallement:Person {name: \"Pierre Lallement\"})\nCREATE (GeorgesDeLaBouglise:Person {name: \"Georges de la Bouglise\"})\nCREATE (AimeOlivier:Person {name: \"Aim\u00e9 Olivier\"})\nCREATE (ReneOlivier:Person {name0: \"Ren\u00e9 Olivier\"})\nCREATE (Gabert:Person {name: \"Gabert\"})\nCREATE (EugeneMeyer:Person {name: \"Eug\u00e8ne Meyer\"})\nCREATE (JamesStarley:Person {name: \"James Starley\"})\nCREATE (JohnKempStarley:Person {name: \"John Kemp Starley\"})\nCREATE (AlbertAugustusPope:Person {name: \"Albert Augustus Pope\"})\nCREATE (GWPressey:Person {name: \"G.W. Pressey\"})\nCREATE (IsaacRJohnson:Person {name: \"Isaac R. Johnson\"})\nCREATE (HoseaLibbey:Person {name: \"Hosea W. Libbey\"})\n\n# Create a Vehicle node for each unique vehicle mentioned\nCREATE (Draisienne:Vehicle {name: \"Draisienne\", type: \"Bicycle\"})\nCREATE (Velocipede:Vehicle {name: \"Velocipede\", type: \"Bicycle\"})\nCREATE (Celerifere:Vehicle {name: \"C\u00e9l\u00e9rif\u00e8re\", type: \"Bicycle\"})\nCREATE (RikushuHonsha:Vehicle {name: \"\u9678\u821f\u5954\u8eca (Rikushu-honsha)\", type: \"Tricycle\"})\nCREATE (Laufmaschine:Vehicle {name: \"Laufmaschine\", type: \"Bicycle\"})\nCREATE (DandyHorse:Vehicle {name: \"Dandy Horse\", type: \"Bicycle\"})\nCREATE (HobbyHorse:Vehicle {name: \"Hobby Horse\", type: \"Bicycle\"})\nCREATE (Quadracycle:Vehicle {name: \"Quadracycle\", type: \"Four-wheeler\"})\nCREATE (PedalCrank:Vehicle {name: \"Pedal Crank\", type: \"Bicycle\"})\nCREATE (HighWheelBicycle:Vehicle {name: \"High-wheel Bicycle\", type: \"Bicycle\"})\nCREATE (PennyFarthing:Vehicle {name: \"Penny Farthing\", type: \"Bicycle\"})\nCREATE (Kangaroo:Vehicle {name: \"Kangaroo\", type: \"Bicycle\"})\nCREATE (Rover:Vehicle {name: \"Rover\", type: \"Bicycle\"})\nCREATE (Columbia:Vehicle {name: \"Columbia\", type: \"Bicycle\"})\nCREATE (AmericanStarBicycle:Vehicle {name: \"American Star Bicycle\", type: \"Bicycle\"})\nCREATE (Roadster:Vehicle {name: \"Roadster\", type: \"Bicycle\"})\n\n# Create relationships between people and vehicles\nMATCH (p:Person) WHERE p.name = \"Gian Giacomo Caprotti\"\nMATCH (v:Vehicle) WHERE v.name = \"Draisienne\"\nCREATE (p)-[:SKETCHED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Leonardo da Vinci\"\nMATCH (v:Vehicle) WHERE v.name = \"Draisienne\"\nCREATE (p)-[:ATTRIBUTED_TO]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Hans-Erhard Lessing\"\nMATCH (v:Vehicle) WHERE v.name = \"Draisienne\"\nCREATE (p)-[:DESCRIBED_AS_FRAUD]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Augusto Marinoni\"\nMATCH (v:Vehicle) WHERE v.name = \"Draisienne\"\nCREATE (p)-[:DEFENDED_AUTHENTICITY_OF]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Karl von Drais\"\nMATCH (v:Vehicle) WHERE v.name IN [\"Laufmaschine\", \"Draisienne\", \"DandyHorse\"]\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Denis Johnson\"\nMATCH (v:Vehicle) WHERE v.name IN [\"Velocipede\", \"HobbyHorse\"]\nCREATE (p)-[:SOLD]->(v)\n\nMATCH (p:Person) WHERE p.name = \"John Keats\"\nMATCH (v:Vehicle) WHERE v.name = \"HobbyHorse\"\nCREATE (p)-[:REFERRED_TO]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Willard Sawyer\"\nMATCH (v:Vehicle) WHERE v.name = \"Quadracycle\"\nCREATE (p)-[:MANUFACTURED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Kirkpatrick Macmillan\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:ASSOCIATED_WITH]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Gavin Dalzell\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Thomas McCall\"\nMATCH (v:Vehicle) WHERE v.name = \"TreadleBicycle\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Philipp Moritz Fischer\"\nMATCH (v:Vehicle) WHERE v.name = \"PedalCrank\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Ernest Michaux\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Pierre Lallement\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Georges de la Bouglise\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:PARTNERED_WITH]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Aim\u00e9 Olivier\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Ren\u00e9 Olivier\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Gabert\"\nMATCH (v:Vehicle) WHERE v.name = \"Velocipede\"\nCREATE (p)-[:CREATED_FRAME_WITH]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Eug\u00e8ne Meyer\"\nMATCH (v:Vehicle) WHERE v.name = \"HighWheelBicycle\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"James Starley\"\nMATCH (v:Vehicle) WHERE v.name = \"HighWheelBicycle\"\nCREATE (p)-[:INVENTED_FEATURES_FOR]->(v)\n\nMATCH (p:Person) WHERE p.name = \"John Kemp Starley\"\nMATCH (v:Vehicle) WHERE v.name = \"Rover\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Albert Augustus Pope\"\nMATCH (v:Vehicle) WHERE v.name = \"Columbia\"\nCREATE (p)-[:PRODUCED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"G.W. Pressey\"\nMATCH (v:Vehicle) WHERE v.name = \"AmericanStarBicycle\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Isaac R. Johnson\"\nMATCH (v:Vehicle) WHERE v.name = \"FoldingBicycle\"\nCREATE (p)-[:INVENTED]->(v)\n\nMATCH (p:Person) WHERE p.name = \"Hosea W. Libbey\"\nMATCH (v:Vehicle) WHERE v.name = \"ElectricBicycle\"\nCREATE (p)-[:INVENTED]->(v)\n```\n\nPlease note that the provided text is quite extensive, and for the sake of brevity, I've only included the Cypher queries for creating nodes for unique persons and vehicles mentioned, as well as the relationships between them. You can expand upon these queries to include additional details, relationships, and properties as needed.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 40,
      "Incorrectly Created Nodes": 1,
      "Correctly Created Relationships": 26,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 26,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 296.80023288726807
  },
  {
    "url": "https://en.wikipedia.org/wiki/Battle_of_the_Boyne",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Person nodes\nCREATE (JamesII:Person {name: \"James II\", title: \"King James II\"})\nCREATE (WilliamIII:Person {name: \"William III\", title: \"King William III\"})\nCREATE (MaryII:Person {name: \"Mary II\", title: \"Queen Mary II\"})\nCREATE (LouisXIV:Person {name: \"Louis XIV\", title: \"King Louis XIV\"})\nCREATE (DukeOfSchomberg:Person {name: \"Duke of Schomberg\"})\nCREATE (Meinhardt:Person {name: \"Meinhardt\", title: \"Duke of Schomberg's son\"})\nCREATE (RichardTalbot:Person {name: \"Richard Talbot\", title: \"1st Earl of Tyrconnell\"})\nCREATE (JamesFitzEdmondCotter:Person {name: \"James Fitz Edmond Cotter\", title: \"Brigadier General\"})\nCREATE (Lauzun:Person {name: \"Lauzun\", title: \"French General\"})\nCREATE (Solms:Person {name: \"Solms\", title: \"Dutch Blue Guards Commander\"})\nCREATE (JamesFitzJames:Person {name: \"James FitzJames\", title: \"1st Duke of Berwick\"})\nCREATE (Wurttemberg:Person {name: \"Wurttemberg\", title: \"Danish Infantry Commander\"})\nCREATE (GodertDeGinkel:Person {name: \"Godert de Ginkel\"})\nCREATE (GeorgeWalker:Person {name: \"George Walker\"})\nCREATE (ConstantijnHuygensJr:Person {name: \"Constantijn Huygens Jr.\", title: \"Dutch Secretary\"})\nCREATE (PatrickSarsfield:Person {name: \"Patrick Sarsfield\"})\nCREATE (IanPaisley:Person {name: \"Ian Paisley\", title: \"First Minister of Northern Ireland\"})\nCREATE (BertieAhern:Person {name: \"Bertie Ahern\", title: \"Taoiseach\"})\n\n# Create Battle node\nCREATE (BattleOfTheBoyne:Battle {name: \"Battle of the Boyne\", date: \"1 July 1690\", location: \"River Boyne, Ireland\"})\n\n# Create Country nodes\nCREATE (England:Country {name: \"England\"})\nCREATE (Scotland:Country {name: \"Scotland\"})\nCREATE (Ireland:Country {name: \"Ireland\"})\nCREATE (France:Country {name: \"France\"})\nCREATE (Netherlands:Country {name: \"Netherlands\"})\nCREATE (Denmark:Country {name: \"Denmark\"})\n\n# Create Organization nodes\nCREATE (Jacobites:Organization {name: \"Jacobites\"})\nCREATE (Williamites:Organization {name: \"Williamites\"})\nCREATE (LeagueOfAugsburg:Organization {name: \"League of Augsburg\"})\nCREATE (GrandAlliance:Organization {name: \"Grand Alliance\"})\nCREATE (HouseOfBourbon:Organization {name: \"House of Bourbon\"})\nCREATE (HouseOfHabsburg:Organization {name: \"House of Habsburg\"})\nCREATE (PapalStates:Organization {name: \"Papal States\"})\nCREATE (CatholicChurch:Organization {name: \"Catholic Church\"})\nCREATE (OrangeOrder:Organization {name: \"Orange Order\"})\n\n# Create Relationship between Persons and Battle\nMATCH (b:Battle)\nMATCH (p:Person)\nWHERE b.name = \"Battle of the Boyne\" AND (p.name = \"James II\" OR p.name = \"William III\")\nCREATE (b)-[:PARTICIPATED_IN]->(p)\n\n# Create Relationship between Persons and Countries\nMATCH (p:Person)\nMATCH (c:Country)\nWHERE p.name = \"James II\" AND c.name = \"England\"\nCREATE (p)-[:RULES]->(c)\nWITH p, c\nWHERE p.name = \"James II\" AND c.name = \"Scotland\"\nCREATE (p)-[:RULES]->(c)\nWITH p, c\nWHERE p.name = \"William III\" AND c.name = \"England\"\nCREATE (p)-[:RULES]->(c)\nWITH p, c\nWHERE p.name = \"William III\" AND c.name = \"Scotland\"\nCREATE (p)-[:RULES]->(c)\nWITH p, c\nWHERE p.name = \"Louis XIV\" AND c.name = \"France\"\nCREATE (p)-[:RULES]->(c)\nWITH p, c\nWHERE p.name = \"William III\" AND c.name = \"Netherlands\"\nCREATE (p)-[:RULES]->(c)\n\n# Create Relationship between Persons and Organizations\nMATCH (p:Person)\nMATCH (o:Organization)\nWHERE p.name = \"James II\" AND o.name = \"Jacobites\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name = \"William III\" AND o.name = \"Williamites\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name CONTAINS \"James\" AND o.name = \"Jacobites\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name CONTAINS \"William\" AND o.name = \"Williamites\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name = \"Louis XIV\" AND o.name = \"House of Bourbon\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name = \"William III\" AND o.name = \"LeagueOfAugsburg\"\nCREATE (p)-[:FOUNDED]->(o)\nWITH p, o\nWHERE p.name = \"William III\" AND o.name = \"GrandAlliance\"\nCREATE (p)-[:FOUNDED]->(o)\nWITH p, o\nWHERE p.name = \"Constantijn Huygens Jr.\" AND o.name = \"CatholicChurch\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name = \"Patrick Sarsfield\" AND o.name = \"CatholicChurch\"\nCREATE (p)-[:BELONGS_TO]->(o)\nWITH p, o\nWHERE p.name = \"Ian Paisley\" AND o.name = \"OrangeOrder\"\nCREATE (p)-[:BELONGS_TO]->(o)\n\n# Create Relationship between Organizations\nMATCH (o1:Organization)\nMATCH (o2:Organization)\nWHERE o1.name = \"Jacobites\" AND o2.name = \"Williamites\"\nCREATE (o1)-[:OPPOSES]->(o2)\nWITH o1, o2\nWHERE o1.name = \"LeagueOfAugsburg\" AND o2.name = \"GrandAlliance\"\nCREATE (o1)-[:OPPOSES]->(o2)\nWITH o1, o2\nWHERE o1.name = \"HouseOfBourbon\" AND o2.name = \"HouseOfHabsburg\"\nCREATE (o1)-[:OPPOSES]->(o2)\nWITH o1, o2\nWHERE o1.name = \"HouseOfBourbon\" AND o2.name = \"PapalStates\"\nCREATE (o1)-[:OPPOSES]->(o2)\nWITH o1, o2\nWHERE o1.name = \"HouseOfHabsburg\" AND o2.name = \"PapalStates\"\nCREATE (o1)-[:ALLIES_WITH]->(o2)\nWITH o1, o2\nWHERE o1.name = \"GrandAlliance\" AND o2.name = \"PapalStates\"\nCREATE (o1)-[:ALLIES_WITH]->(o2)\n\n# Create Relationship between Battle and Organizations\nMATCH (b:Battle)\nMATCH (o:Organization)\nWHERE b.name = \"Battle of the Boyne\" AND o.name = \"Jacobites\"\nCREATE (b)-[:INVOLVED]->(o)\nWITH b, o\nWHERE b.name = \"Battle of the Boyne\" AND o.name = \"Williamites\"\nCREATE (b)-[:INVOLVED]->(o)\n\n# Create Relationship between Battle and Countries\nMATCH (b:Battle)\nMATCH (c:Country)\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"Ireland\"\nCREATE (b)-[:OCCURRED_IN]->(c)\nWITH b, c\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"England\"\nCREATE (b)-[:INFLUENCED]->(c)\nWITH b, c\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"Scotland\"\nCREATE (b)-[:INFLUENCED]->(c)\nWITH b, c\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"France\"\nCREATE (b)-[:INFLUENCED]->(c)\nWITH b, c\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"Netherlands\"\nCREATE (b)-[:INFLUENCED]->(c)\nWITH b, c\nWHERE b.name = \"Battle of the Boyne\" AND c.name = \"Denmark\"\nCREATE (b)-[:INFLUENCED]->(c)\n```\n\nPlease note that this is a simplified representation of the knowledge graph, and in a real-world scenario, you might want to add more relationships, properties, and nodes to capture all the relevant information from the text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 24,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 38,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 38,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 141.89656496047974
  },
  {
    "url": "https://en.wikipedia.org/wiki/Moonlight",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n```\nCREATE (Moonlight:Entity {name: 'Moonlight'})\nCREATE (Sunlight:Entity {name: 'Sunlight'})\nCREATE (Earthlight:Entity {name: 'Earthlight'})\nCREATE (Moon:Entity {name: 'Moon'})\nCREATE (Sun:Entity {name: 'Sun'})\nCREATE (Anaxagoras:Entity {name: 'Anaxagoras', type: 'Ancient Greek Philosopher'})\nCREATE (LunarPhase:Entity {name: 'Lunar Phase'})\nCREATE (FullMoon:Entity {name: 'Full Moon'})\nCREATE (HumanEye:Entity {name: 'Human Eye'})\nCREATE (PurkinjeEffect:Entity {name: 'Purkinje Effect'})\nCREATE (LunarSurface:Entity {name: 'Lunar Surface'})\nCREATE (Earth:Entity {name: 'Earth'})\nCREATE (Folklore:Entity {name: 'Folklore'})\nCREATE (Werewolf:Entity {name: 'Werewolf'})\nCREATE (Lunatics:Entity {name: 'Lunatics'})\nCREATE (Nyctalopia:Entity {name: 'Nyctalopia'})\nCREATE (MoonBlindness:Entity {name: 'Moon Blindness'})\nCREATE (EquineRecurrentUveitis:Entity {name: 'Equine Recurrent Uveitis'})\nCREATE (Moonmilk:Entity {name: 'Moonmilk'})\nCREATE (KatiePaterson:Entity {name: 'Katie Paterson'})\nCREATE (LightBulb:Entity {name: 'Light Bulb', type: 'Artwork'})\n\nCREATE (Moonlight)-[:CONSISTS_OF]->(Sunlight)\nCREATE (Moonlight)-[:CONSISTS_OF]->(Earthlight)\nCREATE (Moonlight)-[:REFLECTED_FROM]->(Moon)\nCREATE (Sunlight)-[:ORIGINATES_FROM]->(Sun)\nCREATE (Anaxagoras)-[:KNOWLEDGE_ATTRIBUTION]->(Moonlight)\nCREATE (Anaxagoras)-[:KNOWLEDGE_ATTRIBUTION]->(Sun)\nCREATE (LunarPhase)-[:INFLUENCES]->(Moonlight)\nCREATE (FullMoon)-[:TYPE_OF]->(LunarPhase)\nCREATE (FullMoon)-[:ILLUMINATION_PERCEPTION]->(HumanEye)\nCREATE (FullMoon)-[:COLOR_PERCEPTION]->(HumanEye)\nCREATE (HumanEye)-[:EXPERIENCES_ILLUSION]->(PurkinjeEffect)\nCREATE (Moonlight)-[:REFLECTED_FROM]->(LunarSurface)\nCREATE (Moonlight)-[:REACHES]->(Earth)\nCREATE (Folklore)-[:ASSOCIATED_WITH]->(Moonlight)\nCREATE (Werewolf)-[:MENTIONED_IN]->(Folklore)\nCREATE (Lunatics)-[:ASSOCIATED_WITH]->(Moonlight)\nCREATE (Nyctalopia)-[:ASSOCIATED_WITH]->(Moonlight)\nCREATE (MoonBlindness)-[:RELATED_TO]->(Nyctalopia)\nCREATE (EquineRecurrentUveitis)-[:NAMED_AS]->(MoonBlindness)\nCREATE (Moonmilk)-[:ASSOCIATED_WITH]->(Moonlight)\nCREATE (KatiePaterson)-[:CREATED]->(LightBulb)\nCREATE (LightBulb)-[:SIMULATES]->(Moonlight)\n```\n\nThese queries create the entities mentioned in the text, such as \"Moonlight,\" \"Sunlight,\" \"Moon,\" and \"Anaxagoras,\" and establish relationships between them, such as \"CONSISTS_OF,\" \"REFLECTED_FROM,\" and \"KNOWLEDGE_ATTRIBUTION.\" The relationships capture the semantic connections between the entities, forming a knowledge graph that represents the information in the text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 20,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 21,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 21,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 159.2312572002411
  },
  {
    "url": "https://en.wikipedia.org/wiki/Japanese_tea_ceremony",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for main entities\nCREATE (japaneseTeaCeremony:Entity {name: \"Japanese Tea Ceremony\", aliases: [\"sad\u014d/chad\u014d\", \"chanoyu\"]})\nCREATE (matcha:Entity {name: \"Matcha\", description: \"Powdered Green Tea\"})\nCREATE (temae:Entity {name: \"Temae\", description: \"Procedure of Preparing and Presenting Matcha\"})\nCREATE (okakuraKakuzo:Entity {name: \"Okakura Kakuz\u014d\", description: \"Coiner of the Term 'Teaism'\"})\nCREATE (senNoRikyu:Entity {name: \"Sen no Riky\u016b\", description: \"Revolutionary of Japanese Tea Culture\"})\nCREATE (omotesenke:Entity {name: \"Omotesenke\", description: \"School of Tea Ceremony Founded by Sen no Riky\u016b's Descendants\"})\nCREATE (urasenke:Entity {name: \"Urasenke\", description: \"School of Tea Ceremony Founded by Sen no Riky\u016b's Descendants\"})\nCREATE (mushakoujisenke:Entity {name: \"Mushak\u014djisenke\", description: \"School of Tea Ceremony Founded by Sen no Riky\u016b's Descendants\"})\nCREATE (zenBuddhism:Entity {name: \"Zen Buddhism\", description: \"Primary Influence on Japanese Tea Culture\"})\nCREATE (shinto:Entity {name: \"Shinto\", description: \"Religious Influence on Japanese Tea Ceremony\"})\nCREATE (misogi:Entity {name: \"Misogi\", description: \"Shinto Purification Ritual Influencing Tea Ceremony\"})\nCREATE (chashitsu:Entity {name: \"Chashitsu\", description: \"Tea House or Room Designed for Tea Ceremony\"})\nCREATE (roji:Entity {name: \"Roji\", description: \"Tea Garden Surrounding a Tea House\"})\nCREATE (informalTeaGathering:Entity {name: \"Chakai\", description: \"Informal Tea Gathering\"})\nCREATE (formalTeaGathering:Entity {nameOffsets: \"Chaji\", description: \"Formal Tea Gathering\"})\nCREATE (wagashi:Entity {name: \"Wagashi\", description: \"Japanese Confections Served During Tea Gatherings\"})\nCREATE (thinTea:Entity {name: \"Usucha\", description: \"Thin Tea Served During Tea Gatherings\"})\nCREATE (thickTea:Entity {name: \"Koicha\", description: \"Thick Tea Served During Tea Gatherings\"})\nCREATE (teaCeremonyEquipment:Entity {name: \"Chad\u014dgu\", description: \"Equipment Used in Tea Ceremony\"})\nCREATE (teaStorageJar:Entity {name: \"Chigusa\", description: \"Revered Tea Storage Jar\"})\nCREATE (muralJukou:Entity {name: \"Murata Juk\u014d\", description: \"Developer of Tea as a Spiritual Practice\"})\nCREATE (takenoJoo:Entity {name: \"Takeno J\u014d\u014d\", description: \"Master of Sen no Riky\u016b\"})\nCREATE (ichiGoIchiE:Entity {name: \"Ichi-go Ichi-e\", description: \"Philosophy of Treasuring Each Meeting\"})\nCREATE (southernRecord:Entity {name: \"Southern Record\", description: \"Work by Sen no Riky\u016b\"})\nCREATE (toyotomiHideyoshi:Entity {name: \"Toyotomi Hideyoshi\", description: \"Regent Who Supported Sen no Riky\u016b\"})\nCREATE (goldenTeaRoom:Entity {name: \"Golden Tea Room\", description: \"Constructed by Toyotomi Hideyoshi\"})\nCREATE (grandKitanoTeaCeremony:Entity {name: \"Grand Kitano Tea Ceremony\", description: \"Hosted by Toyotomi Hideyoshi\"})\nCREATE (nodate:Entity {name: \"Nodate\", description: \"Outdoor Tea Gathering\"})\nCREATE (mizuya:Entity {name: \"Mizuya\", description: \"Preparation Area Attached to a Chashitsu\"})\nCREATE (tatami:Entity {name: \"Tatami\", description: \"Traditional Japanese Floor Matting\"})\nCREATE (kaiseki:Entity {name: \"Kaiseki\", description: \"Full-Course Meal Served During Formal Tea Gatherings\"})\nCREATE (kaishi:Entity {name: \"Kaishi\", description: \"Special Paper Used in Tea Ceremony\"})\nCREATE (nakadachi:Entity {name: \"Nakadachi\", description: \"Break Between Meal and Tea During Formal Gatherings\"})\n\n# Create relationships between entities\nMATCH (japaneseTeaCeremony), (matcha)\nCREATE (japaneseTeaCeremony)-[:INVOLVES]->(matcha)\n\nMATCH (japaneseTeaCeremony), (temae)\nCREATE (japaneseTeaCeremony)-[:INVOLVES]->(temae)\n\nMATCH (okakuraKakuzo), (teaism)\nCREATE (okakuraKakuzo)-[:COINED]->(teaism)\n\nMATCH (senNoRikyu), (japaneseTeaCeremony)\nCREATE (senNoRikyu)-[:REVOLUTIONIZED]->(japaneseTeaCeremony)\n\nMATCH (omotesenke), (senNoRikyu)\nCREATE (omotesenke)-[:FOUNDED_BY]->(senNoRikyu)\n\nMATCH (urasenke), (senNoRikyu)\nCREATE (urasenke)-[:FOUNDED_BY]->(senNoRikyu)\n\nMATCH (mushakoujisenke), (senNoRikyu)\nCREATE (mushakoujisenke)-[:FOUNDED_BY]->(senNoRikyu)\n\nMATCH (zenBuddhism), (japaneseTeaCeremony)\nCREATE (zenBuddhism)-[:INFLUENCED]->(japaneseTeaCeremony)\n\nMATCH (shinto), (japaneseTeaCeremony)\nCREATE (shinto)-[:INFLUENCED]->(japaneseTeaCeremony)\n\nMATCH (shinto), (misogi)\nCREATE (shinto)-[:INVOLVES]->(misogi)\n\nMATCH (misogi), (japaneseTeaCeremony)\nCREATE (misogi)-[:INFLUENCED]->(japaneseTeaCeremony)\n\nMATCH (chashitsu), (japaneseTeaCeremony)\nCREATE (chashitsu)-[:USED_IN]->(japaneseTeaCeremony)\n\nMATCH (roji), (chashitsu)\nCREATE (roji)-[:SURROUNDS]->(chashitsu)\n\nMATCH (informalTeaGathering), (japaneseTeaCeremony)\nCREATE (informalTeaGathering)-[:RELATED_TO]->(japaneseTeaCeremony)\n\nMATCH (formalTeaGathering), (japaneseTeaCeremony)\nCREATE (formalTeaGathering)-[:RELATED_TO]->(japaneseTeaCeremony)\n\nMATCH (wagashi), (informalTeaGathering)\nCREATE (wagashi)-[:SERVED_AT]->(informalTeaGathering)\n\nMATCH (wagashi), (formalTeaGathering)\nCREATE (wagashi)-[:SERVED_AT]->(formalTeaGathering)\n\nMATCH (thinTea), (informalTeaGathering)\nCREATE (thinTea)-[:SERVED_AT]->(informalTeaGathering)\n\nMATCH (thinTea), (formalTeaGathering)\nCREATE (thinTea)-[:SERVED_AT]->(formalTeaGathering)\n\nMATCH (thickTea), (formalTeaGathering)\nCREATE (thickTea)-[:SERVED_AT]->(formalTeaGathering)\n\nMATCH (teaCeremonyEquipment), (japaneseTeaCeremony)\nCREATE (teaCeremonyEquipment)-[:USED_IN]->(japaneseTeaCeremony)\n\nMATCH (teaStorageJar), (teaCeremonyEquipment)\nCREATE (teaStorageJar)-[:INCLUDED_IN]->(teaCeremonyEquipment)\n\nMATCH (muralJukou), (teaCeremonyEquipment)\nCREATE (muralJukou)-[:DEVELOPED]->(teaCeremonyEquipment)\n\nMATCH (takenoJoo), (muralJukou)\nCREATE (takenoJoo)-[:MASTER_OF]->(muralJukou)\n\nMATCH (ichiGoIchiE), (takenoJoo)\nCREATE (ichiGoIchiE)-[:CONCEPT_OF]->(takenoJoo)\n\nMATCH (southernRecord), (senNoRikyu)\nCREATE (southernRecord)-[:WRITTEN_BY]->(senNoRikyu)\n\nMATCH (toyotomiHideyoshi), (senNoRikyu)\nCREATE (toyotomiHideyoshi)-[:SUPPORTED]->(senNoRikyu)\n\nMATCH (goldenTeaRoom), (toyotomiHideyoshi)\nCREATE (goldenTeaRoom)-[:CONSTRUCTED_BY]->(toyotomiHideyoshi)\n\nMATCH (grandKitanoTeaCeremony), (toyotomiHideyoshi)\nCREATE (grandKitanoTeaCeremony)-[:HOSTED_BY]->(toyotomiHideyoshi)\n\nMATCH (nodate), (informalTeaGathering)\nCREATE (nodate)-[:RELATED_TO]->(informalTeaGathering)\n\nMATCH (mizuya), (chashitsu)\nCREATE (mizuya)-[:ATTACHED_TO]->(chashitsu)\n\nMATCH (tatami), (chashitsu)\nCREATE (tatami)-[:FLOORING_OF]->(chashitsu)\n\nMATCH (kaiseki), (formalTeaGathering)\nCREATE (kaiseki)-[:SERVED_AT]->(formalTeaGathering)\n\nMATCH (kaishi), (kaiseki)\nCREATE (kaishi)-[:USED_WITH]->(kaiseki)\n\nMATCH (nakadachi), (formalTeaGathering)\nCREATE (nakadachi)-[:RELATED_TO]->(formalTeaGathering)\n```",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 33,
      "Incorrectly Created Nodes": 1,
      "Correctly Created Relationships": 30,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 30,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 114.65022897720337
  },
  {
    "url": "https://en.wikipedia.org/wiki/Supernova",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create Supernovae, Galaxies, and Star entities\nCREATE (s:Supernova {name: 'Supernova'})\nCREATE (mw:Galaxy {name: 'Milky Way'})\nCREATE (smc:Galaxy {name: 'Small Magellanic Cloud'})\nCREATE (and:Galaxy {name: 'Andromeda Galaxy'})\nCREATE (ngc5253:Galaxy {name: 'NGC 5253'})\nCREATE (ngc7610:Galaxy {name: 'NGC 7610'})\nCREATE (lmc:Galaxy:Constellation {name: 'Large Magellanic Cloud', constellation: 'Dorado'})\nCREATE (cas:Constellation {name: 'Cassiopeia'})\nCREATE (lup:Constellation {name: 'Lupus'})\nCREATE (peg:Constellation {name: 'Pegasus'})\n\n# Create relationships between Supernovae and Galaxies\nCREATE (s)-[:OCCURS_IN]->(mw)\nCREATE (s)-[:OCCURS_IN]->(smc)\nCREATE (s)-[:OCCURS_IN]->(and)\nCREATE (s)-[:OCCURS_IN]->(ngc5253)\nCREATE (s)-[:OCCURS_IN]->(ngc7610)\nCREATE (s)-[:OCCURS_IN]->(lmc)\n\n# Create Star entities and relationships\nCREATE (ks:Star {name: 'Kepler's Supernova'})\nCREATE (ty:Star {name: 'Tycho's Supernova'})\nCREATE (bs:Star {name: 'Blue Supergiant Star'})\nCREATE (hb9:Star {name: 'HB9'})\nCREATE (sn185:Star {name: 'SN 185'})\nCREATE (sn1006:Star {name: 'SN 1006'})\nCREATE (sn1054:Star {name: 'SN 1054'})\nCREATE (sn1572:Star {name: 'SN 1572'})\nCREATE (sn1604:Star {name: 'SN 1604'})\nCREATE (g1_9:Star {name: 'G1.9+0.3'})\nCREATE (casA:Star {name: 'Cassiopeia A'})\nCREATE (sn1885:Star {name: 'SN 1885A'})\nCREATE (sn1895:Star {name: 'SN 1895B'})\nCREATE (sn2013:Star {name: 'SN 2013fs'})\nCREATE (sn2016:Star {name: 'SN 2016gkg'})\nCREATE (sn2002:Star {name: 'SN 2002cx'})\nCREATE (sn2008:Star {name: 'SN 2008ha'})\nCREATE (sn1987:Star {name: 'SN 1987K'})\nCREATE (sn1993:Star {name: 'SN 1993J'})\nCREATE (sn2003:Star)\nCREATE (sn2005:Star {name: 'SN 2005gl'})\nCREATE (sn2005nc:Star)\nCREATE (sn1947:Star {name: 'SN 1947A'})\nCREATE (sn1961i:Star)\nCREATE (sn1961f:Star)\nCREATE (sn1961v:Star)\nCREATE (sn1987a:Star {name: 'SN 1987A'})\nCREATE (sn1885)-[:OCCURS_IN]->(and)\nCREATE (sn1895)-[:OCCURS_IN]->(ngc5253)\nCREATE (sn2013)-[:OCCURS_IN]->(ngc7610)\nCREATE (sn1987a)-[:OCCURS_IN]->(lmc)\nCREATE (ks)-[:OCCURS_IN]->(mw)\nCREATE (ty)-[:OCCURS_IN]->(mw)\nCREATE (bs)-[:OCCURS_IN]->(lmc)\nCREATE (hb9)-[:OCCURS_IN]->(cas)\nCREATE (sn185)-[:OCCURS_IN]->(mw)\nCREATE (sn1006)-[:OCCURS_IN]->(lup)\nCREATE (sn1054)\nCREATE (sn1572)-[:OCCURS_IN]->(mw)\nCREATE (sn1604)-[:OCCURS_IN]->(mw)\nCREATE (g1_9)-[:OCCURS_IN]->(mw)\nCREATE (casA)-[:OCCURS_IN]->(mw)\n\n# Create relationships between Stars and Constellations\nCREATE (sn1054)-[:IN_CONSTELLATION]->(cas)\nCREATE (sn1572)-[:IN_CONSTELLATION]->(cas)\nCREATE (sn1987a)-[:IN_CONSTELLATION]->(lmc)\nCREATE (sn1006)-[:IN_CONSTELLATION]->(lup)\nCREATE (sn2013)-[:IN_CONSTELLATION]->(peg)\n\n# Create relationships between Supernovae and Stars\nCREATE (s)-[:CAUSES]->(ks)\nCREATE (s)-[:CAUSES]->(ty)\nCREATE (s)-[:CAUSES]->(bs)\nCREATE (s)-[:CAUSES]->(hb9)\nCREATE (s)-[:CAUSES]->(sn185)\nCREATE (s)-[:CAUSES]->(sn1006)\nCREATE (s)-[:CAUSES]->(sn1054)\nCREATE (s)-[:CAUSES]->(sn1572)\nCREATE (s)-[:CAUSES]->(sn1604)\nCREATE (s)-[:CAUSES]->(g1_9)\nCREATE (s)-[:CAUSES]->(casA)\nCREATE (s)-[:CAUSES]->(sn1885)\nCREATE (s)-[:CAUSES]->(sn1895)\nCREATE (s)-[:CAUSES]->(sn2013)\nCREATE (s)-[:CAUSES]->(sn2016)\nCREATE (s)-[:CAUSES]->(sn2002)\nCREATE (s)-[:CAUSES]->(sn2008)\nCREATE (s)-[:CAUSES]->(sn1987)\nCREATE (s)-[:CAUSES]->(sn1993)\nCREATE (s)-[:CAUSES]->(sn2003)\nCREATE (s)-[:CAUSES]->(sn2005)\nCREATE (s)-[:CAUSES]->(sn2005nc)\nCREATE (s)-[:CAUSES]->(sn1947)\nCREATE (s)-[:CAUSES]->(sn1961i)\nCREATE (s)-[:CAUSES]->(sn1961f)\nCREATE (s)-[:CAUSES]->(sn1961v)\n\n# Create relationships for similar supernovae\nCREATE (sn2008)-[:SIMILAR_TO]->(sn2002)\nCREATE (sn1987)-[:SIMILAR_TO]->(sn1993)\nCREATE (sn2005)-[:SIMILAR_TO]->(sn2005nc)\n\n# Create relationships for types of supernovae\nCREATE (sn1961i)-[:TYPE]->(TypeIII)\nCREATE (sn1961f)-[:TYPE]->(TypeIV)\nCREATE (sn1961v)-[:TYPE]->(TypeV)\nCREATE (sn1987a)-[:TYPE]->(TypeII)\nCREATE (sn1987)-[:TYPE]->(TypeIIb)\nCREATE (sn1993)-[:TYPE]->(TypeIIb)\nCREATE (sn2005)-[:TYPE]->(TypeIIn)\nCREATE (sn1054)-[:TYPE]->(TypeII)\nCREATE (sn1572)-[:TYPE]->(TypeII)\nCREATE (sn1604)-[:TYPE]->(TypeII)\nCREATE (sn1006)-[:TYPE]->(TypeIa)\nCREATE (sn2002)-[:TYPE]->(TypeIa)\nCREATE (sn2008)-[:TYPE]->(TypeIa)\nCREATE (sn2003)-[:TYPE]->(TypeIa)\nCREATE (sn2005nc)-[:TYPE]->(TypeIa)\nCREATE (sn1947)-[:TYPE]->(TypeIa)\n```",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 32,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 70,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 70,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 101.28247904777527
  },
  {
    "url": "https://en.wikipedia.org/wiki/Paradox_of_thrift",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n// Create entities\nCREATE (paradoxOfThrift:Entity {name: \"Paradox of Thrift\"})\nCREATE (economics:Entity {name: \"Economics\"})\nCREATE (keynesianEconomics:Entity {name: \"Keynesian Economics\"})\nCREATE (fallacyOfComposition:Entity {name: \"Fallacy of Composition\"})\nCREATE (prisonersDilemma:Entity {name: \"Prisoner's Dilemma\"})\nCREATE (income:Entity {name: \"Income\"})\nCREATE (output:Entity {name: \"Output\"})\nCREATE (saving:Entity {name: \"Saving\"})\nCREATE (demand:Entity {name: \"Demand\"})\nCREATE (grossOutput:Entity {name: \"Gross Output\"})\nCREATE (individualSaving:Entity {name: \"Individual Saving\"})\nCREATE (collectiveSaving:Entity {name: \"Collective Saving\"})\nCREATE (economy:Entity {name: \"Economy\"})\nCREATE (fableOfTheBees:Entity {name: \"The Fable of the Bees\"})\nCREATE (johnMaynardKeynes:Entity {name: \"John Maynard Keynes\"})\nCREATE (equilibrium:Entity {name: \"Equilibrium\"})\nCREATE (autonomousSaving:Entity {name: \"Autonomous Saving\"})\nCREATE (individual:Entity {name: \"Individual\"})\nCREATE (population:Entity {name: \"Population\"})\nCREATE (companies:Entity {name: \"Companies\"})\nCREATE (contraction:Entity {name: \"Contraction\"})\nCREATE (employers:Entity {name: \"Employers\"})\nCREATE (employees:Entity {name: \"Employees\"})\nCREATE (keynes:Entity {name: \"Keynes\"})\nCREATE (spending:Entity {name: \"Spending\"})\nCREATE (underconsumption:Entity {name: \"Underconsumption\"})\nCREATE (oversaving:Entity {name: \"Oversaving\"})\nCREATE (ancientTimes:Entity {name: \"Ancient Times\"})\nCREATE (bibleVerse:Entity {name: \"Bible Verse\"})\nCREATE (underconsumptionistWritings:Entity {name: \"Underconsumptionist Writings\"})\nCREATE (bernardMandeville:Entity {name: \"Bernard Mandeville\"})\nCREATE (adamSmith:Entity {name: \"Adam Smith\"})\nCREATE (underconsumptionistEconomists:Entity {name: \"Underconsumptionist Economists\"})\nCREATE (johnRobertson:Entity {name: \"John M. Robertson\"})\nCREATE (williamTrufantFoster:Entity {name: \"William Trufant Foster\"})\nCREATE (waddillCatchings:Entity {name: \"Waddill Catchings\"})\nCREATE (businessActivity:Entity {name: \"Business Activity\"})\nCREATE (investment:Entity {name: \"Investment\"})\nCREATE (enterprise:Entity {name: \"Enterprise\"})\nCREATE (treatiseOnMoney:Entity {name: \"Treatise on Money\"})\nCREATE (wealth:Entity {name: \"Wealth\"})\nCREATE (abstinence:Entity {name: \"Abstinence\"})\nCREATE (cities:Entity {name: \"Cities\"}})\nCREATE (fens:Entity {name: \"Fens\"})\nCREATE (generalTheory:Entity {name: \"General Theory\"})\nCREATE (consumption:Entity {name: \"Consumption\"})\nCREATE (incomeLevel:Entity {name: \"Income Level\"})\nCREATE (samuelson:Entity {name: \"Samuelson\"})\nCREATE (circuitParadox:Entity {name: \"Circuit Paradox\"})\nCREATE (balancesMechanics:Entity {name: \"Balances Mechanics\"})\nCREATE (wolfgangStutzel:Entity {name: \"Wolfgang St\u00fctzel\"})\nCREATE (revenueSurplus:Entity {name: \"Revenue Surplus\"})\nCREATE (debtDeflationTheory:Entity {name: \"Debt Deflation Theory\"})\nCREATE (paradoxOfDebt:Entity {name: \"Paradox of Debt\"})\nCREATE (savings:Entity {name: \"Savings\"})\nCREATE (debt:Entity {name: \"Debt\"})\nCREATE (paradoxOfToil:Entity {name: \"Paradox of Toil\"})\nCREATE (paradoxOfFlexibility:Entity {name: \"Paradox of Flexibility\"})\nCREATE (liquidityTrap:Entity {name: \"Liquidity Trap\"})\nCREATE (wageFlexibility:Entity {name: \"Wage Flexibility\"})\nCREATE (employment:Entity {name: \"Employment\"})\nCREATE (janetYellen:Entity {name: \"Janet Yellen\"})\nCREATE (creditCrunch:Entity {name: \"Credit Crunch\"})\nCREATE (recession:Entity {name: \"Recession\"})\nCREATE (creditLosses:Entity {name: \"Credit Losses\"})\nCREATE (financialInstitutions:Entity {name: \"Financial Institutions\"})\nCREATE (hymanMinsky:Entity {name: \"Hyman Minsky\"})\nCREATE (paradoxOfDeleveraging:Entity {name: \"Paradox of Deleveraging\"})\nCREATE (balanceSheet:Entity {name: \"Balance Sheet\"})\nCREATE (durableGoods:Entity {name: \"Durable Goods\"})\nCREATE (businesses:Entity {name: \"Businesses\"})\nCREATE (assets:Entity {name: \"Assets\"})\nCREATE (capital:Entity {name: \"Capital\"})\nCREATE (sectoralBalances:Entity {name: \"Sectoral Balances\"})\nCREATE (publicSector:Entity {name: \"Public Sector\"})\nCREATE (foreignSector:Entity {name: \"Foreign Sector\"})\nCREATE (exports:Entity {name: \"Exports\"})\nCREATE (imports:Entity {name: \"Imports\"})\nCREATE (mainstreamEconomics:Entity {name: \"Mainstream Economics\"})\nCREATE (nonKeynesianEconomists:Entity {name: \"Non-Keynesian Economists\"})\nCREATE (neoclassicalEconomists:Entity {name: \"Neoclassical Economists\"})\nCREATE (saysLaw:Entity {name: \"Say's Law\"})\nCREATE (stickyPrices:Entity {name: \"Sticky Prices\"})\nCREATE (recessionaryPeriod:Entity {name: \"Recessionary Period\"})\nCREATE (loanableFunds:Entity {name: \"Loanable Funds\"})\nCREATE (banks:Entity {name: \"Banks\"})\nCREATE (lending:Entity {name: \"Lending\"})\nCREATE (interestRates:Entity {nameMultiplier: \"Interest Rates\"})\nCREATE (cashHoldings:Entity {name: \"Cash Holdings\"})\nCREATE (excessReserves:Entity {name: \"Excess Reserves\"})\nCREATE (liquidityPreference:Entity {name: \"Liquidity Preference\"})\nCREATE (closedEconomy:Entity {name: \"Closed Economy\"})\nCREATE (tradingPartners:Entity {name: \"Trading Partners\"})\nCREATE (austrianSchool:Entity {name: \"Austrian School\"})\nCREATE (friedrichHayek:Entity {name: \"Friedrich Hayek\"})\nCREATE (production:Entity {name: \"Production\"})\nCREATE (capitalGoods:Entity {name: \"Capital Goods\"})\nCREATE (consumerGoods:Entity {name: \"Consumer Goods\"})\n\n// Create relationships\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (e:Entity {name: \"Economics\"})\nCREATE (p)-[:IS_A]->(e)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (f:Entity {name: \"Fallacy of Composition\"})\nCREATE (p)-[:CONTRADICTS]->(f)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (pd:Entity {name: \"Prisoner's Dilemma\"})\nCREATE (p)-[:IS_A]->(pd)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (i:Entity {name: \"Income\"})\nMATCH (o:Entity {name: \"Output\"})\nCREATE (p)-[:INVOLVES]->(i)\nCREATE (p)-[:INVOLVES]->(o)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (s:Entity {name: \"Saving\"})\nCREATE (p)-[:INVOLVES]->(s)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (d:Entity {name: \"Demand\"})\nCREATE (p)-[:INFLUENCES]->(d)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (go:Entity {name: \"Gross Output\"})\nCREATE (p)-[:INFLUENCES]->(go)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (is:Entity {name: \"Individual Saving\"})\nCREATE (p)-[:INFLUENCES]->(is)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (cs:Entity {name: \"Collective Saving\"})\nCREATE (p)-[:INFLUENCES]->(cs)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (e:Entity {name: \"Economy\"})\nCREATE (p)-[:INFLUENCES]->(e)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (ftb:Entity {name: \"The Fable of the Bees\"})\nCREATE (p)-[:MENTIONED_IN]->(ftb)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (jmk:Entity {name: \"John Maynard Keynes\"})\nCREATE (p)-[:POPULARIZED_BY]->(jmk)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (k:Entity {name: \"Keynesian Economics\"})\nCREATE (p)-[:IS_COMPONENT_OF]->(k)\n\nMATCH (i:Entity {name: \"Income\"})\nMATCH (o:Entity {name: \"Output\"})\nCREATE (i)-[:EQUALS]->(o)\n\nMATCH (i:Entity {name: \"Income\"})\nMATCH (s:Entity {name: \"Saving\"})\nCREATE (i)-[:INFLUENCES]->(s)\n\nMATCH (as:Entity {name: \"Autonomous Saving\"})\nMATCH (e:Entity {name: \"Equilibrium\"})\nCREATE (as)-[:INFLUENCES]->(e)\n\nMATCH (as:Entity {name: \"Autonomous Saving\"})\nMATCH (i:Entity {name: \"Income\"})\nMATCH (o:Entity {name: \"Output\"})\nCREATE (as)-[:INFLUENCES]->(i)\nCREATE (as)-[:INFLUENCES]->(o)\n\nMATCH (i:Entity {name: \"Income\"})\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nCREATE (i)-[:INFLUENCES]->(p)\n\nMATCH (e:Entity {name: \"Equilibrium\"})\nMATCH (i:Entity {name: \"Income\"})\nMATCH (o:Entity {name: \"Output\"})\nCREATE (e)-[:EQUALS]->(i)\nCREATE (e)-[:EQUALS]->(o)\n\nMATCH (i:Entity {name: \"Individual\"})\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nCREATE (i)-[:INFLUENCES]->(p)\n\nMATCH (p:Entity {name: \"Population\"})\nMATCH (t:Entity {name: \"Total Revenues\"})\nCREATE (p)-[:INFLUENCES]->(t)\n\nMATCH (p:Entity {name: \"Population\"})\nMATCH (c:Entity {name: \"Companies\"})\nCREATE (p)-[:INFLUENCES]->(c)\n\nMATCH (c:Entity {name: \"Companies\"})\nMATCH (t:Entity {name: \"Total Revenues\"})\nCREATE (c)-[:INFLUENCES]->(t)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (c:Entity {name: \"Contraction\"})\nCREATE (p)-[:LEADS_TO]->(c)\n\nMATCH (c:Entity {name: \"Contraction\"})\nMATCH (o:Entity {name: \"Output\"})\nCREATE (c)-[:INFLUENCES]->(o)\n\nMATCH (c:Entity {name: \"Contraction\"})\nMATCH (e:Entity {name: \"Employers\"})\nCREATE (c)-[:INFLUENCES]->(e)\n\nMATCH (c:Entity {name: \"Contraction\"})\nMATCH (ee:Entity {name: \"Employees\"})\nCREATE (c)-[:INFLUENCES]->(ee)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (k:Entity {name: \"Keynes\"})\nCREATE (p)-[:MENTIONED_BY]->(k)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (s:Entity {name: \"Spending\"})\nCREATE (p)-[:INVOLVES]->(s)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (u:Entity {name: \"Underconsumption\"})\nCREATE (p)-[:RELATES_TO]->(u)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (o:Entity {name: \"Oversaving\"})\nCREATE (p)-[:RELATES_TO]->(o)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (at:Entity {name: \"Ancient Times\"})\nCREATE (p)-[:RELATES_TO]->(at)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (bv:Entity {name: \"Bible Verse\"})\nCREATE (p)-[:MENTIONED_IN]->(bv)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (uw:Entity {name: \"Underconsumptionist Writings\"})\nCREATE (p)-[:MENTIONED_IN]->(uw)\n\nMATCH (jmk:Entity {name: \"John Maynard Keynes\"})\nMATCH (bm:Entity {name: \"Bernard Mandeville\"})\nCREATE (jmk)-[:MENTIONED]->(bm)\n\nMATCH (jmk:Entity {name: \"John Maynard Keynes\"})\nMATCH (as:Entity {name: \"Adam Smith\"})\nCREATE (jmk)-[:MENTIONED]->(as)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (ue:Entity {name: \"Underconsumptionist Economists\"})\nCREATE (p)-[:MENTIONED_BY]->(ue)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (jr:Entity {name: \"John Robertson\"})\nCREATE (p)-[:MENTIONED_BY]->(jr)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (wtf:Entity {name: \"William Trufant Foster\"})\nCREATE (p)-[:MENTIONED_BY]->(wtf)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (wc:Entity {name: \"Waddill Catchings\"})\nCREATE (p)-[:MENTIONED_BY]->(wc)\n\nMATCH (ba:Entity {name: \"Business Activity\"})\nMATCH (i:Entity {name: \"Investment\"})\nCREATE (ba)-[:RELATES_TO]->(i)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (e:Entity {name: \"Enterprise\"})\nCREATE (p)-[:INVOLVES]->(e)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (tm:Entity {name: \"Treatise on Money\"})\nCREATE (p)-[:MENTIONED_IN]->(tm)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (w:Entity {name: \"Wealth\"})\nCREATE (p)-[:INFLUENCES]->(w)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (a:Entity {name: \"Abstinence\"})\nCREATE (p)-[:INVOLVES]->(a)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (c:Entity {name: \"Cities\"})\nCREATE (p)-[:INVOLVES]->(c)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (f:Entity {name: \"Fens\"})\nCREATE (p)-[:INVOLVES]->(f)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (gt:Entity {name: \"General Theory\"})\nCREATE (p)-[:MENTIONED_IN]->(gt)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (c:Entity {name: \"Consumption\"})\nCREATE (p)-[:INFLUENCES]->(c)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (il:Entity {name: \"Income Level\"})\nCREATE (p)-[:INFLUENCES]->(il)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (s:Entity {name: \"Samuelson\"})\nCREATE (p)-[:MENTIONED_BY]->(s)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (cp:Entity {name: \"Circuit Paradox\"})\nCREATE (p)-[:DESCRIBED_AS]->(cp)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (bm:Entity {name: \"Balances Mechanics\"})\nCREATE (p)-[:DESCRIBED_IN_TERMS_OF]->(bm)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (ws:Entity {name: \"Wolfgang St\u00fctzel\"})\nCREATE (p)-[:MENTIONED_BY]->(ws)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (rs:Entity {name: \"Revenue Surplus\"})\nCREATE (p)-[:LEADS_TO]->(rs)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (ddt:Entity {name: \"Debt Deflation Theory\"})\nCREATE (p)-[:RELATES_TO]->(ddt)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (pd:Entity {name: \"Paradox of Debt\"})\nCREATE (p)-[:RELATES_TO]->(pd)\n\nMATCH (p:Entity {name: \"Paradox of Thrift\"})\nMATCH (s:Entity {name: \"Savings\"})\nCREATE (p)-[:INVOLVES",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 120,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 78,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 78,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 90.28443312644958
  },
  {
    "url": "https://en.wikipedia.org/wiki/Hula_hoop",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n```\n# Create the nodes for main entities\nCREATE (HulaHoop:Entity {name: 'Hula Hoop', type: 'Toy'})\nCREATE (WhamO:Entity {name: 'Wham-O', type: 'Company'})\nCREATE (NativeAmericanHoopDance:Entity {name: 'Native American Hoop Dance', type: 'Dance'})\nCREATE (StringCheeseIncident:Entity {name: 'The String Cheese Incident', type: 'Band'})\nCREATE (Hooping:Entity {name: 'Hooping', type: 'Activity'})\nCREATE (HoopDance:Entity {name: 'Hoop Dance', type: 'Dance'})\nCREATE (Fitness:Entity {name: 'Fitness', type: 'Activity'})\nCREATE (FireHooping:Entity {name: 'Fire Hooping', type: 'Activity'})\nCREATE (WeightedHoop:Entity {name: 'Weighted Hula Hoop', type: 'Exercise Equipment'})\n\n# Create relationships between entities\nMATCH (a:Entity {name: 'Hula Hoop'}), (b:Entity {name: 'Wham-O'})\nCREATE (a)-[:CREATED_BY]->(b)\n\nMATCH (a:Entity {name: 'Hula Hoop'}), (b:Entity {name: 'Native American Hoop Dance'})\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH (a:Entity {name: 'The String Cheese Incident'}), (b:Entity {name: 'Hooping'})\nCREATE (a)-[:CONTRIBUTED_TO]->(b)\n\nMATCH (a:Entity {name: 'Hooping'}), (b:Entity {name: 'Hoop Dance'})\nCREATE (a)-[:INVOLVES]->(b)\n\nMATCH (a:Entity {name: 'Hooping'}), (b:Entity {name: 'Fitness'})\nCREATE (a)-[:RELATED_TO]->(b)\n\nMATCH (a:Entity {name: 'Hooping'}), (b:Entity {name: 'Fire Hooping'})\nCREATE (a)-[:VARIATION_OF]->(b)\n\nMATCH (a:Entity {name: 'Weighted Hula Hoop'}), (b:Entity {name: 'Hooping'})\nCREATE (a)-[:USED_IN]->(b)\n\n# Add additional attributes to nodes\nSET HulaHoop.description = 'A toy hoop twirled around the waist, limbs, or neck, made of various materials.'\nSET WhamO.description = 'Toy company that popularized the modern hula hoop in 1958.'\nSET NativeAmericanHoopDance.description = 'A form of storytelling dance that uses hoops to create shapes and represent symbols.'\nSET StringCheeseIncident.description = 'Jam band that fostered a renewed interest in hooping by throwing adult-sized hoops to their audience.'\nSET Hooping.description = 'Modern hooping activity involving on-body and off-body tricks.'\nSET HoopDance.description = 'Dance form that involves manipulating a hoop with the body.'\nSET Fitness.description = 'Physical well-being and health achieved through exercise.'\nSET FireHooping.description = 'Variation of hooping that involves hoops with spokes and burning kevlar wicks.'\nSET WeightedHoop.description = 'Hoop with added weight used for exercise routines.'\n```\n\nThese queries create a knowledge graph with nodes representing the main entities mentioned in the text, such as \"Hula Hoop\", \"Wham-O\", \"Native American Hoop Dance\", etc. Relationships between these entities are established using labeled edges, such as \"CREATED_BY\", \"USED_IN\", \"CONTRIBUTED_TO\", etc. Additionally, descriptive attributes are added to each node to provide more context about each entity.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 9,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 7,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 7,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 99.03269124031067
  },
  {
    "url": "https://en.wikipedia.org/wiki/Snakes_in_mythology",
    "queries": "Here are Cypher queries to create a knowledge graph based on the provided text:\n\n```cypher\n// Create nodes for cultures and entities\nCREATE (northAmerica:Culture {name: \"North America\"})\nCREATE (hopi:Entity {name: \"Hopi People\"})\nCREATE (mexican:Culture {name: \"Mexican Folk Culture\"})\nCREATE (greatGoddess:Entity {name: \"Great Goddess\"})\nCREATE (crete:Place {name: \"Crete\"})\nCREATE (mayan:Culture {name: \"Mayan\"})\nCREATE (aztec:Culture {name: \"Aztec\"})\nCREATE (quetzalcoatl:Entity {name: \"Quetzalcoatl\"})\nCREATE (cihuacoatl:Entity {name: \"Cihuacoatl\"})\nCREATE (maxicoat:Entity {name: \"Maxicoat\"})\nCREATE (dahomey:Culture {name: \"Dahomey\"})\nCREATE (danh:Entity {name: \"Danh\"})\nCREATE (egyptianMyth:Myth {name: \"Egyptian Myth\"})\nCREATE (ra:Deity {name: \"Ra\"})\nCREATE (norseMyth:Myth {name: \"Norse Mythology\"})\nCREATE (ouroboros:Symbol {name: \"Ouroboros\"})\nCREATE (serer:Culture {name: \"Serer\"})\nCREATE (jaaniiw:Place {name: \"Jaaniiw\"})\nCREATE (dogoon:Culture {name: \"Dogon\"})\nCREATE (lebe:Entity {name: \"Lebe\"})\nCREATE (mande:Place {name: \"Mand\u00e9\"})\nCREATE (bandiagara:Place {name: \"Bandiagara Escarpment\"})\nCREATE (sumerians:Culture {name: \"Sumerians\"})\nCREATE (hammurabi:Entity {name: \"Hammurabi\"})\nCREATE (ninazu:Deity {name: \"Ninazu\"})\nCREATE (ningishzida:Deity {name: \"Ningishzida\"})\nCREATE (christianity:Religion {name: \"Christianity\"})\nCREATE (islam:Religion {name: \"Islam\"})\nCREATE (adam:Entity {name: \"Adam\"})\nCREATE (eve:Entity {name: \"Eve\"})\nCREATE (paul:Entity {name: \"Paul\"})\nCREATE (john:Entity {name: \"John\"})\nCREATE (india:Place {name: \"India\"})\nCREATE (vritra:Entity {name: \"Vritra\"})\nCREATE (indra:Deity {name: \"Indra\"})\nCREATE (vishnu:Deity {name: \"Vishnu\"})\nCREATE (shesha:Entity {name: \"Shesha\"})\nCREATE (kurma:Entity {name: \"Kurma\"})\nCREATE (china:Place {name: \"China\"})\nCREATE (nuwa:Entity {name: \"N\u00fcwa\"})\nCREATE (greece:Place {name: \"Greece\"})\nCREATE (ophion:Entity {name: \"Ophion\"})\nCREATE (gorgons:Entity {name: \"Gorgons\"})\nCREATE (medusa:Entity {name: \"Medusa\"})\nCREATE (nagas:Entity {name: \"Nagas\"})\nCREATE (garuda:Entity {name: \"Garuda\"})\nCREATE (aapep:Entity {name: \"Aapep\"})\nCREATE (nordicMyth:Myth {name: \"Nordic Myth\"})\nCREATE (nidhogg:Entity {name: \"Nidhogg\"})\nCREATE (yggdrasil:Entity {name: \"Yggdrasil\"})\nCREATE (slavicPaganism:Religion {name: \"Slavic Paganism\"})\nCREATE (veles:Deity {name: \"Veles\"})\nCREATE (aztecUnderworld:Place {name: \"Aztec Underworld\"})\nCREATE (mictlan:Place {name: \"Mictlan\"})\nCREATE (bruleSioux:Culture {name: \"Brule Sioux\"})\nCREATE (pomo:Culture {name: \"Pomo\"})\nCREATE (hecate:Deity {name: \"Hecate\"})\nCREATE (jormungand:Entity {name: \"Jormungand\"})\nCREATE (hebrewMyth:Myth {name: \"Hebrew Myth\"})\nCREATE (leviathan:Entity {name: \"Leviathan\"})\nCREATE (zuni:Culture {name: \"Zuni\"})\nCREATE (koloowisi:Entity {name: \"Koloowisi\"})\nCREATE (scylla:Entity {name: \"Scylla\"})\nCREATE (saintGeorge:Entity {name: \"Saint George\"})\nCREATE (saintColumba:Entity {name{ \"Saint Columba\"})\nCREATE (sriLanka:Place {name: \"Sri Lanka\"})\nCREATE (kerala:Place {name: \"Kerala\"})\nCREATE (parasurama:Entity {name: \"Parasurama\"})\nCREATE (mannarasalaTemple:Place {name: \"Mannarasala Shri Nagaraja Temple\"})\nCREATE (nagaraja:Deity {name: \"Nagaraja\"})\nCREATE (jesus:Entity {name: \"Jesus\"})\nCREATE (asclepius:Deity {name: \"Asclepius\"})\n\n// Create relationships between cultures and entities\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"North America\" AND m.name = \"Hopi People\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Mexican Folk Culture\" AND m.name = \"Quetzalcoatl\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"North America\" AND m.name = \"Great Goddess\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Crete\" AND m.name = \"Great Goddess\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Mayan\" AND m.name = \"Quetzalcoatl\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Aztec\" AND m.name = \"Quetzalcoatl\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Aztec\" AND m.name = \"Cihuacoatl\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Aztec\" AND m.name = \"Maxicoat\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Dahomey\" AND m.name = \"Danh\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Myth) MATCH (m:Entity)\nWHERE n.name = \"Egyptian Myth\" AND m.name = \"Ra\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Myth) MATCH (m:Entity)\nWHERE n.name = \"Norse Mythology\" AND m.name = \"Ouroboros\"\nCREATE (n)-[:HAS_SYMBOL]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Serer\" AND m.name = \"Jaaniiw\"\nCREATE (n)-[:HAS_PLACE]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Dogoom\" AND m.name = \"Lebe\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Mand\u00e9\" AND m.name = \"Lebe\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Bandiagara Escarpment\" AND m.name = \"Lebe\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Sumerians\" AND m.name = \"Hammurabi\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Deity)\nWHERE n.name = \"Sumerians\" AND m.name = \"Ninazu\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Deity)\nWHERE n.name = \"Sumerians\" AND m.name = \"Ningishzida\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Religion) MATCH (m:Entity)\nWHERE n.name = \"Christianity\" AND m.name = \"Adam\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Religion) MATCH (m:Entity)\nWHERE n.name = \"Christianity\" AND m.name = \"Eve\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Religion) MATCH (m:Entity)\nWHERE n.name = \"Islam\" AND m.name = \"Adam\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Religion) MATCH (m:Entity)\nWHERE n.name = \"Islam\" AND m.name = \"Eve\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"India\" AND m.name = \"Vritra\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Deity)\nWHERE n.name = \"India\" AND m.name = \"Indra\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Place) MATCH (m:Deity)\nWHERE n.name = \"India\" AND m.name = \"Vishnu\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"India\" AND m.name = \"Shesha\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"India\" AND m.name = \"Kurma\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"China\" AND m.name = \"Nuwa\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Greece\" AND m.name = \"Ophion\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Gorgons\" AND m.name = \"Medusa\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Nagas\" AND m.name = \"Garuda\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Aapep\" AND m.name = \"Ra\"\nCREATE (n)-[:OPPOSES]->(m)\n\nMATCH (n:Myth) MATCH (m:Entity)\nWHERE n.name = \"Nordic Myth\" AND m.name = \"Nidhogg\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Myth) MATCH (m:Entity)\nWHERE n.name = \"Nordic Myth\" AND m.name = \"Yggdrasil\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Religion) MATCH (m:Deity)\nWHERE n.name = \"Slavic Paganism\" AND m.name = \"Veles\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Aztec Underworld\" AND m.name = \"Mictlan\"\nCREATE (n)-[:HAS_PLACE]->(m)\n\nMATCH (n:Culture) MATCH (m:Place)\nWHERE n.name = \"Brule Sioux\" AND m.name = \"Aztec Underworld\"\nCREATE (n)-[:HAS_PLACE]->(m)\n\nMATCH (n:Culture) MATCH (m:Place)\nWHERE n.name = \"Pomo\" AND m.name = \"Aztec Underworld\"\nCREATE (n)-[:HAS_PLACE]->(m)\n\nMATCH (n:Deity) MATCH (m:Entity)\nWHERE n.name = \"Hecate\" AND m.name = \"Snakes\"\nCREATE (n)-[:ASSOCIATED_WITH]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Jormungand\" AND m.name = \"Primordial Ocean\"\nCREATE (n)-[:FORMS]->(m)\n\nMATCH (n:Myth) MATCH (m:Entity)\nWHERE n.name = \"Hebrew Myth\" AND m.name = \"Leviathan\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Culture) MATCH (m:Entity)\nWHERE n.name = \"Zuni\" AND m.name = \"Koloowisi\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Scylla\" AND m.name = \"Hebrew Myth\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Saint George\" AND m.name = \"Maiden-Devouring Serpent\"\nCREATE (n)-[:DEFEATS]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Saint Columba\" AND m.name = \"Loch Ness Monster\"\nCREATE (n)-[:DEFEATS]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Sri Lanka\" AND m.name = \"Seven-Headed Cobra\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Entity)\nWHERE n.name = \"Kerala\" AND m.name = \"Parasurama\"\nCREATE (n)-[:HAS_ENTITY]->(m)\n\nMATCH (n:Place) MATCH (m:Deity)\nWHERE n.name = \"Mannarasala Temple\" AND m.name = \"Nagaraja\"\nCREATE (n)-[:HAS_DEITY]->(m)\n\nMATCH (n:Entity) MATCH (m:Entity)\nWHERE n.name = \"Jesus\" AND m.name = \"Disciples\"\nCREATE (n)-[:ENCOURAGES]->(m)\n\nMATCH (n:Deity) MATCH (m:Entity)\nWHERE n.name = \"Asclepius\" AND m.name = \"Sick People\"\nCREATE (n)-[:HEALS]->(m)\n```\n\nPlease note that I've simplified the text to focus on the most important relationships and entities. You can further expand upon this knowledge graph by adding more details and relationships as needed.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 60,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 62,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 62,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 125.44437003135681
  },
  {
    "url": "https://en.wikipedia.org/wiki/Machine_learning",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Nodes for Entities\nCREATE (machineLearning:Entity {name: \"Machine Learning\", type: \"Field of Study\"})\nCREATE (artificialIntelligence:Entity {name: \"Artificial Intelligence\", type: \"Field of Study\"})\nCREATE (deepLearning:Entity {name: \"Deep Learning\", type: \"Subfield\"})\nCREATE (neuralNetworks:Entity {name: \"Neural Networks\", type: \"Technique\"})\nCREATE (naturalLanguageProcessing:Entity {nameMaire: \"Natural Language Processing\", type: \"Application\"})\nCREATE (computerVision:Entity {name: \"Computer Vision\", type: \"Application\"})\nCREATE (speechRecognition:Entity {name: \"Speech Recognition\", type: \"Application\"})\nCREATE (emailFiltering:Entity {name: \"Email Filtering\", type: \"Application\"})\nCREATE (agriculture:Entity {name: \"Agriculture\", type: \"Application\"})\nCREATE (medicine:Entity {name: \"Medicine\", type: \"Application\"})\nCREATE (predictiveAnalytics:Entity {name: \"Predictive Analytics\", type: \"Application\"})\nCREATE (statistics:Entity {name: \"Statistics\", type: \"Foundation\"})\nCREATE (mathematicalOptimization:Entity {name: \"Mathematical Optimization\", type: \"Foundation\"})\nCREATE (dataMining:Entity {name: \"Data Mining\", type: \"Related Field\"})\nCREATE (exploratoryDataAnalysis:Entity {name: \"Exploratory Data Analysis\", type: \"Technique\"})\nCREATE (pacLearning:Entity {name: \"PAC Learning\", type: \"Theoretical Framework\"})\nCREATE (arthurSamuel:Entity {name: \"Arthur Samuel\", type: \"Person\"})\nCREATE (ibm:Entity {name: \"IBM\", type: \"Organization\"})\nCREATE (computerGaming:Entity {name: \"Computer Gaming\", type: \"Industry\"})\nCREATE (selfTeachingComputers:Entity {name: \"Self-Teaching Computers\", type: \"Synonym\"})\nCREATE (checkers:Entity {name: \"Checkers\", type: \"Game\"})\nCREATE (humanCognitiveProcesses:Entity {name: \"Human Cognitive Processes\", type: \"Study Area\"})\nCREATE (donaldHebb:Entity {name: \"Donald Hebb\", type: \"Psychologist\"})\nCREATE (organizationOfBehavior:Entity {name: \"The Organization of Behavior\", type: \"Book\"})\nCREATE (aiAndMlAlgorithms:Entity {name: \"AI and ML Algorithms\", type: \"Concept\"})\nCREATE (nodes:Entity {name: \"Nodes\", type: \"Concept\"})\nCREATE (artificialNeurons:Entity {name: \"Artificial Neurons\", type: \"Concept\"})\nCREATE (walterPitts:Entity {name: \"Walter Pitts\", type: \"Logician\"})\nCREATE (warrenMcculloch:Entity {name: \"Warren McCulloch\", type: \"Researcher\"})\nCREATE (neuralNetworksResearch:Entity {name: \"Neural Networks Research\", type: \"Research Area\"})\nCREATE (raytheonCompany:Entity {name: \"Raytheon Company\", type: \"Organization\"})\nCREATE (cybertron:Entity {name: \"Cybertron\", type: \"Learning Machine\"})\nCREATE (sonarSignals:Entity {name: \"Sonar Signals\", type: \"Data Type\"})\nCREATE (electrocardiograms:Entity {name: \"Electrocardiograms\", type: \"Data Type\"})\nCREATE (speechPatterns:Entity {name: \"Speech Patterns\", type: \"Data Type\"})\nCREATE (reinforcementLearning:Entity {name: \"Reinforcement Learning\", type: \"Technique\"})\nCREATE (rudimentaryReinforcementLearning:Entity {name: \"Rudimentary Reinforcement Learning\", type: \"Technique\"})\nCREATE (nilssonsBook:Entity {name: \"Nilsson's Book\", type: \"Publication\"})\nCREATE (learningMachines:Entity {name: \"Learning Machines\", type: \"Book\"})\nCREATE (patternRecognition:Entity {name: \"Pattern Recognition\", type: \"Research Area\"})\nCREATE (dudaAndHart:Entity {name: \"Duda and Hart\", type: \"Authors\"})\nCREATE (artificialNeuralNetwork:Entity {name: \"Artificial Neural Network\", type: \"Technique\"})\nCREATE (tomMitchell:Entity {name: \"Tom M. Mitchell\", type: \"Computer Scientist\"})\nCREATE (formalDefinition:Entity {name: \"Formal Definition\", type: \"Concept\"})\nCREATE (alanTuring:Entity {name: \"Alan Turing\", type: \"Computer Scientist\"})\nCREATE (computingMachineryAndIntelligence:Entity {name: \"Computing Machinery and Intelligence\", type: \"Paper\"})\nCREATE (cancerousMoles:Entity {name: \"Cancerous Moles\", type: \"Medical Condition\"})\nCREATE (supervisedLearning:Entity {name: \"Supervised Learning\", type: \"Technique\"})\nCREATE (computerVisionTechnique:Entity {nameWeights: \"Computer Vision Technique\", type: \"Technique\"})\nCREATE (stockTrading:Entity {name: \"Stock Trading\", type: \"Application\"})\nCREATE (academicDiscipline:Entity {name: \"Academic Discipline\", type: \"Field\"})\nCREATE (symbolicMethods:Entity {name: \"Symbolic Methods\", type: \"Approach\"})\nCREATE (perceptrons:Entity {name: \"Perceptrons\", type: \"Model\"})\nCREATE (generalizedLinearModels:Entity {name: \"Generalized Linear Models\", type: \"Statistical Models\"})\nCREATE (probabilisticReasoning:Entity {name: \"Probabilistic Reasoning\", type: \"Technique\"})\nCREATE (automatedMedicalDiagnosis:Entity {name: \"Automated Medical Diagnosis\", type: \"Application\"})\nCREATE (knowledgeBasedApproach:Entity {name: \"Knowledge-Based Approach\", type: \"Approach\"})\nCREATE (expertSystems:Entity {name: \"Expert Systems\", type: \"Systems\"})\nCREATE (inductiveLogicProgramming:Entity {name: \"Inductive Logic Programming\", type: \"Technique\"})\nCREATE (patternRecognitionField:Entity {name: \"Pattern Recognition Field\", type: \"Field\"})\nCREATE (informationRetrieval:Entity {name: \"Information Retrieval\", type: \"Field\"})\nCREATE (connectionism:Entity {name: \"Connectionism\", type: \"Approach\"})\nCREATE (johnHopfield:Entity {name: \"John Hopfield\", type: \"Researcher\"})\nCREATE (davidRumelhart:Entity {nameCoefficient: \"David Rumelhart\", type: \"Researcher\"})\nCREATE (geoffreyHinton:Entity {name: \"Geoffrey Hinton\", type: \"Researcher\"})\nCREATE (backpropagation:Entity {name: \"Backpropagation\", type: \"Technique\"})\nCREATE (compression:Entity {name: \"Compression\", type: \"Technique\"})\nCREATE (arithmeticCoding:Entity {name: \"Arithmetic Coding\", type: \"Technique\"})\nEntity(x) RETURN x;\n\n# Create Relationships between Entities\nMATCH (machineLearning), (artificialIntelligence)\nCREATE (machineLearning)-[:IS_A_SUBFIELD_OF]->(artificialIntelligence);\n\nMATCH (machineLearning), (deepLearning)\nCREATE (machineLearning)-[:INCLUDES_SUBFIELD]->(deepLearning);\n\nMATCH (deepLearning), (neuralNetworks)\nCREATE (deepLearning)-[:INCLUDES_TECHNIQUE]->(neuralNetworks);\n\nMATCH (machineLearning), (naturalLanguageProcessing)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(naturalLanguageProcessing);\n\nMATCH (machineLearning), (computerVision)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(computerVision);\n\nMATCH (machineLearning), (speechRecognition)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(speechRecognition);\n\nMATCH (machineLearning), (emailFiltering)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(emailFiltering);\n\nMATCH (machineLearning), (agriculture)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(agriculture);\n\nMATCH (machineLearning), (medicine)\nCREATE (machineLearning)-[:HAS_APPLICATION]->(medicine);\n\nMATCH (machineLearning), (predictiveAnalytics)\nCREATE (predictiveAnalytics)-[:IS_KNOWN_AS]->(machineLearning);\n\nMATCH (machineLearning), (statistics)\nCREATE (machineLearning)-[:HAS_FOUNDATION]->(statistics);\n\nMATCH (machineLearning), (mathematicalOptimization)\nCREATE (machineLearning)-[:HAS_FOUNDATION]->(mathematicalOptimization);\n\nMATCH (dataMining), (machineLearning)\nCREATE (dataMining)-[:IS_RELATED_TO]->(machineLearning);\n\nMATCH (exploratoryDataAnalysis), (dataMining)\nCREATE (dataMining)-[:INCLUDES_TECHNIQUE]->(exploratoryDataAnalysis);\n\nMATCH (machineLearning), (pacLearning)\nCREATE (machineLearning)-[:HAS_THEORETICAL_FRAMEWORK]->(pacLearning);\n\nMATCH (arthurSamuel), (machineLearning)\nCREATE (arthurSamuel)-[:COINED_TERM]->(machineLearning);\n\nMATCH (arthurSamuel), (ibm)\nCREATE (arthurSamuel)-[:WORKED_FOR]->(ibm);\n\nMATCH (selfTeachingComputers), (machineLearning)\nCREATE (selfTeachingComputers)-[:IS_SYNONYM_OF]->(machineLearning);\n\nMATCH (arthurSamuel), (selfTeachingComputers)\nCREATE (arthurSamuel)-[:COINED_TERM]->(selfTeachingComputers);\n\nMATCH (arthurSamuel), (checkers)\nCREATE (arthurSamuel)-[:CREATED_PROGRAM_FOR]->(checkers);\n\nMATCH (humanCognitiveProcesses), (machineLearning)\nCREATE (machineLearning)-[:HAS_ROOTS_IN]->(humanCognitiveProcesses);\n\nMATCH (donaldHebb), (humanCognitiveProcesses)\nCREATE (donaldHebb)-[:STUDIED]->(humanCognitiveProcesses);\n\nMATCH (organizationOfBehavior), (donaldHebb)\nCREATE (donaldHebb)-[:PUBLISHED]->(organizationOfBehavior);\n\nMATCH (aiAndMlAlgorithms), (organizationOfBehavior)\nCREATE (organizationOfBehavior)-[:INFLUENCED]->(aiAndMlAlgorithms);\n\nMATCH (nodes), (aiAndMlAlgorithms)\nCREATE (aiAndMlAlgorithms)-[:USES_CONCEPT_OF]->(nodes);\n\nMATCH (artificialNeurons), (aiAndMlAlgorithms)\nCREATE (aiAndMlAlgorithms)-[:USES_CONCEPT_OF]->(artificialNeurons);\n\nMATCH (walterPitts), (humanCognitiveProcesses)\nCREATE (walterPitts)-[:STUDIED]->(humanCognitiveProcesses);\n\nMATCH (warrenMcculloch), (humanCognitiveProcesses)\nCREATE (warrenMcculloch)-[:STUDIED]->(humanCognitiveProcesses);\n\nMATCH (neuralNetworksResearch), (walterPitts)\nCREATE (walterPitts)-[:CONTRIBUTED_TO]->(neuralNetworksResearch);\n\nMATCH (neuralNetworksResearch), (warrenMcculloch)\nCREATE (warrenMcculloch)-[:CONTRIBUTED_TO]->(neuralNetworksResearch);\n\nMATCH (raytheonCompany), (cybertron)\nCREATE (raytheonCompany)-[:DEVELOPED]->(cybertron);\n\nMATCH (cybertron), (sonarSignals)\nCREATE (cybertron)-[:ANALYZED]->(sonarSignals);\n\nMATCH (cybertron), (electrocardiograms)\nCREATE (cybertron)-[:ANALYZED]->(electrocardiograms);\n\nMATCH (cybertron), (speechPatterns)\nCREATE (cybertron)-[:ANALYZED]->(speechPatterns);\n\nMATCH (reinforcementLearning), (cybertron)\nCREATE (cybertron)-[:USED_TECHNIQUE]->(reinforcementLearning);\n\nMATCH (rudimentaryReinforcementLearning), (cybertron)\nCREATE (cybertron)-[:USED_TECHNIQUE]->(rudimentaryReinforcementLearning);\n\nMATCH (learningMachines), (nilssonsBook)\nCREATE (nilssonsBook)-[:DEALT_WITH_TOPIC]->(learningMachines);\n\nMATCH (learningMachines), (patternRecognition)\nCREATE (learningMachines)-[:DEALT_WITH_TOPIC]->(patternRecognition);\n\nMATCH (dudaAndHart), (patternRecognition)\nCREATE (dudaAndHart)-[:DESCRIBED]->(patternRecognition);\n\nMATCH (artificialNeuralNetwork), (patternRecognition)\nCREATE (artificialNeuralNetwork)-[:RECOGNIZED]->(patternRecognition);\n\nMATCH (tomMitchell), (formalDefinition)\nCREATE (tomMitchell)-[:PROVIDED]->(formalDefinition);\n\nMATCH (formalDefinition), (machineLearning)\nCREATE (formalDefinition)-[:DEFINED]->(machineLearning);\n\nMATCH (alanTuring), (computingMachineryAndIntelligence)\nCREATE (alanTuring)-[:PUBLISHED]->(computingMachineryAndIntelligence);\n\nMATCH (computingMachineryAndIntelligence), (machineLearning)\nCREATE (computingMachineryAndIntelligence)-[:QUESTIONED_CONCEPT_OF]->(machineLearning);\n\nMATCH (supervisedLearning), (cancerousMoles)\nCREATE (supervisedLearning)-[:USED_FOR_CLASSIFICATION]->(cancerousMoles);\n\nMATCH (computerVisionTechnique), (cancerousMoles)\nCREATE (computerVisionTechnique)-[:USED_FOR_CLASSIFICATION]->(cancerousMoles);\n\nMATCH (stockTrading), (supervisedLearning)\nCREATE (supervisedLearning)-[:USED_FOR_PREDICTION]->(stockTrading);\n\nMATCH (academicDiscipline), (machineLearning)\nCREATE (machineLearning)-[:EMERGED_FROM]->(academicDiscipline);\n\nMATCH (symbolicMethods), (machineLearning)\nCREATE (machineLearning)-[:ATTEMPTED_WITH_APPROACH]->(symbolicMethods);\n\nMATCH (perceptrons), (symbolicMethods)\nCREATE (symbolicMethods)-[:INCLUDED_MODELS]->(perceptrons);\n\nMATCH (generalizedLinearModels), (symbolicMethods)\nCREATE (symbolicMethods)-[:WERE_REINVENTIONS_OF]->(generalizedLinearModels);\n\nMATCH (probabilisticReasoning), (machineLearning)\nCREATE (machineLearning)-[:USED_TECHNIQUE]->(probabilisticReasoning);\n\nMATCH (automatedMedicalDiagnosis), (probabilisticReasoning)\nCREATE (probabilitativeReasoning)-[:USED_IN_APPLICATION]->(automatedMedicalDiagnosis);\n\nMATCH (knowledgeBasedApproach), (machineLearning)\nCREATE (machineLearning)-[:SHIFTED_AWAY_FROM]->(knowledgeBasedApproach);\n\nMATCH (expertSystems), (knowledgeBasedApproach)\nCREATE (knowledgeBasedApproach)-[:DOMINATED_FIELD]->(expertSystems);\n\nMATCH (inductiveLogicProgramming), (knowledgeBasedApproach)\nCREATE (knowledgeBasedApproach)-[:LED_TO]->(inductiveLogicProgramming);\n\nMATCH (patternRecognitionField), (machineLearning)\nCREATE (machineLearning)-[:WAS_OUTSIDE_FIELD]->(patternRecognitionField);\n\nMATCH (informationRetrieval), (machineLearning)\nCREATE (machineLearning)-[:WAS_OUTSIDE_FIELD]->(informationRetrieval);\n\nMATCH (connectionism), (neuralNetworksResearch)\nCREATE (neuralNetworksResearch)-[:WAS_CONTINUED_OUTSIDE_FIELD]->(connectionism);\n\nMATCH (johnHopfield), (connectionism)\nCREATE (connectionism)-[:CONTRIBUTED_TO_FIELD]->(johnHopfield);\n\nMATCH (davidRumelhart), (connectionism)\nCREATE (connectionism)-[:CONTRIBUTED_TO_FIELD]->(davidRumelhart);\n\nMATCH (geoffreyHinton), (connectionism)\nCREATE (connectionism)-[:CONTRIBUTED_TO_FIELD]->(geoffreyHinton);\n\nMATCH (backpropagation), (connectionism)\nCREATE (connectionism)-[:LED_TO_REINVENTION_OF]->(backpropagation);\n\nMATCH (compression), (machineLearning)\nCREATE (machineLearning)-[:HAS_CLOSE_CONNECTION_TO]->(compression);\n\n# ... and so on for the remaining relationships\n```\n\nThese queries create nodes for each entity mentioned in the text, such as \"Machine Learning,\" \"Artificial Intelligence,\" \"Deep Learning,\" and so on. Relationships are then established between these entities, indicating their connections, such as \"IS_A_SUBFIELD_OF,\" \"HAS_APPLICATION,\" \"PROVIDED,\" etc. The relationships are directional, indicating the nature of the connection between the entities. This knowledge graph can be further queried and visualized to gain insights into the relationships between the entities in the text.",
    "summary": {
      "Syntax Errors": 2,
      "Correctly Created Nodes": 67,
      "Incorrectly Created Nodes": 2,
      "Correctly Created Relationships": 66,
      "Incorrectly Created Relationships": 3,
      "Correctly Labelled Relationships": 64,
      "Incorrectly Labelled Relationships": 2
    },
    "execution_time_in_seconds": 151.15682220458984
  },
  {
    "url": "https://en.wikipedia.org/wiki/Dinosaur",
    "queries": "Here are the Cypher queries to create a knowledge graph from the given text:\n\n```\n# Create nodes for key entities\n\nCREATE (dinosaurs:Entity {name: \"Dinosaurs\", description: \"Diverse group of reptiles\"})\nCREATE (reptiles:Entity {name: \"Reptiles\"})\nCREATE (clade:Entity {name: \"Clade\"})\nCREATE (triassic:Entity {name: \"Triassic Period\"})\nCREATE (jurassic:Entity {name: \"Jurassic Period\"})\nCREATE (cretaceous:Entity {name: \"Cretaceous Period\"})\nCREATE (birds:Entity {name: \"Birds\", description: \"Avian dinosaurs\"})\nCREATE (theropods:Entity {name: \"Theropods\"})\nCREATE (extinction:Entity {name: \"Cretaceous-Paleogene Extinction\"})\nCREATE (non_avian:Entity {name: \"Non-Avian Dinosaurs\"})\nCREATE (species:Entity {name: \"Species\"})\nCREATE (genera:Entity {name: \"Genera\"})\nCREATE (vertebrates:Entity {name: \"Terrestrial Vertebrates\"})\nCREATE (mya:Entity {name: \"Million Years Ago\"})\nCREATE (fossil:Entity {name: \"Fossil Record\"})\nCREATE (evidence:Entity {name: \"Fossil Evidence\"})\nCREATE (paleontologists:Entity {name: \"Paleontologists\"})\nCREATE (egg_laying:Entity {name: \"Egg Laying\"})\nCREATE (nest_building:Entity {nameIntersecting: \"Nest Building\"})\nCREATE (bipedal:Entity {name: \"Bipedal\"})\nCREATE (quadrupedal:Entity {name: \"Quadrupedal\"})\nCREATE (display_structures:Entity {name: \"Display Structures\"})\nCREATE (skeletal_modifications:Entity {name: \"Skeletal Modifications\"})\nCREATE (flight:Entity {name: \"Flight\"})\nCREATE (constraints:Entity {name: \"Constraints\"})\nCREATE (prehistoric:Entity {name: \"Prehistoric Dinosaurs\"})\nCREATE (sauropod:Entity {name: \"Sauropod Dinosaurs\"})\nCREATE (lengths:Entity {name: \"Lengths\"})\nCREATE (heights:Entity {name: \"Heights\"})\nCREATE (lineage:Entity {name: \"Lineage\"})\nCREATE (survival:Entity {name: \"Survival\"})\nCREATE (scientific_community:Entity {name: \"Scientific Community\"})\nCREATE (century:Entity {name: \"Century\"})\nCREATE (culture:Entity {name: \"Popular Culture\"})\nCREATE (books:Entity {name: \"Books\"})\nCREATE (films:Entity {name: \"Films\"})\nCREATE (franchise:Entity {name: \"Franchise\"})\nCREATE (enthusiasm:Entity {name: \"Public Enthusiasm\"})\nCREATE (funding:Entity {name: \"Funding\"})\nCREATE (discoveries:Entity {name: \"Discoveries\"})\nCREATE (taxonomic:Entity {name: \"Taxonomic Nomenclature\"})\nCREATE (common_ancestor:Entity {name: \"Common Ancestor\"})\nCREATE (definitions:Entity {name: \"Definitions\"})\nCREATE (groups:Entity {name: \"Groups\"})\nCREATE (ornithischia:Entity {name: \"Ornithischia\"})\nCREATE (saurischia:Entity {nameCoefficient: \"Saurischia\"})\nCREATE (ankylosaurians:Entity {name: \"Ankylosaurians\"})\nCREATE (stegosaurians:Entity {name: \"Stegosaurians\"})\nCREATE (ceratopsians:Entity {name: \"Ceratopsians\"})\nCREATE (pachycephalosaurians:Entity {name: \"Pachycephalosaurians\"})\nCREATE (ornithopods:Entity {name: \"Ornithopods\"})\nCREATE (coelurosaurs:Entity {name: \"Coelurosaurs\"})\nCREATE (maniraptora:Entity {name: \"Maniraptora\"})\nCREATE (synonym:Entity {name: \"Synonym\"})\nCREATE (archosaurs:Entity {name: \"Archosaurs\"})\nCREATE (posture:Entity {name: \"Posture\"})\nCREATE (limbs:Entity {name: \"Limbs\"})\nCREATE (mammals:Entity {name: \"Mammals\"})\nCREATE (niche:Entity {name: \"Niche\"})\nCREATE (carnivores:Entity {name: \"Carnivores\"})\nCREATE (size:Entity {name: \"Size\"})\nCREATE (archosaurian:Entity {name: \"Archosaurian Skeleton\"})\nCREATE (synapomorphies:Entity {name: \"Synapomorphies\"})\nCREATE (interrelations:Entity {name: \"Interrelations\"})\nCREATE (fenestrae:Entity {name: \"Fenestrae\"})\nCREATE (skull:Entity {name: \"Skull\"})\nCREATE (jaw:Entity {name: \"Jaw\"})\nCREATE (scapula:Entity {name: \"Scapula\"})\nCREATE (acetabulum:Entity {name: \"Acetabulum\"})\nCREATE (hip:Entity {name: \"Hip\"})\nCREATE (socket:Entity {name: \"Socket\"})\nCREATE (pelvis:Entity {name: \"Pelvis\"})\nCREATE (femur:Entity {name: \"Femur\"})\nCREATE (breathing:Entity {name: \"Breathing\"})\nCREATE (stamina:Entity {name: \"Stamina\"})\nCREATE (activity:Entity {name: \"Activity\"})\nCREATE (bending:Entity {name: \"Bending\"})\nCREATE (stress:Entity {name: \"Stress\"})\nCREATE (archosaurs:Entity {name: \"Archosaurs\"})\nCREATE (rauisuchians:Entity {name: \"Rauisuchians\"})\nCREATE (configuration:Entity {name: \"Configuration\"})\nCREATE (joint:Entity {name: \"Joint\"})\nCREATE (chinese:Entity {name: \"Chinese\"})\nCREATE (dragon:Entity {name: \"Dragon Bones\"})\nCREATE (europe:Entity {name: \"Europe\"})\nCREATE (english:Entity {name: \"English\"})\nCREATE (quarry:Entity {name: \"Quarry\"})\nCREATE (professor:Entity {name: \"Professor\"})\nCREATE (university:Entity {name: \"University\"})\nCREATE (curator:Entity {name: \"Curator\"})\nCREATE (description:Entity {name: \"Description\"})\nCREATE (titan:Entity {name: \"Titan\"})\nCREATE (legend:Entity {name: \"Legend\"})\nCREATE (sauropod:Entity {name: \"Sauropod\"})\nCREATE (haddrosaurus:Entity {name: \"Haddrosaurus\"})\nCREATE (mania:Entity {name: \"Mania\"})\nCREATE (rivalry:Entity {name: \"Rivalry\"})\nCREATE (scientist:Entity {name: \"Scientist\"})\nCREATE (war:Entity {name: \"War\"})\nCREATE (methods:Entity {name: \"Methods\"})\nCREATE (specimen:Entity {name: \"Specimen\"})\nCREATE (blasting:Entity {name: \"Blasting\"})\nCREATE (evidence:Entity {name: \"Evidence\"})\nCREATE (world:Entity {name: \"World War II\"})\nCREATE (attention:Entity {name: \"Attention\"})\n\n# Create relationships between entities\n\nMATCH (dinosaurs), (reptiles)\nCREATE (dinosaurs)-[:IS_A]->(reptiles)\n\nMATCH (dinosaurs), (clade)\nCREATE (dinosaurs)-[:BELONGS_TO]->(clade)\n\nMATCH (dinosaurs), (triassic)\nCREATE (dinosaurs)-[:APPEARED_IN]->(triassic)\n\nMATCH (dinosaurs), (jurassic)\nCREATE (dinosaurs)-[:DOMINATED]->(jurassic)\n\nMATCH (dinosaurs), (cretaceous)\nCREATE (dinosaurs)-[:DOMINATED]->(cretaceous)\n\nMATCH (dinosaurs), (birds)\nCREATE (dinosaurs)-[:INCLUDES]->(birds)\nCREATE (birds)-[:IS_A]->(dinosaurs)\n\nMATCH (dinosaurs), (theropods)\nCREATE (dinosaurs)-[:EVOLVED_FROM]->(theropods)\n\nMATCH (dinosaurs), (extinction)\nCREATE (dinosaurs)-[:SURVIVED]->(extinction)\n\nMATCH (dinosaurs), (non_avian)\nCREATE (dinosaurs)-[:DIVIDED_INTO]->(non_avian)\nCREATE (dinosaurs)-[:DIVIDED_INTO]->(birds)\n\nMATCH (dinosaurs), (species)\nCREATE (dinosaurs)-[:VARIED_IN]->(species)\n\nMATCH (dinosaurs), (genera)\nCREATE (dinosaurs)-[:VARIED_IN]->(genera)\n\nMATCH (dinosaurs), (vertebrates)\nCREATE (dinosaurs)-[:BECAME]->(vertebrates)\n\nMATCH (dinosaurs), (mya)\nCREATE (dinosaurs)-[:APPEARED_BETWEEN]->(mya)\n\nMATCH (dinosaurs), (fossil)\nCREATE (dinosaurs)-[:SUPPORTED_BY]->(fossil)\n\nMATCH (dinosaurs), (evidence)\nCREATE (dinosaurs)-[:IDENTIFIED_USING]->(evidence)\n\nMATCH (evidence), (paleontologists)\nCREATE (evidence)-[:ANALYZED_BY]->(paleontologists)\n\nMATCH (dinosaurs), (egg_laying)\nCREATE (dinosaurs)-[:WERE]->(egg_laying)\n\nMATCH (dinosaurs), (nest_building)\nCREATE (dinosaurs)-[:SHARED_TRAIT]->(nest_building)\n\nMATCH (dinosaurs), (bipedal)\nCREATE (dinosaurs)-[:WERE_ANCESTRALLY]->(bipedal)\n\nMATCH (dinosaurs), (quadrupedal)\nCREATE (dinosaurs)-[:INCLUDED]->(quadrupedal)\n\nMATCH (dinosaurs), (display_structures)\nCREATE (dinosaurs)-[:INCLUDED]->(display_structures)\n\nMATCH (dinosaurs), (skeletal_modifications)\nCREATE (dinosaurs)-[:INCLUDED]->(skeletal_modifications)\n\nMATCH (birds), (flight)\nCREATE (birds)-[:HAD_CONSTRAINTS_DUE_TO]->(flight)\n\nMATCH (flight), (constraints)\nCREATE (flight)-[:DUE_TO]->(constraints)\n\nMATCH (dinosaurs), (prehistoric)\nCREATE (dinosaurs)-[:INCLUDED]->(prehistoric)\n\nMATCH (prehistoric), (sauropod)\nCREATE (prehistoric)-[:INCLUDED]->(sauropod)\n\nMATCH (sauropod), (lengths)\nCREATE (sauropod)-[:REACHED]->(lengths)\n\nMATCH (sauropod), (heights)\nCREATE (sauropod)-[:REACHED]->(heights)\n\nMATCH (birds), (lineage)\nCREATE (birds)-[:ARE_THE_ONLY]->(lineage)\n\nMATCH (scientific_community), (century)\nCREATE (scientific_community)-[:THROUGH_FIRST_HALF_OF]->(century)\n\nMATCH (dinosaurs), (culture)\nCREATE (dinosaurs)-[:BECAME_PART_OF]->(culture)\n\nMATCH (books), (films)\nCREATE (books)-[:APPEARED_IN]->(films)\nCREATE (films)-[:APPEARED_IN]->(books)\n\nMATCH (franchise), (enthusiasm)\nCREATE (franchise)-[:ENSURED_REGULAR_APPEARANCE_DUE_TO]->(enthusiasm)\n\nMATCH (enthusiasm), (funding)\nCREATE (enthusiasm)-[:RESULTED_IN]->(funding)\n\nMATCH (discoveries), (media)\nCREATE (discoveries)-[:COVERED_BY]->(media)\n\nMATCH (taxonomic), (common_ancestor)\nCREATE (taxonomic)-[:UNDER]->(common_ancestor)\n\nMATCH (definitions), (groups)\nCREATE (definitions)-[:COVER]->(groups)\n\nMATCH (ornithischia), (saurischia)\nCREATE (ornithischia)-[:INCLUDES]->(saurischia)\n\nMATCH (ankylosaurians), (stegosaurians)\nCREATE (ankylosaurians)-[:INCLUDES]->(stegosaurians)\n\nMATCH (ceratopsians), (pachycephalosaurians)\nCREATE (ceratopsians)-[:INCLUDES]->(pachycephalosaurians)\n\nMATCH (ornithopods), (theropods)\nCREATE (ornithopods)-[:INCLUDES]->(theropods)\n\nMATCH (theropods), (coelurosaurs)\nCREATE (theropods)-[:INCLUDES]->(coelurosaurs)\n\nMATCH (coelurosaurs), (maniraptora)\nCREATE (coelurosaurs)-[:INCLUDES]->(maniraptora)\n\nMATCH (definitions), (synonym)\nCREATE (definitions)-[:HAS]->(synonym)\n\nMATCH (dinosaurs), (archosaurs)\nCREATE (dinosaurs)-[:ARE_ARCHOSAURS_WITH]->(archosaurs)\n\nMATCH (dinosaurs), (posture)\nCREATE (dinosaurs)-[:HAD]->(posture)\n\nMATCH (mammals), (dinosaurs)\nCREATE (mammals)-[:DISTINCT_FROM]->(dinosaurs)\n\nMATCH (dinosaurs), (niche)\nCREATE (dinosaurs)-[:DOMINATED_NICHES]->(niche)\n\nMATCH (carnivores), (size)\nCREATE (carnivores)-[:RARELY_EXCEEDED]->(size)\n\nMATCH (dinosaurs), (archosaurian)\nCREATE (dinosaurs)-[:SHARED]->(archosaurian)\n\nMATCH (archosaurian), (synapomorphies)\nCREATE (archosaurian)-[:MODIFICATIONS]->(synapomorphies)\n\nMATCH (interrelations), (synapomorphies)\nCREATE (interrelations)-[:CONFIRMED]->(synapomorphies)\n\nMATCH (fenestrae), (skull)\nCREATE (fenestrae)-[:OPENINGS_IN]->(skull)\n\nMATCH (skull), (jaw)\nCREATE (skull)-[:AND_JAW]->(jaw)\n\nMATCH (scapula), (acetabulum)\nCREATE (scapula)-[:AND]->(acetabulum)\n\nMATCH (acetabulum), (hip)\nCREATE (acetabulum)-[:HIP_SOCKET_OF]->(hip)\n\nMATCH (hip), (socket)\nCREATE (hip)-[:WITH]->(socket)\n\nMATCH (pelvis), (femur)\nCREATE (pelvis)-[:AND]->(femur)\n\nMATCH (breathing), (movement)\nCREATE (breathing)-[:EASILY_WHILE]->(movement)\n\nMATCH (stamina), (activity)\nCREATE (stamina)-[:PERMITTED]->(activity)\n\nMATCH (bending), (stress)\nCREATE (bending)-[:REDUCED]->(stress)\n\nMATCH (archosaurs), (rauisuchians)\nCREATE (archosaurs)-[:INCLUDED]->(rauisuchians)\n\nMATCH (configuration), (joint)\nCREATE (configuration)-[:CONFIGURATION_OF]->(joint)\n\nMATCH (chinese), (dragon)\nCREATE (chinese)-[:CONSIDERED]->(dragon)\n\nMATCH (europe), (giants)\nCREATE (europe)-[:BELIEVED_TO_BE]->(giants)\n\nMATCH (english), (quarry)\nCREATE (english)-[:DESCRIPTIONS_OF]->(quarry)\n\nMATCH (professor), (university)\nCREATE (professor)-[:PROFESSOR_AT]->(university)\n\nMATCH (curator), (museum)\nCREATE (curator)-[:CURATOR_OF]->(museum)\n\nMATCH (description), (titan)\nCREATE (description)-[:CORRECTLY_IDENTIFIED_AS]->(titan)\n\nMATCH (legend), (sauropod)\nCREATE (legend)-[:RECOGNIZED_AS]->(sauropod)\n\nMATCH (haddrosaurus), (mania)\nCREATE (haddrosaurus)-[:SPARKED]->(mania)\n\nMATCH (rivalry), (scientist)\nCREATE (rivalry)-[:BETWEEN]->(scientist)\n\nMATCH (war), (methods)\nCREATE (war)-[:LASTED_DUE_TO]->(methods)\n\nMATCH (methods), (specimen)\nCREATE (methods)-[:DAMAGED]->(specimen)\n\nMATCH (blasting), (evidence)\nCREATE (blasting)-[:EASILY_DESTROYED]->(evidence)\n\nMATCH (world), (research)\nCREATE (world)-[:CAUSED_PAUSE_IN]->(research)\n\nMATCH (attention), (research)\nCREATE (attention)-[:SHIFTED_TO]->(research)\n```",
    "summary": {
      "Syntax Errors": 2,
      "Correctly Created Nodes": 52,
      "Incorrectly Created Nodes": 8,
      "Correctly Created Relationships": 62,
      "Incorrectly Created Relationships": 8,
      "Correctly Labelled Relationships": 59,
      "Incorrectly Labelled Relationships": 11
    },
    "execution_time_in_seconds": 202.42645502090454
  },
  {
    "url": "https://en.wikipedia.org/wiki/Limerick_(poetry)",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create nodes for relevant entities\n\nCREATE (Limerick)\nCREATE (Verse)\nCREATE (Refrain)\nCREATE (DrinkingSong)\nCREATE (NonsenseVerse)\nCREATE (HumorousVerse)\nCREATE (Obscenity)\nCREATE (TabooViolation)\nCREATE (GershonLegman {name: \"Gershon Legman\"})\nCREATE (EdwardLear {name: \"Edward Lear\"})\nCREATE (MaiguePoets {name: \"Maigue Poets\"})\nCREATE (England)\nCREATE (Ireland)\nCREATE (Smyrna)\nCREATE (Detroit)\nCREATE (SaintJohn)\nCREATE (NewBrunswick)\nCREATE (JohnClarke {name: \"John Clarke\"})\nCREATE (EzraHaberGlenn {name: \"Ezra Haber Glenn\"})\nCREATE (VittorioDeSica {name: \"Vittorio De Sica\"})\nCREATE (LeighMercer {name: \"Leigh Mercer\"})\n\n# Create relationships between entities\n\nMATCH (l:Limerick)\nMATCH (v:Verse)\nMATCH (r:Refrain)\nMATCH (ds:DrinkingSong)\nCREATE (l)-[:CONSISTS_OF]->(v)\nCREATE (l)-[:COMBINED_WITH]->(r)\nCREATE (r)-[:FORMS]->(ds)\nCREATE (v)-[:CAN_BE]->(l)\nCREATE (v)-[:CAN_BE]->(NonsenseVerse)\nCREATE (v)-[:CAN_BE]->(HumorousVerse)\n\nMATCH (l:Limerick)-[:CONSISTS_OF]->(v:Verse)\nMATCH (o:Obscenity)\nMATCH (tv:TabooViolation)\nCREATE (v)-[:CAN_INCLUDE]->(o)\nCREATE (v)-[:CAN_INVOLVE]->(tv)\n\nMATCH (gl:GershonLegman)\nMATCH (l:Limerick)\nCREATE (gl)-[:POPULARIZED]->(l)\n\nMATCH (el:EdwardLear)\nMATCH (l:Limerick)\nCREATE (el)-[:POPULARIZED]->(l)\nCREATE (el)-[:ASSOCIATED_WITH]->(NonsenseVerse)\n\nMATCH (l:Limerick)\nMATCH (mp:MaiguePoets)\nMATCH (i:Ireland)\nCREATE (l)-[:NAMED_AFTER]->(mp)\nCREATE (mp)-[:IS_PART_OF]->(i)\n\nMATCH (l:Limerick)\nMATCH (e:England)\nCREATE (l)-[:ORIGINATED_IN]->(e)\n\nMATCH (v:Verse)\nMATCH (s:Smyrna)\nCREATE (v)-[:MENTIONS]->(s)\n\nMATCH (v:Verse)\nMATCH (d:Detroit)\nCREATE (v)-[:MENTIONS]->(d)\n\nMATCH (sj:SaintJohn)\nMATCH (nb:NewBrunswick)\nCREATE (sj)-[:IS_IN]->(nb)\n\nMATCH (jc:JohnClarke)\nMATCH (l:Limerick)\nCREATE (jc)-[:PARODIED]->(l)\n\nMATCH (ehg:EzraHaberGlenn)\nMATCH (vt:VittorioDeSica)\nMATCH (bt:BicycleThieves)\nCREATE (ehg)-[:REVIEWED]->(vt)\nCREATE (vt)-[:DIRECTED]->(bt)\n\nMATCH (lm:LeighMercer)\nMATCH (l:Limerick)\nCREATE (lm)-[:PARODIED]->(l)\n```\n\nPlease note that these queries assume that you are using a Cypher-compatible graph database, such as Neo4j. Also, make sure to replace the placeholder text (e.g., `Limerick`, `Verse`, etc.) with appropriate labels or node properties that fit your specific use case.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 20,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 24,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 24,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 108.86576104164124
  },
  {
    "url": "https://en.wikipedia.org/wiki/List_of_Nobel_laureates_in_Physics",
    "queries": "Here are the Cypher queries to create a knowledge graph from the given text:\n```\n# Create nodes for entities\nCREATE (nobelPrize:Award {name: \"Nobel Prize\", type: \"Physics\"})\nCREATE (academy:Organization {name: \"Royal Swedish Academy of Sciences\"})\nCREATE (nobelFoundation:Organization {name: \"Nobel Foundation\"})\nCREATE (WilhelmConrad:Person {name: \"Wilhelm Conrad R\u00f6ntgen\", country: \"Germany\"})\nCREATE (JohnBardeen:Person {name: \"John Bardeen\"})\nCREATE (WilliamBragg:Person {name: \"William Lawrence Bragg\"})\nCREATE (Malala:Person {name: \"Malala Yousafzai\"})\nCREATE (ArthurAshkin:Person {name: \"Arthur Ashkin\"})\nCREATE (MarieCurie:Person {name: \"Marie Curie\"})\nCREATE (MariaGoeppert:Person {name: \"Maria Goeppert-Mayer\"})\nCREATE (Donna:Person {name: \"Donna Strickland\"})\nCREATE (AndreaGhez:Person {name: \"Andrea Ghez\"})\nCREATE (AnneLHuillier:Person {name: \"Anne L'Huillier\"})\n\n# Create relationships between entities\nMATCH (nobelPrize), (academy)\nMERGE (academy)-[:AWARDS {yearly: true}]->(nobelPrize)\n\nMATCH (nobelPrize), (nobelFoundation)\nMERGE (nobelFoundation)-[:ADMINISTERS]->(nobelPrize)\n\nMATCH (WilhelmConrad), (nobelPrize)\nMERGE (WilhelmConrad)-[:RECEIVED {year: 1901, amount: 150782}]->(nobelPrize)\n\nMATCH (JohnBardeen), (nobelPrize)\nMERGE (JohnBardeen)-[:RECEIVED {year: 1956}]->(nobelPrize)\nMERGE (JohnBardeen)-[:RECEIVED {year: 1972}]->(nobelPrize)\n\nMATCH (WilliamBragg), (nobelPrize)\nMERGE (WilliamBragg)-[:RECEIVED {year: 1915, age: 25}]->(nobelPrize)\n\nMATCH (Malala), (WilliamBragg)\nMERGE (Malala)-[:YOUNGER_THAN]->(WilliamBragg)\n\nMATCH (ArthurAshkin), (nobelPrize)\nMERGE (ArthurAshkin)-[:RECEIVED {year: 2018, age: 96}]->(nobelPrize)\n\nMATCH (MarieCurie), (nobelPrize)\nMERGE (MarieCurie)-[:RECEIVED {year: 1903, share: 0.25}]->(nobelPrize)\n\nMATCH (MariaGoeppert), (nobelPrize)\nMERGE (MariaGoeppert)-[:RECEIVED {year: 1963, share: 0.25}]->(nobelPrize)\n\nMATCH (Donna), (nobelPrize)\nMERGE (Donna)-[:RECEIVED {year: 2018, share: 0.25}]->(nobelPrize)\n\nMATCH (AndreaGhez), (nobelPrize)\nMERGE (AndreaGhez)-[:RECEIVED {year: 2020, share: 0.25}]->(nobelPrize)\n\nMATCH (AnneLHuillier), (nobelPrize)\nMERGE (AnneLHuillier)-[:RECEIVED {year: 2023, share: 0.33}]->(nobelPrize)\n\n# Create properties for the Nobel Prize node\nSET nobelPrize.established = 1895, nobelPrize.founder = \"Alfred Nobel\"\n\n# Create relationships for non-awarded years\nMATCH (nobelPrize)\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1916}]->()\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1931}]->()\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1934}]->()\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1940}]->()\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1941}]->()\nMERGE (nobelPrize)-[:NOT_AWARDED {year: 1942}]->()\n\n# Create a relationship for the 2020 study finding\nMATCH (nobelPrize), (particlePhysics:Discipline {name: \"Particle Physics\"}), (atomicPhysics:Discipline {name: \"Atomic Physics\"})\nMERGE (nobelPrize)-[:STUDY_FINDING {year: 2020}]->(particlePhysics)\nMERGE (nobelPrize)-[:STUDY_FINDING {year: 2020}]->(atomicPhysics)\n```\n\nThese queries create nodes for various entities (award, organizations, and people) and establish relationships between them, such as \"AWARDS\", \"ADMINISTERS\", \"RECEIVED\", \"YOUNGER_THAN\", and \"NOT_AWARDED\". Properties are also set for relevant information, such as the year, amount received, age, and share of the prize. The last part of the query creates relationships for the 2020 study finding, connecting the Nobel Prize to specific disciplines.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 14,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 23,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 23,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 130.69497203826904
  },
  {
    "url": "https://en.wikipedia.org/wiki/Ice_cream",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create entities\n\nCREATE (iceCream:Entity {name: 'Ice Cream', type: 'Dessert'})\nCREATE (milk:Entity {name: 'Milk', type: 'Dairy'})\nCREATE (cream:Entity {name: 'Cream', type: 'Dairy'})\nCREATE (sweetener:Entity {name: 'Sweetener'})\nCREATE (sugar:Entity {name: 'Sugar', type: 'Sweetener'})\nCREATE (cocoa:Entity {name: 'Cocoa', type: 'Spice'})\nCREATE (vanilla:Entity {name: 'Vanilla', type: 'Spice'})\nCREATE (strawberries:Entity {name: 'Strawberries', type: 'Fruit'})\nCREATE (peaches:Entity {name: 'Peaches', type: 'Fruit'})\nCREATE (foodColouring:Entity {name: 'Food Colouring'})\nCREATE (stabilizers:Entity {name: 'Stabilizers'})\nCREATE (air:Entity {name: 'Air'})\nCREATE (water:Entity {name: 'Water'})\nCREATE (liquidNitrogen:Entity {name: 'Liquid Nitrogen'})\nCREATE (semiSolidFoam:Entity {name: 'Semi-Solid Foam'})\nCREATE (waferCone:Entity {name: 'Wafer Cone', type: 'Container'})\nCREATE (cake:Entity {name: 'Cake', type: 'Dessert'})\nCREATE (pie:Entity {name: 'Pie', type: 'Dessert'})\nCREATE (iceCreamFloat:Entity {name: 'Ice Cream Float', type: 'Dessert'})\nCREATE (sundae:Entity {name: 'Sundae', type: 'Dess0ert'})\nCREATE (milkshake:Entity {name: 'Milkshake', type: 'Beverage'})\nCREATE (iceCreamCake:Entity {name: 'Ice Cream Cake', type: 'Dessert'})\nCREATE (bakedAlaska:Entity {name: 'Baked Alaska', type: 'Dessert'})\nCREATE (gelato:Entity {name: 'Gelato', type: 'Italian Ice Cream'})\nCREATE (frozenCustard:Entity {name: 'Frozen Custard', type: 'Ice Cream'})\nCREATE (softServe:Entity {namegrados: 'Soft Serve', type: 'Ice Cream'})\nCREATE (cowMilk:Entity {name: 'Cow's Milk', type: 'Dairy'})\nCREATE (goatMilk:Entity {name: 'Goat's Milk', type: 'Dairy'})\nCREATE (sheepMilk:Entity {name: 'Sheep's Milk', type: 'Dairy'})\nCREATE (soyMilk:Entity {name: 'Soy Milk', type: 'Milk Substitute'})\nCREATE (cashewMilk:Entity {name: 'Cashew Milk', type: 'Milk Substitute'})\nCREATE (coconutMilk:Entity {name: 'Coconut Milk', type: 'Milk Substitute'})\nCREATE (almondMilk:Entity {name: 'Almond Milk', type: 'Milk Substitute'})\nCREATE (tofu:Entity {name: 'Tofu', type: 'Soy Product'})\nCREATE (bananaNiceCream:Entity {name: 'Banana Nice Cream', type: 'Vegan Ice Cream'})\nCREATE (frozenYogurt:Entity {name: 'Frozen Yogurt', type: 'Dessert'})\nCREATE (froyo:Entity {name: 'Froyo', type: 'Frozen Yogurt'})\nCREATE (sorbet:Entity {name: 'Sorbet', type: 'Dessert'})\nCREATE (sherbet:Entity {name: 'Sherbet', type: 'Dessert'})\nCREATE (persia:Entity {name: 'Persia', type: 'Region'})\nCREATE (iran:Entity {name: 'Iran', type: 'Country'})\nCREATE (rome:Entity {name: 'Rome', type: 'Empire'})\nCREATE (mughalEmpire:Entity {name: 'Mughal Empire', type: 'Empire'})\nCREATE (india:Entity {name: 'India', type: 'Country'})\nCREATE (italy:Entity {name: 'Italy', type: 'Country'})\nCREATE (argentina:Entity {name: 'Argentina', type: 'Country'})\nCREATE (syria:Entity {name: 'Syria', type: 'Country'})\nCREATE (paris:Entity {name: 'Paris', type: 'City'})\nCREATE (japan:Entity {name: 'Japan', type: 'Country'})\nCREATE (kakigori:Entity {name: 'Kakigori', type: 'Japanese Dessert'})\nCREATE (heianPeriod:Entity {name: 'Heian Period', type: 'Historical Period'})\nCREATE (pillowBook:Entity {name: 'The Pillow Book', type: 'Literature'})\nCREATE (seishonagon:Entity {name: 'Sei Shonagon', type: 'Author'})\nCREATE (imperialCourt:Entity {name: 'Imperial Court', type: 'Institution'})\nCREATE (islamicGoldenAge:Entity {name: 'Islamic Golden Age', type: 'Historical Period'})\nCREATE (ibnAbuUsaybia:Entity {name: 'Ibn Abu Usaybia', type: 'Historian'})\nCREATE (ibnBakhtawayhi:Entity {name: 'Ibn Bakhtawayhi', type: 'Author'})\nCREATE (endothermicEffect:Entity {name: 'Endothermic Effect', type: 'Scientific Principle'})\nCREATE (salt:Entity {name: 'Salt', type: 'Mineral'})\nCREATE (delhi:Entity {name: 'Delhi', type: 'City'})\nCREATE (kulfi:Entity {name: 'Kulfi', type: 'Indian Dessert'})\nCREATE (europe:Entity {name: 'Europe', type: 'Continent'})\nCREATE (marcoPolo:Entity {name: 'Marco Polo', type: 'Explorer'})\nCREATE (china:Entity {name: 'China', type: 'Country'})\nCREATE (catherineDeMedici:Entity {name: 'Catherine de' Medici', type: 'Noble'})\nCREATE (dukeOfOrleans:Entity {name: 'Duke of Orleans', type: 'Noble'})\nCREATE (henryII:Entity {name: 'Henry II', type: 'Monarch'})\nCREATE (charlesI:Entity {name: 'Charles I', type: 'Monarch'})\nCREATE (jeanFargeon:Entity {name: 'Jean Fargeon', type: 'Editor'})\nCREATE (montpellier:Entity {name: 'Montpellier', type: 'City'})\nCREATE (francescoDeiColtelli:Entity {name: 'Francesco dei Coltelli', type: 'Entrepreneur'})\nCREATE (nicolasLemery:Entity {name: 'Nicolas Lemery', type: 'Author'})\nCREATE (antonioLatini:Entity {name: 'Antonio Latini', type: 'Author'})\nCREATE (francoisMassialot:Entity {name: 'Francois Massialot', type: 'Author'})\nCREATE (eliasAshmole:Entity {name: 'Elias Ashmole', type: 'Author'})\nCREATE (charlesII:Entity {name: 'Charles II', type: 'Monarch'})\nCREATE (maryEales:Entity {name: 'Mary Eales', type: 'Author'})\nCREATE (hannahGlasse:Entity {name: 'Hannah Glasse', type: 'Author'})\nCREATE (dominicoNegri:Entity {name: 'Domenico Negri', type: 'Confectioner'})\nCREATE (berkeleySquare:Entity {name: 'Berkeley Square', type: 'Location'})\nCREATE (london:Entity {name: 'London', type: 'City'})\nCREATE (frederickNutt:Entity {name: 'Frederick Nutt', type: 'Confectioner'})\nCREATE (northAmerica:Entity {name: 'North America', type: 'Continent'})\nCREATE (benFranklin:Entity {name: 'Ben Franklin', type: 'Founding Father'})\nCREATE (georgeWashington:Entity {name: 'George Washington', type: 'President'})\nCREATE (thomasJefferson:Entity {name: 'Thomas Jefferson', type: 'President'})\nCREATE (newYork:Entity {name: 'New York', type: 'City'})\nCREATE (chathamStreet:Entity {name: 'Chatham Street', type: 'Location'})\nCREATE (vanillaIceCream:Entity {name: 'Vanilla Ice Cream', type: 'Ice Cream Flavor'})\nCREATE (dolleyMadison:Entity {name: 'Dolley Madison', type: 'First Lady'})\nCREATE (jamesMadison:Entity {name: 'James Madison', type: 'President'})\nCREATE (agnesMarshall:Entity {name: 'Agnes Marshall', type: 'Inventor'})\nCREATE (america:Entity {name: 'America', type: 'Country'})\nCREATE (nancyJohnson:Entity {name: 'Nancy Johnson', type: 'Inventor'})\nCREATE (mediterranean:Entity {name: 'Mediterranean', type: 'Region'})\nCREATE (carloGatti:Entity {name: 'Carlo Gatti', type: 'Entrepreneur'})\nCREATE (charingCross:Entity {name: 'Charing Cross', type: 'Location'})\nCREATE (penny:Entity {name: 'Penny', type: 'Currency'})\nCREATE (iceHouse:Entity {name: 'Ice House', type: 'Storage'})\nCREATE (regentsCanal:Entity {name: 'Regent's Canal', type: 'Waterway'})\nCREATE (norway:Entity {name: 'Norway', type: 'Country'})\nCREATE (newZealand:Entity {name: 'New Zealand', type: 'Country'})\nCREATE (wellington:Entity {name: 'Wellington', type: 'City'})\nCREATE (matcha:Entity {name: 'Matcha', type: 'Flavor'})\nCREATE (asia:Entity {name: 'Asia', type: 'Continent'})\nCREATE (iceCreamSoda:Entity {name: 'Ice Cream Soda', type: 'Beverage'})\nCREATE (robertGreen:Entity {name: 'Robert Green', type: 'Inventor'})\nCREATE (iceCreamSundae:Entity {name: 'Ice Cream Sundae', type: 'Dessert'})\nCREATE (buffalo:Entity {name: 'Buffalo', type: 'City'})\nCREATE (twoRivers:Entity {name: 'Two Rivers', type: 'City'})\nCREATE (ithaca:Entity {name: 'Ithaca', type: 'City'})\nCREATE (evanston:Entity {name: 'Evanston', type: 'City'})\nCREATE (iceCreamCone:Entity {name: 'Ice Cream Cone', type: 'Dessert'})\nCREATE (bananaSplit:Entity {name: 'Banana Split', type: 'Dessert'})\nCREATE (dairyQueen:Entity {name: 'Dairy Queen', type: 'Restaurant Chain'})\nCREATE (carvel:Entity {name: 'Carvel', type: 'Restaurant Chain'})\nCREATE (tasteeFreez:Entity {name: 'Tastee-Freez', type: 'Restaurant Chain'})\nCREATE (gluten:Entity {name: 'Gluten', type: 'Food Additive'})\nCREATE (foodIntolerance:Entity {name: 'Food Intolerance', type: 'Medical Condition'})\nCREATE (benAndJerrys:Entity {name: 'Ben & Jerry's', type: 'Ice Cream Brand'})\nCREATE (chocolateShoppe:Entity {name: 'Chocolate Shoppe', type: 'Ice Cream Brand'})\nCREATE (haagenDazs:Entity {name: 'H\u00e4agen-Dazs', type: 'Ice Cream Brand'})\nCREATE (milkFat:Entity {name: 'Milk Fat', type: 'Dairy'})\nCREATE (milkProtein:Entity {name: 'Milk Protein', type: 'Dairy'})\n\n# Create relationships\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (milk:Entity {name: 'Milk'}), (cream:Entity {name: 'Cream'})\nCREATE (iceCream)-[:CONTAINS]->(milk)\nCREATE (iceCream)-[:CONTAINS]->(cream)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (sweetener:Entity {name: 'Sweetener'}), (sugar:Entity {name: 'Sugar'})\nCREATE (iceCream)-[:FLAVOURED_WITH]->(sweetener)\nCREATE (sweetener)-[:CONTAINS]->(sugar)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (cocoa:Entity {name: 'Cocoa'}), (vanilla:Entity {name: 'Vanilla'})\nCREATE (iceCream)-[:FLAVOURED_WITH]->(cocoa)\nCREATE (iceCream)-[:FLAVOURED_WITH]->(vanilla)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (strawberries:Entity {name: 'Strawberries'}), (peaches:Entity {name: 'Peaches'})\nCREATE (iceCream)-[:FLAVOURED_WITH]->(strawberries)\nCREATE (iceCream)-[:FLAVOURED_WITH]->(peaches)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (foodColouring:Entity {name: 'Food Colouring'}), (stabilizers:Entity {name: 'Stabilizers'})\nCREATE (iceCream)-[:MAY_CONTAIN]->(foodColouring)\nCREATE (iceCream)-[:MAY_CONTAIN]->(stabilizers)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (air:Entity {name: 'Air'}), (water:Entity {name: 'Water'})\nCREATE (iceCream)-[:MIXED_WITH]->(air)\nCREATE (iceCream)-[:COOLED_BELOW]->(water)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (liquidNitrogen:Entity {name: 'Liquid Nitrogen'}), (semiSolidFoam:Entity {name: 'Semi-Solid Foam'})\nCREATE (iceCream)-[:MADE_WITH]->(liquidNitrogen)\nCREATE (iceCream)-[:RESULTS_IN]->(semiSolidFoam)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (waferCone:Entity {name: 'Wafer Cone'}), (cake:Entity {name: 'Cake'})\nCREATE (iceCream)-[:SERVED_IN]->(waferCone)\nCREATE (iceCream)-[:SERVED_WITH]->(cake)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (pie:Entity {name: 'Pie'}), (iceCreamFloat:Entity {name: 'Ice Cream Float'})\nCREATE (iceCream)-[:SERVED_WITH]->(pie)\nCREATE (iceCream)-[:USED_IN]->(iceCreamFloat)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (sundae:Entity {name: 'Sundae'}), (milkshake:Entity {name: 'Milkshake'})\nCREATE (iceCream)-[:USED_IN]->(sundae)\nCREATE (iceCream)-[:USED_IN]->(milkshake)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (iceCreamCake:Entity {name: 'Ice Cream Cake'}), (bakedAlaska:Entity {name: 'Baked Alaska'})\nCREATE (iceCream)-[:USED_IN]->(iceCreamCake)\nCREATE (iceCream)-[:USED_IN]->(bakedAlaska)\n\nMATCH (gelato:Entity {name: 'Gelato'}), (iceCream:Entity {name: 'Ice Cream'})\nCREATE (gelato)-[:IS_A]->(iceCream)\n\nMATCH (frozenCustard:Entity {name: 'Frozen Custard'}), (iceCream:Entity {name: 'Ice Cream'})\nCREATE (frozenCustard)-[:IS_A]->(iceCream)\n\nMATCH (softServe:Entity {name: 'Soft Serve'}), (iceCream:Entity {name: 'Ice Cream'})\nCREATE (softServe)-[:IS_A]->(iceCream)\n\nMATCH (cowMilk:Entity {name: 'Cow's Milk'}), (goatMilk:Entity {name: 'Goat's Milk'}), (sheepMilk:Entity {name: 'Sheep's Milk'})\nCREATE (cowMilk)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (goatMilk)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (sheepMilk)-[:ALTERNATIVE_TO]->(iceCream)\n\nMATCH (soyMilk:Entity {name: 'Soy Milk'}), (cashewMilk:Entity {name: 'Cashew Milk'}), (coconutMilk:Entity {name: 'Coconut Milk'})\nCREATE (soyMilk)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (cashewMilk)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (coconutMilk)-[:ALTERNATIVE_TO]->(iceCream)\n\nMATCH (almondMilk:Entity {name: 'Almond Milk'}), (tofu:Entity {name: 'Tofu'}), (bananaNiceCream:Entity {name: 'Banana Nice Cream'})\nCREATE (almondMilk)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (tofu)-[:ALTERNATIVE_TO]->(iceCream)\nCREATE (bananaNiceCream)-[:ALTERNATIVE_TO]->(iceCream)\n\nMATCH (frozenYogurt:Entity {name: 'Frozen Yogurt'}), (froyo:Entity {name: 'Froyo'})\nCREATE (frozenYogurt)-[:ALSO_KNOWN_AS]->(froyo)\n\nMATCH (sorbet:Entity {name: 'Sorbet'}), (sherbet:Entity {name: 'Sherbet'})\nCREATE (sorbet)-[:DIFFERENT_FROM]->(iceCream)\nCREATE (sherbet)-[:DIFFERENT_FROM]->(iceCream)\n\nMATCH (persia:Entity {name: 'Persia'}), (iran:Entity {name: 'Iran'})\nCREATE (persia)-[:IS_LOCATED_IN]->(iran)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (persia:Entity {name: 'Persia'})\nCREATE (iceCream)-[:ORIGINATED_IN]->(persia)\n\nMATCH (rome:Entity {name: 'Rome'}), (iceCream:Entity {name: 'Ice Cream'})\nCREATE (rome)-[:ASSOCIATED_WITH]->(iceCream)\n\nMATCH (mughalEmpire:Entity {name: 'Mughal Empire'}), (india:Entity {name: 'India'})\nCREATE (mughalEmpire)-[:IS_LOCATED_IN]->(india)\n\nMATCH (iceCream:Entity {name: 'Ice Cream'}), (mughalEmpire:Entity {name: 'Mughal Empire'})\nCREATE (iceCream)-[:ASS",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 132,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 49,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 49,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 100.97330403327942
  },
  {
    "url": "https://en.wikipedia.org/wiki/Great_Wall_of_China",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Entity Nodes\n\nCREATE (china:Location {name: \"China\"})\nCREATE (eurasianSteppe:Location {name: \"Eurasian Steppe\"})\nCREATE (qinShiHuang:Person {name: \"Qin Shi Huang\"})\nCREATE (mingDynasty:Dynasty {name: \"Ming Dynasty\"})\nCREATE (qingDynasty:Dynasty {name: \"Qing Dynasty\"})\nCREATE (simaQian:Person {name: \"Sima Qian\"})\nCREATE (marcoPolo:Person {name: \"Marco Polo\"})\nCREATE (matteoRicci:Person {name: \"Matteo Ricci\"})\nCREATE (wuSangui:Person {name: \"Wu Sangui\"})\nCREATE (liZicheng:Person {name: \"Li Zicheng\"})\n\n# Create Relationship Types\n\nCREATE (builtFor:RelationshipType {name: \"BUILT_FOR\"})\nCREATE (builtBy:RelationshipType {name: \"BUILT_BY\"})\nCREATE (builtDuring:RelationshipType {name: \"BUILT_DURING\"})\nCREATE (referredToIn:RelationshipType {name: \"REFERRED_TO_IN\"})\nCREATE (referredToBy:RelationshipType {name: \"REFERRED_TO_BY\"})\nCREATE (locatedIn:RelationshipType {name: \"LOCATED_IN\"})\nCREATE (founderOf:RelationshipType {name: \"FOUNDER_OF\"})\nCREATE (capitalOf:RelationshipType {name: \"CAPITAL_OF\"})\nCREATE (hasPass:RelationshipType {name: \"HAS_PASS\"})\nCREATE (hasLength:RelationshipType {nameIntersect: \"HAS_LENGTH\"})\n\n# Create Relationships and Properties\n\nMATCH (c:Location {name: \"China\"})\nMATCH (es:Location {name: \"Eurasian Steppe\"})\nCREATE (c)-[:BUILT_FOR {purpose: \"Protection against nomadic groups\"}]->(es)\n\nMATCH (c)-[:BUILT_FOR]->(es)\nMATCH (qs:Person {name: \"Qin Shi Huang\"})\nCREATE (c)-[:BUILT_BY]->(qs)\nCREATE (c)-[:BUILT_DURING]->(qs)\n\nMATCH (c)-[:BUILT_FOR]->(es)\nMATCH (md:Dynasty {name: \"Ming Dynasty\"})\nCREATE (c)-[:BUILT_BY]->(md)\nCREATE (c)-[:BUILT_DURING]->(md)\n\nMATCH (qs:Person {name: \"Qin Shi Huang\"})\nMATCH (rq:Record {name: \"Records of the Grand Historian\"})\nCREATE (qs)-[:REFERRED_TO_IN]->(rq)\nCREATE (rq)-[:WRITTEN_BY]->(sq)\n\nMATCH (md:Dynasty {name: \"Ming Dynasty\"})\nMATCH (b:Book {name: \"Asia\"})\nCREATE (md)-[:REFERRED_TO_IN]->(b)\nCREATE (b)-[:WRITTEN_BY]->(jdb)\n\nMATCH (c:Location {name: \"China\"})\nMATCH (b:Book {name: \"Asia\"})\nCREATE (c)-[:REFERRED_TO_IN]->(b)\n\nMATCH (c:Location {name: \"China\"})\nMATCH (lp:Pass {name: \"Jiayu Pass\"})\nCREATE (c)-[:HAS_PASS]->(lp)\n\nMATCH (c:Location {name: \"China\"})\nCREATE (c)-[:HAS_LENGTH {length: 21196.18}]->(:Unit {name: \"Kilometers\"})\n\n# Create Relationship Chains\n\nMATCH (c:Location {name: \"China\"})\nMATCH (es:Location {name: \"Eurasian Steppe\"})\nMATCH (qs:Person {name: \"Qin Shi Huang\"})\nMATCH (md:Dynasty {name: \"Ming Dynasty\"})\nMATCH (b:Book {name: \"Asia\"})\nMATCH (jdb:Person {name: \"Jo\u00e3o de Barros\"})\nMATCH (lp:Pass {name: \"Jiayu Pass\"})\nCREATE (c)-[:BUILT_FOR {purpose: \"Protection against nomadic groups\"}]->(es)<-[:BUILT_BY]-(qs)\n<-[:BUILT_BY]-(md)\n<-[:REFERRED_TO_IN]-(b)\n<-[:WRITTEN_BY]-(jdb)\nCREATE (c)-[:HAS_PASS]->(lp)\n```\n\nPlease note that this is just a partial representation of the knowledge graph, and the full graph would be much larger and more interconnected. Also, some relationships and properties might need further refinement based on the context and your specific requirements.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 10,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 10,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 10,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 80.5520920753479
  },
  {
    "url": "https://en.wikipedia.org/wiki/Octopus",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n```\n# Create the nodes for the different entities\nCREATE (Octopus:Entity {name: 'Octopus', type: 'Animal'})\nCREATE (Mollusc:Entity {name: 'Mollusc', type: 'Animal'})\nCREATE (Cephalopoda:Entity {name: 'Cephalopoda', type: 'Class'})\nCREATE (Squid:Entity {name: 'Squid', type: 'Animal'})\nCREATE (Cuttlefish:Entity {name: 'Cuttlefish', type: 'Animal'})\nCREATE (Nautiloid:Entity {name: 'Nautiloid', type: 'Animal'})\nCREATE (Octopoda:Entity {name: 'Octopoda', type: 'Order'})\nCREATE (Evolution:Entity {name: 'Evolution', type: 'Section'})\nCREATE (OctopusSpecies:Entity {name: 'Octopus Species', type: 'Category'})\nCREATE (OctopusBehavior:Entity {name\n: 'Octopus Behavior', type: 'Category'})\nCREATE (OctopusHabitat:Entity {name: 'Octopus Habitat', type: 'Category'})\nCREATE (OctopusReproduction:Entity {name: 'Octopus Reproduction', type: 'Category'})\nCREATE (OctopusAnatomy:Entity {name: 'Octopus Anatomy', type: 'Category'})\nCREATE (OctopusSenses:Entity {name: 'Octopus Senses', type: 'Category'})\n\n# Create relationships between the entities\nMATCH (o:Entity {name: 'Octopus'}) MATCH (m:Entity {name: 'Mollusc'}) CREATE (o)-[:IS_A]->(m)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (c:Entity {name: 'Cephalopoda'}) CREATE (o)-[:IS_A]->(c)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (s:Entity {name: 'Squid'}) CREATE (o)-[:RELATED_TO]->(s)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (ct:Entity {name: 'Cuttlefish'}) CREATE (o)-[:RELATED_TO]->(ct)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (n:Entity {name: 'Nautiloid'}) CREATE (o)-[:RELATED_TO]->(n)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (op:Entity {name: 'Octopoda'}) CREATE (o)-[:BELONGS_TO]->(op)\nMATCH (e:Entity {name: 'Evolution'}) MATCH (op:Entity {name: 'Octopoda'}) CREATE (e)-[:MENTIONS]->(op)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (os:Entity {name: 'Octopus Species'}) CREATE (o)-[:HAS_SUBCATEGORY]->(os)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (ob:Entity {name: 'Octopus Behavior'}) CREATE (o)-[:HAS_SUBCATEGORY]->(ob)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (oh:Entity {name: 'Octopus Habitat'}) CREATE (o)-[:HAS_SUBCATEGORY]->(oh)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (or:Entity {name: 'Octopus Reproduction'}) CREATE (o)-[:HAS_SUBCATEGORY]->(or)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (oa:Entity {name: 'Octopus Anatomy'}) CREATE (o)-[:HAS_SUBCATEGORY]->(oa)\nMATCH (o:Entity {name: 'Octopus'}) MATCH (os:Entity {nameCoefficient: 0.728, n:Entity {name: 'Octopus Senses'}) CREATE (o)-[:HAS_SUBCATEGORY]->(ns)\n\n# Create additional nodes and relationships for mentioned species, behaviors, etc.\n// ...\n```\nPlease note that the above queries are just a starting point and may need adjustments based on the specific requirements and the structure of your knowledge graph. You might also need to create additional nodes and relationships for other entities mentioned in the text, such as specific octopus species, behaviors, habitats, etc.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 13,
      "Incorrectly Created Nodes": 1,
      "Correctly Created Relationships": 14,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 14,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 170.08881306648254
  },
  {
    "url": "https://en.wikipedia.org/wiki/Serbia",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Nodes for Countries, Cities, and Organizations\nCREATE (serbia:Country {name: \"Serbia\", officialName: \"Republic of Serbia\"})\nCREATE (hungary:Country {name: \"Hungary\"})\nCREATE (romania:Country {name: \"Romania\"})\nCREATE (bulgaria:Country {name: \"Bulgaria\"})\nCREATE (macedonia:Country {name: \"North Macedonia\"})\nCREATE (croatia:Country {name: \"Croatia\"})\nCREATE (bosnia:Country {name: \"Bosnia and Herzegovina\"})\nCREATE (montenegro:Country {name: \"Montenegro\"})\nCREATE (albania:Country {name: \"Albania\"})\nCREATE (kosovo:Country {name: \"Kosovo\"})\nCREATE (vojvodina:Region {name: \"Vojvodina\"})\nCREATE (belgrade:City {name: \"Belgrade\"})\nCREATE (nis:City {name: \"Ni\u0161\"})\nCREATE (un:Organization {name: \"UN\"})\nCREATE (coe:Organization {name: \"CoE\"})\nCREATE (osce:Organization {name: \"OSCE\"})\nCREATE (pfp:Organization {name: \"PfP\"})\nCREATE (bsec:Organization {name: \"BSEC\"})\nCREATE (cefta:Organization {name: \"CEFTA\"})\nCREATE (wto:Organization {name: \"WTO\"})\nCREATE (eu:Organization {name: \"European Union\"})\n\n# Create Relationships between Countries\nMATCH (s:Country {name: \"Serbia\"}) MATCH (h:Country {name: \"Hungary\"})\nCREATE (s)-[:BORDERS]->(h)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (r:Country {name: \"Romania\"})\nCREATE (s)-[:BORDERS]->(r)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (b:Country {name: \"Bulgaria\"})\nCREATE (s)-[:BORDERS]->(b)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (m:Country {name: \"North Macedonia\"})\nCREATE (s)-[:BORDERS]->(m)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (c:Country {name: \"Croatia\"})\nCREATE (s)-[:BORDERS]->(c)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (bo:Country {name: \"Bosnia and Herzegovina\"})\nCREATE (s)-[:BORDERS]->(bo)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (mo:Country {name: \"Montenegro\"})\nCREATE (s)-[:BORDERS]->(mo)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (k:Country {name: \"Kosovo\"})\nCREATE (s)-[:CLAIMS_BORDER_WITH]->(k)\n\n# Create Relationships between Serbia and Organizations\nMATCH (s:Country {name: \"Serbia\"}) MATCH (un:Organization {name: \"UN\"})\nCREATE (s)-[:MEMBER_OF]->(un)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (coe:Organization {name: \"CoE\"})\nCREATE (s)-[:MEMBER_OF]->(coe)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (osce:Organization {name: \"OSCE\"})\nCREATE (s)-[:MEMBER_OF]->(osce)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (pfp:Organization {name: \"PfP\"})\nCREATE (s)-[:MEMBER_OF]->(pfp)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (bsec:Organization {name: \"BSEC\"})\nCREATE (s)-[:MEMBER_OF]->(bsec)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (cefta:Organization {name: \"CEFTA\"})\nCREATE (s)-[:MEMBER_OF]->(cefta)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (wto:Organization {name: \"WTO\"})\nCREATE (s)-[:ACCESSING]->(wto)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (eu:Organization {name: \"European Union\"})\nCREATE (s)-[:NEGOTIATING_ACCESSION_WITH]->(eu)\n\n# Create Relationships between Regions and Cities\nMATCH (s:Country {name: \"Serbia\"}) MATCH (v:Region {name: \"Vojvodina\"})\nCREATE (s)-[:HAS_REGION]->(v)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (b:City {name: \"Belgrade\"})\nCREATE (s)-[:HAS_CAPITAL]->(b)\nMATCH (v:Region {name: \"Vojvodina\"}) MATCH (b:City {name: \"Belgrade\"})\nCREATE (v)-[:HAS_CITY]->(b)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (n:City {name: \"Ni\u0161\"})\nCREATE (s)-[:HAS_CITY]->(n)\n\n# Create Nodes for Historical Entities and Events\nCREATE (paleolithicAge:HistoricalEvent {name: \"Paleolithic Age\"})\nCREATE (slavicMigrations:HistoricalEvent {name: \"Slavic Migrations\"})\nCREATE (serbianKingdom:HistoricalEntity {name: \"Serbian Kingdom\"})\nCREATE (serbianEmpire:HistoricalEntity {name: \"Serbian Empire\"})\nCREATE (ottomanEmpire:HistoricalEntity {name: \"Ottoman Empire\"})\nCREATE (habsburgEmpire:HistoricalEntity {name: \"Habsburg Empire\"})\nCREATE (serbianRevolution:HistoricalEvent {name: \"Serbian Revolution\"})\nCREATE (worldWarI:HistoricalEvent {name: \"World War I\"})\nCREATE (worldWarII:HistoricalEvent {name: \"World War II\"})\nCREATE (yugoslavWars:HistoricalEvent {name: \"Yugoslav Wars\"})\nCREATE (serbiaMontenegro:HistoricalEntity {name: \"Serbia and Montenegro\"})\nCREATE (kosovoUnilateralDeclaration:HistoricalEvent {name: \"Kosovo Unilateral Declaration\"})\nCREATE (greatMigration1690:HistoricalEvent {name: \"Great Migration of 1690\"})\nCREATE (serbianUprising:HistoricalEvent {name: \"Serbian Uprising\"})\nCREATE (firstBalkanWar:HistoricalEvent {name: \"First Balkan War\"})\nCREATE (secondBalkanWar:HistoricalEvent {nameIntersect: \"Second Balkan War\"})\nCREATE (youngBosnia:Organization {name: \"Young Bosnia\"})\n\n# Create Relationships between Historical Entities and Events\nMATCH (s:Country {name: \"Serbia\"}) MATCH (p:HistoricalEvent {name: \"Paleolithic Age\"})\nCREATE (s)-[:POPULATED_SINCE]->(p)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sm:HistoricalEvent {name: \"Slavic Migrations\"})\nCREATE (s)-[:AFFECTED_BY]->(sm)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sk:HistoricalEntity {name: \"Serbian Kingdom\"})\nCREATE (s)-[:HAD_ENTITY]->(sk)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (se:HistoricalEntity {name: \"Serbian Empire\"})\nCREATE (s)-[:HAD_ENTITY]->(se)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (oe:HistoricalEntity {name: \"Ottoman Empire\"})\nCREATE (s)-[:CONQUERED_BY]->(oe)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (he:HistoricalEntity {name: \"Habsburg Empire\"})\nCREATE (s)-[:CONQUERED_BY]->(he)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sr:HistoricalEvent {name: \"Serbian Revolution\"})\nCREATE (s)-[:AFFECTED_BY]->(sr)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (wi:HistoricalEvent {name: \"World War I\"})\nCREATE (s)-[:AFFECTED_BY]->(wi)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (wii:HistoricalEvent {name: \"World War II\"})\nCREATE (s)-[:AFFECTED_BY]->(wii)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (yw:HistoricalEvent {name: \"Yugoslav Wars\"})\nCREATE (s)-[:AFFECTED_BY]->(yw)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sm:HistoricalEntity {name: \"Serbia and Montenegro\"})\nCREATE (s)-[:FORMED_UNION_WITH]->(sm)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (kud:HistoricalEvent {name: \"Kosovo Unilateral Declaration\"})\nCREATE (s)-[:AFFECTED_BY]->(kud)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (gm:HistoricalEvent {name: \"Great Migration of 1690\"})\nCREATE (s)-[:AFFECTED_BY]->(gm)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (su:HistoricalEvent {name: \"Serbian Uprising\"})\nCREATE (s)-[:AFFECTED_BY]->(su)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (fbw:HistoricalEvent {name: \"First Balkan War\"})\nCREATE (s)-[:PARTICIPATED_IN]->(fbw)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sbw:HistoricalEvent {name: \"Second Balkan War\"})\nCREATE (s)-[:PARTICIPATED_IN]->(sbw)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (yb:Organization {name: \"Young Bosnia\"})\nCREATE (s)-[:AFFECTED_BY]->(yb)\n\n# Create Nodes for People and Groups\nCREATE (constantineVII:Person {name: \"Constantine VII Porphyrogenitus\"})\nCREATE (stefanDusan:Person {name: \"Stefan Du\u0161an\"})\nCREATE (sava:Person {name: \"Sava\"})\nCREATE (arsenicIII:Person {name: \"Arsenic III Crnojevi\u0107\"})\nCREATE (alexander:Person {name: \"Alexander\"})\nCREATE (milo\u0161Obrenovi\u0107:Person {name: \"Milo\u0161 Obrenovi\u0107\"})\nCREATE (kara\u0111or\u0111ePetrovi\u0107:Person {name: \"Kara\u0111or\u0111e Petrovi\u0107\"})\nCREATE (gavriloPrincip:Person {name: \"Gavrilo Princip\"})\n\n# Create Relationships between People and Entities/Events\nMATCH (s:Country {name: \"Serbia\"}) MATCH (c:Person {name: \"Constantine VII\"})\nCREATE (s)-[:MENTIONED_BY]->(c)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sd:Person {name: \"Stefan Du\u0161an\"})\nCREATE (s)-[:RULED_BY]->(sd)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sa:Person {name: \"Sava\"})\nCREATE (s)-[:RULED_BY]->(sa)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (ac:Person {name: \"Arsenic III Crnojevi\u0107\"})\nCREATE (s)-[:LED_BY]->(ac)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (a:Person {name: \"Alexander\"})\nCREATE (s)-[:RULED_BY]->(a)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (mo:Person {name: \"Milo\u0161 Obrenovi\u0107\"})\nCREATE (s)-[:LED_BY]->(mo)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (kp:Person {name: \"Kara\u0111or\u0111e Petrovi\u0107\"})\nCREATE (s)-[:LED_BY]->(kp)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (gp:Person {name: \"Gavrilo Princip\"})\nCREATE (s)-[:AFFECTED_BY]->(gp)\n\n# Create Nodes for Populations and Demographics\nCREATE (serbianPopulation:Population {name: \"Serbian Population\"})\nCREATE (serbianInhabitants:Demographics {value: 6.6, unit: \"million\"})\nCREATE (belgradePopulation:Population {name: \"Belgrade Population\"})\n\n# Create Relationships between Serbia and Populations/Demographics\nMATCH (s:Country {name: \"Serbia\"}) MATCH (sp:Population {name: \"Serbian Population\"})\nCREATE (s)-[:HAS_POPULATION]->(sp)\nMATCH (s:Country {name: \"Serbia\"}) MATCH (inh:Demographics {value: 6.6, unit: \"million\"})\nCREATE (s)-[:HAS_INHABITANTS]->(inh)\nMATCH (b:City {name: \"Belgrade\"}) MATCH (bp:Population {name: \"Belgrade Population\"})\nCREATE (b)-[:HAS_POPULATION]->(bp)\n```\n\nPlease note that I've simplified the text to focus on the key relationships and entities. You can expand upon this by adding more nodes and relationships as needed.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 68,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 64,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 64,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 120.03239178657532
  }
]
