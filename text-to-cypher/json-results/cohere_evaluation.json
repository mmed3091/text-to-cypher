[
  {
    "url": "https://en.wikipedia.org/wiki/List_of_fictional_robots_and_androids",
    "queries": "Here are Cypher queries to create a knowledge graph based on the relationships between entities in the given text:\n```\n// Create a node for the concept of \"Fictional Robots and Androids\"\nCREATE (fictionalRobots {name: \"Fictional Robots and Androids\", description: \"Chronological list of robots, androids and gynoids across literature, television, and cinema.\"})\n\n// Create nodes for different mediums\nCREATE (literature {name: \"Literature\", type: \"Medium\"}),\n       (television {name: \"Television\", type: \"Medium\"}),\n       (cinema {name: \"Cinema\", type: \"Medium\"})\n\n// Create relationships between the \"Fictional Robots and Androids\" concept and the mediums\nMATCH (f) WHERE f.name = \"Fictional Robots and Androids\"\nMATCH (m) WHERE m.type = \"Medium\"\nFOREACH (medium IN CASE m.name WHEN \"Literature\" THEN [literature] WHEN \"Television\" THEN [television] WHEN \"Cinema\" THEN [cinema] END |\n  CREATE (f)-[:INCLUDES {description: \"Depictions of robots and androids\"}]->(medium)\n)\n\n// Create a node for the play \"R.U.R. (Rossum's Universal Robots)\" and its author\nCREATE (rur {name: \"R.U.R. (Rossum's Universal Robots)\", type: \"Play\"}),\n       (karelCapek {name: \"Karel \u010capek\", profession: \"Author\"})\n\n// Create relationships between the play, its author, and the \"Fictional Robots and Androids\" concept\nMATCH (f) WHERE f.name = \"Fictional Robots and Androids\"\nMATCH (r) WHERE r.name = \"R.U.R. (Rossum's Universal Robots)\"\nMATCH (a) WHERE a.name = \"Karel \u010capek\"\nCREATE (f)-[:ORIGINATES_FROM {description: \"Word 'robot' originates from this play\"}]->(r),\n       (r)-[:WRITTEN_BY]->(a)\n\n// Create a node for the concept of \"Humanlike and Mobile Form\"\nCREATE (humanlikeForm {name: \"Humanlike and Mobile Form\", description: \"Fictional computers with human-like appearance or mobility\"})\n\n// Create a relationship between the \"Fictional Robots and Androids\" concept and the \"Humanlike and Mobile Form\" concept\nMATCH (f) WHERE f.name = \"Fictional Robots and Androids\"\nMATCH (h) WHERE h.name = \"Humanlike and Mobile Form\"\nCREATE (f)-[:ENCAPSULATES {description: \"Includes all fictional computers with humanlike or mobile form\"}]->(h)\n```\n\nThese Cypher queries create a knowledge graph with nodes representing concepts like \"Fictional Robots and Androids,\" different mediums (literature, television, cinema), the play \"R.U.R.,\" its author Karel \u010capek, and the concept of \"Humanlike and Mobile Form.\" Relationships are established between these nodes to represent the connections described in the given text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 7,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 7,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 7,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 290.7725360393524
  },
  {
    "url": "https://en.wikipedia.org/wiki/Abacus",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create nodes for main entities\nCREATE (Abacus:Entity {name: 'Abacus', type: 'Calculating Tool'})\nCREATE (AncientNearEast:Region {name: 'Ancient Near East'})\nCREATE (Europe:Region {name: 'Europe'})\nCREATE (China:Region {name: 'China'})\nCREATE (Russia:Region {name: 'Russia'})\nCREATE (ArabicNumeralSystem:System {name: 'Arabic Numeral System'})\nCREATE (SlidableBeads:Feature {name: 'Slidable Beads'})\nCREATE (SumerianAbacus:Abacus {name: 'Sumerian Abacus', period: '2700-2300 BC'})\nCREATE (GreekAbacus:Abacus {name: 'Greek Abacus', period: '5th century BC'})\nCREATE (RomanAbacus:Abacus {name: 'Roman Abacus', period: '1st century AD'})\nCREATE (ChineseAbacus:Abacus {name: 'Chinese Abacus', type: 'Suanpan'})\nCREATE (JapaneseAbacus:Abacus {name: 'Japanese Abacus', type: 'Soroban'})\nCREATE (KoreanAbacus:Abacus {name: 'Korean Abacus', type: 'Jupan/Supan/Jusan'})\nCREATE (AztecAbacus:Abacus {name: 'Aztec Abacus', type: 'Nepohualtzintzin'})\n\n# Create relationships between entities\nMATCH a = (Abacus)\nMATCH b = (AncientNearEast)\nMATCH c = (Europe)\nMATCH d = (China)\nMATCH e = (Russia)\nCREATE (a)-[:USED_IN]->(b), (a)-[:USED_IN]->(c), (a)-[:USED_IN]->(d), (a)-[:USED_IN]->(e)\n\nMATCH a = (Abacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (SumerianAbacus)\nMATCH b = (AncientNearEast)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (GreekAbacus)\nMATCH b = (Europe)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (RomanAbacus)\nMATCH b = (Europe)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (ChineseAbacus)\nMATCH b = (China)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (JapaneseAbacus)\nMATCH b = (Japan)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (KoreanAbacus)\nMATCH b = (Korea)\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH a = (AztecAbacus)\nMATCH b = (AztecCulture)\nCREATE (a)-[:USED_IN]->(b)\n\n# Create relationships between abacus types and the Arabic numeral system\nMATCH a = (Abacus)\nMATCH b = (ArabicNumeralSystem)\nCREATE (a)-[:SUPERSEDED_BY]->(b)\n\n# Create relationships between abacus types and their features\nMATCH a = (GreekAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (RomanAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (ChineseAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (JapaneseAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (KoreanAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n\nMATCH a = (AztecAbacus)\nMATCH b = (SlidableBeads)\nCREATE (a)-[:HAS_FEATURE]->(b)\n```\n\nIn these queries, we first create nodes for the main entities, such as \"Abacus,\" \"Ancient Near East,\" \"Europe,\" and so on. Then, we establish relationships between these entities, indicating that the abacus was used in those regions. We also create relationships between the abacus types and their features, such as \"Slidable Beads.\" Finally, we indicate that the abacus was superseded by the Arabic numeral system.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 14,
      "Incorrectly Created Nodes": 1,
      "Correctly Created Relationships": 16,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 17,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 173.21560096740723
  },
  {
    "url": "https://en.wikipedia.org/wiki/Fulgurite",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Node creation\nCREATE (Fulgurites:Entity {name: 'Fulgurites', description: 'Natural tubes, clumps, or masses of sintered, vitrified, or fused soil, sand, rock, organic debris, and other sediments formed by lightning strikes.'})\nCREATE (Lechatelierite:Entity {name: 'Lechatelierite', description: 'A variety of mineraloid, an amorphous silica glass.'})\nCREATE (LichtenbergFigures:Entity {name: 'Lichtenberg Figures', description: 'Branching patterns produced on surfaces of insulators during dielectric breakdown by high-voltage discharges.'})\nCREATE (ShockedQuartz:Entity {name: 'Shocked Quartz', description: 'Polymorphism in SiO2 caused by high pressure and temperature.'})\nCREATE (Paleolightning:Entity {name: 'Paleolightning', description: 'Study of past lightning strikes through indicators such as fulgurites and lightning-induced remanent magnetization signatures.'})\nCREATE (Avicenna:Entity {name: 'Avicenna', description: 'Persian polymath who mentioned fulgurite tubes in the 11th century.'})\nCREATE (AlBiruni:Entity {name: 'Al-Biruni', description: 'Persian polymath who mentioned fulgurite tubes in the 11th century.'})\nCREATE (LeonhardDavidHermann:Entity {name: 'Leonhard David Hermann', description: 'Natural scientist who misinterpreted fulgurites as a result of subterrestrial fires.'})\nCREATE (CharlesDarwin:Entity {name: 'Charles Darwin', description: 'Famous naturalist who gave attention to fulgurites.'})\nCREATE (HoraceBenedictDeSaussure:Entity {name: 'Horace B\u00e9n\u00e9dict de Saussure', description: 'Natural scientist who studied fulgurites.'})\nCREATE (AlexanderVonHumboldt:Entity {name: 'Alexander von Humboldt', description: 'Naturalist who studied fulgurites.'})\nCREATE (Hentzen:Entity {name: 'Hentzen', description: 'Agriculturist who identified the formation of fulgurites by lightning strikes.'})\nCREATE (JohannKarlWilhelmVoigt:Entity {name: 'Johann Karl Wilhelm Voigt', description: 'Mineralogist and mining engineer who studied fulgurite formation.'})\nCREATE (KarlGustavFiedler:Entity {name: 'Karl Gustav Fiedler', description: 'Mineralogist and mining engineer who documented the fulgurite phenomenon.'})\n\n# Relationship creation\nMATCH (a:Entity {name: 'Fulgurites'}), (b:Entity {name: 'Lechatelierite'})\nCREATE (a)-[:COMPOSED_OF]->(b)\n\nMATCH (a:Entity {name: 'Fulgurites'}), (b:Entity {name:: 'Lichtenberg Figures'})\nCREATE (a)-[:STRUCTURALLY_SIMILAR_TO]->(b)\n\nMATCH (a:Entity {name: 'Fulgurites'}), (b:Entity {name: 'Shocked Quartz'})\nCREATE (a)-[:RESULTS_IN]->(b)\n\nMATCH (a:Entity {name: 'Fulgurites'}), (b:Entity {name: 'Paleolightning'})\nCREATE (a)-[:USED_IN]->(b)\n\nMATCH (a:Entity {name: 'Avicenna'}), (b:Entity {name: 'AlBiruni'}), (c:Entity {name: 'Fulgurites'})\nCREATE (a)-[:MENTIONED_BY]->(c)\nCREATE (b)-[:MENTIONED_BY]->(c)\n\nMATCH (a:Entity {name: 'LeonhardDavidHermann'}), (b:Entity {name: 'Fulgurites'})\nCREATE (a)-[:MISINTERPRETED_AS]->(b)\n\nMATCH (a:Entity {name: 'CharlesDarwin'}), (b:Entity {name: 'HoraceBenedictDeSaussure'}), (c:Entity {name: 'AlexanderVonHumboldt'}), (d:Entity {name: 'Fulgurites'})\nCREATE (a)-[:STUDIED]->(d)\nCREATE (b)-[:STUDIED]->(d)\nCREATE (c)-[:STUDIED]->(d)\n\nMATCH (a:Entity {name: 'Hentzen'}), (b:Entity {name: 'JohannKarlWilhelmVoigt'}), (c:Entity {name: 'Fulgurites'})\nCREATE (a)-[:IDENTIFIED_FORMATION_OF]->(c)\nCREATE (b)-[:IDENTIFIED_FORMATION_OF]->(c)\n\nMATCH (a:Entity {name: 'KarlGustavFiedler'}), (b:Entity {name: 'Fulgurites'})\nCREATE (a)-[:DOCUMENTED_PHENOMENON]->(b)\n```\n\nThese queries create nodes for the relevant entities mentioned in the text, such as \"Fulgurites,\" \"Lechatelierite,\" \"Lichtenberg Figures,\" etc. Relationships are established between these entities, such as \"COMPOSED_OF,\" \"STRUCTURALLY_SIMILAR_TO,\" \"RESULTS_IN,\" etc., to represent the connections and associations described in the text.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 14,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 9,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 9,
      "Incorrectly Labelled Relationships": 2
    },
    "execution_time_in_seconds": 148.52547478675842
  },
  {
    "url": "https://en.wikipedia.org/wiki/Albert_A._Michelson",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Person nodes\nCREATE (albert:Person {name: \"Albert Abraham Michelson\", alias: \"Albert Michelson\", birth_year: 1852, birth_place: \"Strelno, Posen, Kingdom of Prussia\", death_year: 1931, death_place: \"Pasadena, California, USA\", occupation: \"Physicist\", awards: [\"Nobel Prize in Physics\", \"Copley Medal\", \"Henry Draper Medal\", \"Gold Medal of the Royal Astronomical Society\"]})\nCREATE (ulysses:Person {name: \"Ulysses S. Grant\", occupation: \"President of the United States\"})\nCREATE (william:Person {name: \"William T. Sampson\", occupation: \"Commander\"})\nCREATE (margaret:Person {name: \"Margaret Hemingway\", occupation: \"Spouse of Albert Michelson\"})\nCREATE (edna:Person {name: \"Edna Stanton\", occupation: \"Spouse of Albert Michelson\"})\nCREATE (harriet:Person {name: \"Harriet Lane Levy\", occupation: \"Author\"})\nCREATE (miriam:Person {name: \"Miriam Michelson\", occupation: \"Novelist\"})\nCREATE (henriette:Person {name: \"Henriette Levy\", occupation: \"Aunt of Albert Michelson\"})\nCREATE (peter:Person {name: \"Peter Michelson\", occupation: \"Physicist\", relation: \"Great Nephew of Albert Michelson\"})\nCREATE (edward:Person {name: \"Edward Williams Morley\", alias: \"Edward Morley\", occupation: \"Physicist\"})\nCREATE (hendrik:Person {name: \"Hendrik Lorentz\", occupation: \"Physicist\"})\nCREATE (robert:Person {name: \"Robert Shankland\", occupation: \"Physicist\"})\nCREATE (dayton:Person {name: \"Dayton Miller\", occupation: \"Physicist\"})\nCREATE (francis:Person {name: \"Francis G. Pease\", occupation: \"Physicist\"})\nCREATE (fred:Person {name: \"Fred Pearson\", occupation: \"Physicist\"})\nCREATE (leon:Person {name %: \"L\u00e9on Foucault\", occupation: \"Physicist\"})\nCREATE (hippolyte:Person {name: \"Hippolyte Fizeau\", occupation: \"Physicist\"})\nCREATE (simon:Person {name: \"Simon Newcomb\", occupation: \"Director, Nautical Almanac Office\"})\nCREATE (arnold:Person {name: \"Arnold Sommerfeld\", occupation: \"Physicist\"})\n\n# Create Organization nodes\nCREATE (us_navy:Organization {name: \"United States Navy\", alias: \"US Navy\"})\nCREATE (us_naval_academy:Organization {name: \"US Naval Academy\", alias: \"Naval Academy\"})\nCREATE (case_western:Organization {name: \"Case Western Reserve University\", alias: \"Case School of Applied Science\"})\nCREATE (university_of_chicago:Organization {name: \"University of Chicago\"})\nCREATE (clark_university:Organization {name: \"Clark University\"})\nCREATE (berkeley:Organization {name: \"University of Berlin\"})\nCREATE (heidelberg:Organization {name: \"University of Heidelberg\"})\nCREATE (college_de_france:Organization {name: \"Coll\u00e8ge de France\"})\nCREATE (polytechnique:Organization {name: \"\u00c9cole Polytechnique\"})\nCREATE (navy_league:Organization {name: \"Navy League of the United States\"})\nCREATE (computer_measurement_group:Organization {name: \"Computer Measurement Group\"})\nCREATE (bomem_society:Organization {name: \"Coblentz Society\"})\nCREATE (american_philosophical_society:Organization {name: \"American Philosophical Society\"})\nCREATE (national_bureau_of_standards:Organization {name: \"National Bureau of Standards\"})\nCREATE (mount_wilson_observatory:Organization {name: \"Mount Wilson Observatory\"})\nCREATE (vlti:Organization {name: \"VLTI Observatory\"})\nCREATE (chara:Organization {name: \"CHARA Observatory\"})\nCREATE (npoi:Organization {name: \"NPOI Observatory\"})\nCREATE (royal_society:Organization {name: \"Royal Society\"})\nCREATE (national_academy_of_sciences:Organization {name: \"National Academy of Sciences\"})\nCREATE (american_physical_society:Organization {name: \"American Physical Society\"})\nCREATE (american_association:Organization {name: \"American Association for the Advancement of Science\"})\nCREATE (new_beast_theater:Organization {name: \"New Beast Theater Works\"})\nCREATE (high_concept_labs:Organization {name: \"High Concept Laboratories\"})\n\n# Create Location nodes\nCREATE (strelno:Location {name: \"Strelno\", alias: \"Strzelno\", type: \"City\", contained_in: \"Posen, Kingdom of Prussia\"})\nCREATE (prussia:Location {name: \"Kingdom of Prussia\", type: \"Kingdom\"})\nCREATE (california:Location {name: \"California, USA\", type: \"State\"})\nCREATE (nevada:Location {name: \"Nevada, USA\", type: \"State\"})\nCREATE (san_francisco:Location {name: \"San Francisco\", type: \"City\", contained_in: \"California, USA\"})\nCREATE (murphys_camp:Location {name: \"Murphys Camp\", type: \"City\", contained_in: \"California, USA\"})\nCREATE (virginia_city:Location {name: \"Virginia City\", type: \"City\", contained_in: \"Nevada, USA\"})\nCREATE (paris:Location {name: \"Paris\", type: \"City\", contained_in: \"France\"})\nCREATE (washington_dc:Location {name: \"Washington DC\", type: \"City\", contained_in: \"USA\"})\nCREATE (worcester:Location {name: \"Worcester\", type: \"City\", contained_in: \"Massachusetts, USA\"})\nCREATE (massachusetts:Location {name: \"Massachusetts, USA\", type: \"State\"})\nCREATE (cleveland:Location {name: \"Cleveland\", type: \"City\", contained_in: \"Ohio, USA\"})\nCREATE (ohio:Location {name: \"Ohio, USA\", type: \"State\"})\nCREATE (chicago:Location {name: \"Chicago\", type: \"City\", contained_in: \"Illinois, USA\"})\nCREATE (illinois:Location {name: \"Illinois, USA\", type: \"State\"})\nCREATE (france:Location {name: \"France\", type: \"Country\"})\nCREATE (germany:Location {name: \"Germany\", type: \"Country\"})\n\n# Create Award nodes\nCREATE (nobel_prize:Award {name: \"Nobel Prize in Physics\"})\nCREATE (copley_medal:Award {name: \"Copley Medal\"})\nCREATE (henry_draper_medal:Award {name: \"Henry Draper Medal\"})\nCREATE (gold_medal:Award {name\n: \"Gold Medal of the Royal Astronomical Society\"})\n\n# Create Work nodes\nCREATE (michelson_morley_experiment:Work {name: \"Michelson-Morley Experiment\"})\nCREATE (speed_of_light_measurement:Work {name: \"Speed of Light Measurement\"})\nCREATE (light_measurement:Work {name: \"Light Measurement\"})\nCREATE (interferometer_development:Work {name: \"Interferometer Development\"})\nCREATE (astronomical_interferometry:Work {name: \"Astronomical Interferometry\"})\nCREATE (stellar_diameter_measurement:Work {name: \"Stellar Diameter Measurement\"})\nCREATE (stellar_separation_measurement:Work {name: \"Stellar Separation Measurement\"})\nCREATE (harmonic_analyzer_invention:Work {name: \"Harmonic Analyzer Invention\"})\nCREATE (fourier_series_coefficient_computation:Work {name: \"Fourier Series Coefficient Computation\"})\nCREATE (bonanza:Work {name: \"Bonanza\", type: \"TV Series\"})\nCREATE (semi_opera:Work {name: \"Semi-Opera about Albert Michelson\"})\n\n# Create Relationship between Person and Organization\nMATCH (a:Person), (b:Organization)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"US Navy\"\nCREATE (a)-[:AFFILIATED_WITH]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"US Naval Academy\"\nCREATE (a)-[:EDUCATED_AT]->(b)\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Case Western Reserve University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"University of Chicago\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Clark University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"William\" AND b.name = \"US Navy\"\nCREATE (a)-[:AFFILIATED_WITH]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Margaret\" AND b.name = \"US Navy\"\nCREATE (a)-[:SPOUSE_OF]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Edna\" AND b.name = \"US Navy\"\nCREATE (a)-[:SPOUSE_OF]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Harriet\" AND b.name = \"US Naval Academy\"\nCREATE (a)-[:EDUCATED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Miriam\" AND b.name = \"US Naval Academy\"\nCREATE (a)-[:EDUCATED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Henriette\" AND b.name = \"US Naval Academy\"\nCREATE (a)-[:EDUCATED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Peter\" AND b.name = \"US Navy\"\nCREATE (a)-[:AFFILIATED_WITH]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Edward\" AND b.name = \"Western Reserve University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Hendrik\" AND b.name = \"University of Leiden\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Robert\" AND b.name = \"Case Western Reserve University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Dayton\" AND b.name = \"Case School of Applied Science\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Francis\" AND b.name = \"Mount Wilson Observatory\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Fred\" AND b.name = \"Mount Wilson Observatory\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Leon\" AND b.name = \"French Academy of Sciences\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Hippolyte\" AND b.name = \"French Academy of Sciences\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Simon\" AND b.name = \"Nautical Almanac Office\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Organization)\nWHERE a.name CONTAINS \"Arnold\" AND b.name = \"Ludwig Maximilian University of Munich\"\nCREATE (a)-[:WORKED_AT]->(b)\n\n# Create Relationship between Person and Location\nMATCH (a:Person), (b:Location)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Strelno\"\nCREATE (a)-[:BORN_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Pasadena\"\nCREATE (a)-[:DIED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Margaret\" AND b.name = \"New York\"\nCREATE (a)-[:LIVED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Edna\" AND b.name = \"Chicago\"\nCREATE (a)-[:LIVED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Harriet\" AND b.name = \"San Francisco\"\nCREATE (a)-[:LIVED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Miriam\" AND b.name = \"San Francisco\"\nCREATE (a)-[:LIVED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Henriette\" AND b.name = \"San Francisco\"\nCREATE (a)-[:LIVED_IN]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Peter\" AND b.name = \"Stanford University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Edward\" AND b.name = \"Cleveland\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Hendrik\" AND b.name = \"Leiden\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Robert\" AND b.name = \"Stanford University\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Dayton\" AND b.name = \"Cleveland\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Francis\" AND b.name = \"Pasadena\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Fred\" AND b.name = \"Pasadena\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Leon\" AND b.name = \"Paris\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Hippolyte\" AND b.name = \"Paris\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Simon\" AND b.name = \"Washington DC\"\nCREATE (a)-[:WORKED_AT]->(b)\n\nMATCH (a:Person), (b:Location)\nWHERE a.name CONTAINS \"Arnold\" AND b.name = \"Munich\"\nCREATE (a)-[:WORKED_AT]->(b)\n\n# Create Relationship between Person and Award\nMATCH (a:Person), (b:Award)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Nobel Prize in Physics\"\nCREATE (a)-[:RECEIVED]->(b)\n\nMATCH (a:Person), (b:Award)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Copley Medal\"\nCREATE (a)-[:RECEIVED]->(b)\n\nMATCH (a:Person), (b:Award)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Henry Draper Medal\"\nCREATE (a)-[:RECEIVED]->(b)\n\nMATCH (a:Person), (b:Award)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Gold Medal of the Royal Astronomical Society\"\nCREATE (a)-[:RECEIVED]->(b)\n\n# Create Relationship between Person and Work\nMATCH (a:Person), (b:Work)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Michelson-Morley Experiment\"\nCREATE (a)-[:PERFORMED]->(b)\n\nMATCH (a:Person), (b:Work)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Speed of Light Measurement\"\nCREATE (a)-[:PERFORMED]->(b)\n\nMATCH (a:Person), (b:Work)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Light Measurement\"\nCREATE (a)-[:INTERESTED_IN]->(b)\n\nMATCH (a:Person), (b:Work)\nWHERE a.name = \"Albert Abraham Michelson\" AND b.name = \"Inter",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 48,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 75,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 75,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 130.15420794487
  },
  {
    "url": "https://en.wikipedia.org/wiki/History_of_the_bicycle",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create entities for different types of vehicles and people\nCREATE (GermanDraisine:Vehicle {name: \"German Draisine\", type: \"Bicycle\"})\nCREATE (PennyFarthing:Vehicle {name: \"Penny Farthing\", type: \"Bicycle\"})\nCREATE (Celerifere:Vehicle {name: \"C\u00e9l\u00e9rif\u00e8re\", type: \"Two-wheeled vehicle\"})\nCREATE (RikushuHonsha:Vehicle {name: \"Rikushu-honsha\", type: \"Tricycle\"})\nCREATE (Laufmaschine:Vehicle {name: \"Laufmaschine\", type: \"Running Machine\"})\nCREATE (Velocipede:Vehicle {name: \"Velocipede\", type: \"Two-wheeled vehicle\"})\nCREATE (DandyHorse:Vehicle {name: \"Dandy Horse\", type: \"Hobby Horse\"})\nCREATE (KarlVonDrais:Person {name: \"Karl von Drais\", occupation: \"Inventor\"})\nCREATE (DenisJohnson:Person {name: \"Denis Johnson\", occupation: \"Cartwright\"})\nCREATE (JohnKeats:Person {name: \"John Keats\", occupation: \"Poet\"})\nCREATE (KirkpatrickMacmillan:Person {name: \"Kirkpatrick Macmillan\", occupation: \"Blacksmith\"})\nCREATE (GavinDalzell:Person {name: \"Gavin Dalzell\"})\nCREATE (ThomasMcCall:Person {name: \"Thomas McCall\"})\nCREATE (PhilippMoritzFischer:Person {name: \"Philipp Moritz Fischer\"})\nCREATE (ErnestMichaux:Person {name: \"Ernest Michaux\", occupation: \"Metalworker\"})\nCREATE (PierreLallement:Person {name: \"Pierre Lallement\"})\nCREATE (AimeOlivier:Person {name: \"Aim\u00e9 Olivier\"})\nCREATE (ReneOlivier:Person {name: \"Ren\u00e9 Olivier\"})\nCREATE (GeorgesDeLaBouglise:Person {name: \"Georges de la Bouglise\"})\nCREATE (PierreMichaux:Person {name: \"Pierre Michaux\", occupation: \"Blacksmith\"})\nCREATE (EugeneMeyer:Person {name: \"Eug\u00e8ne Meyer\"})\nCREATE (JamesStarley:Person {name: \"James Starley\"})\nCREATE (AlbertAugustusPope:Person {name: \"Albert Augustus Pope\"})\n\n# Create relationships between vehicles and people\nMATCH (gd:Vehicle {name: \"German Draisine\"})\nMATCH (kvd:Person {name: \"Karl von Drais\"})\nCREATE (gd)-[:INVENTED_BY]->(kvd)\n\nMATCH (pf:Vehicle {name: \"Penny Farthing\"})\nCREATE (pf)-[:DESCRIBED_AS]->(pf)\n\nMATCH (c:Vehicle {name: \"C\u00e9l\u00e9rif\u00e8re\"})\nCREATE (c)-[:DEVELOPED_BY]->(cd)\nCREATE (c)-[:DEMONSTRATED_BY]->(cd)\n\nMATCH (rh:Vehicle {name: \"Rikushu-honsha\"})\nMATCH (ht:Person {name: \"Hiraishi Kuheiji Tokimitsu\"})\nCREATE (rh)-[:DESCRIBED_BY]->(ht)\n\nMATCH (lm:Vehicle {name: \"Laufmaschine\"})\nMATCH (kvd:Person {name: \"Karl von Drais\"})\nCREATE (lm)-[:INVENTED_BY]->(kvd)\n\nMATCH (v:Vehicle {name: \"Velocipede\"})\nMATCH (dj:Person {name: \"Denis Johnson\"})\nCREATE (v)-[:SOLD_BY]->(dj)\n\nMATCH (dh:Vehicle {name: \"Dandy Horse\"})\nCREATE (dh)-[:NICKNAMED_AS]->(dh)\n\nMATCH (kvd:Person {name: \"Karl von Drais\"})\nCREATE (kvd)-[:PATENTED]->(lm)\n\nMATCH (dj:Person {name: \"Denis Johnson\"})\nCREATE (dj)-[:MARKETED]->(v)\n\nMATCH (jk:Person {name: \"John Keats\"})\nCREATE (jk)-[:REFERRED_TO]->(dh)\n\nMATCH (km:Person {name: \"Kirkpatrick Macmillan\"})\nCREATE (km)-[:ASSOCIATED_WITH]->(v)\n\nMATCH (gd:Vehicle {name: \"German Draisine\"})\nMATCH (km:Person {name: \"Kirkpatrick Macmillan\"})\nCREATE (gd)-[:INSPIRED]->(km)\n\nMATCH (tb:Person {name: \"Thomas McCall\"})\nCREATE (tb)-[:PRODUCED_BY]->(tb)\n\nMATCH (pmf:Person {name: \"Philipp Moritz Fischer\"})\nCREATE (pmf)-[:INVENTED]->(pc)\n\nMATCH (em:Person {name: \"Ernest Michaux\"})\nCREATE (em)-[:ATTACHED]->(p)\n\nMATCH (pl:Person {name: \"Pierre Lallement\"})\nCREATE (pl)-[:PATENTED]->(pb)\nCREATE (pl)-[:INSPIRED_BY]->(v)\n\nMATCH (ao:Person {name: \"Aim\u00e9 Olivier\"})\nMATCH (ro:Person {name: \"Ren\u00e9 Olivier\"})\nMATCH (gdlb:Person {name: \"Georges de la Bouglise\"})\nMATCH (pm:Person {name: \"Pierre Michaux\"})\nCREATE (ao)-[:FORMED_PARTNERSHIP_WITH]->(ro)\nCREATE (ao)-[:FORMED_PARTNERSHIP_WITH]->(gdlb)\nCREATE (ao)-[:FORMED_PARTNERSHIP_WITH]->(pm)\nCREATE (ro)-[:FORMED_PARTNERSHIP_WITH]->(ao)\nCREATE (ro)-[:FORMED_PARTNERSHIP_WITH]->(gdlb)\nCREATE (ro)-[:FORMED_PARTNERSHIP_WITH]->(pm)\nCREATE (gdlb)-[:FORMED_PARTNERSHIP_WITH]->(ao)\nCREATE (gdlb)-[:FORMED_PARTNERSHIP_WITH]->(ro)\nCREATE (gdlb)-[:FORMED_PARTNERSHIP_WITH]->(pm)\nCREATE (pm)-[:FORMED_PARTNERSHIP_WITH]->(ao)\nCREATE (pm)-[:FORMED_PARTNERSHIP_WITH]->(ro)\nCREATE (pm)-[:FORMED_PARTNERSHIP_WITH]->(gdlb)\n\nMATCH (em:Person {name: \"Eug\u00e8ne Meyer\"})\nCREATE (em)-[:INVENTED]->(wsw)\nCREATE (em)-[:PRODUCED]->(cbd)\n\nMATCH (js:Person {name: \"James Starley\"})\nCREATE (js)-[:ADDED]->(ts)\nCREATE (js)-[:ADDED]->(ms)\n\nMATCH (aap:Person {name: \"Albert Augustus Pope\"})\nCREATE (aap)-[:INTRODUCED]->(m)\nCREATE (aap)-[:INTRODUCED]->(mp)\nCREATE (aap)-[:ADVERTISED_FOR]->(b)\nCREATE (aap)-[:LITIGATED_FOR]->(c)\n```\n\nNote that I've only included relationships between vehicles and people mentioned in the text, and some relationships may be simplified or generalized. You can further expand and refine the knowledge graph based on your specific requirements and the context of the text.",
    "summary": {
      "Syntax Errors": 11,
      "Correctly Created Nodes": 21,
      "Incorrectly Created Nodes": 2,
      "Correctly Created Relationships": 5,
      "Incorrectly Created Relationships": 12,
      "Correctly Labelled Relationships": 4,
      "Incorrectly Labelled Relationships": 13
    },
    "execution_time_in_seconds": 103.4320080280304
  },
  {
    "url": "https://en.wikipedia.org/wiki/Battle_of_the_Boyne",
    "queries": "Here are the Cypher queries to create a knowledge graph from the given text:\n\n```\n// Create entities\n\nMERGE (theBattleOfTheBoyne:Event {name: 'Battle of the Boyne'})\nMERGE (kingJamesII:Person {name: 'King James II'})\nMERGE (kingWilliamIII:Person {name: 'King William III'})\nMERGE (queenMaryII:Person {name: 'Queen Mary II'})\nMERGE (kingJamesVIIScotland:Person {name: 'King James VII of Scotland'})\nMERGE (dukeOfSchomberg:Person {name: 'Duke of Schomberg'})\nMERGE (sirJamesFitzEdmondCotter:Person {name: 'Sir James Fitz Edmond Cotter'})\nMERGE (richardTalbot:Person {name: 'Richard Talbot'})\nMERGE (earlOfTyrconnel:Person {namerake: 'Earl of Tyrconnel'})\nMERGE (generalLauzun:Person {name: 'General Lauzun'})\nMERGE (meinhardt:Person {name: 'Meinhardt'})\nMERGE (neilONeill:Person {name: 'Neil O'Neill'})\nMERGE (jamesFitzJames:Person {name: 'James FitzJames'})\nMERGE (dukeOfBerwick:Person {name: 'Duke of Berwick'})\nMERGE (solms:Person {name: 'Solms'})\nMERGE (wurtemburg:Person {name: 'Wurttemberg'})\nMERGE (godertDeGinkel:Person {name: 'Godert de Ginkel'})\nMERGE (constantijnHuygensJr:Person {name: 'Constantijn Huygens Jr.'})\nMERGE (patrickSarsfield:Person {name: 'Patrick Sarsfield'})\nMERGE (bonnieDundee:Person {name: 'Bonnie Dundee'})\n\n// Create relationships\n\nMATCH (theBattleOfTheBoyne), (kingJamesII)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(kingJamesII)\n\nMATCH (theBattleOfTheBoyne), (kingWilliamIII)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(kingWilliamIII)\n\nMATCH (kingWilliamIII), (queenMaryII)\nMERGE (kingWilliamIII)-[:SPOUSE]-(queenMaryII)\n\nMATCH (kingJamesII), (kingJamesVIIScotland)\nMERGE (kingJamesII)-[:SAME_AS]-(kingJamesVIIScotland)\n\nMATCH (theBattleOfTheBoyne), (dukeOfSchomberg)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(dukeOfSchomberg)\n\nMATCH (theBattleOfTheBoyne), (sirJamesFitzEdmondCotter)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(sirJamesFitzEdmondCotter)\n\nMATCH (theBattleOfTheBoyne), (richardTalbot)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(richardTalbot)\n\nMATCH (theBattleOfTheBoyne), (earlOfTyrconnel)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(earlOfTyrconnel)\n\nMATCH (theBattleOfTheBoyne), (generalLauzun)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(generalLauzun)\n\nMATCH (theBattleOfTheBoyne), (meinhardt)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(meinhardt)\n\nMATCH (theBattleOfTheBoyne), (neilONeill)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(neilONeill)\n\nMATCH (theBattleOfTheBoyne), (jamesFitzJames)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(jamesFitzJames)\n\nMATCH (theBattleOfTheBoyne), (dukeOfBerwick)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(dukeOfBerwick)\n\nMATCH (theBattleOfTheBoyne), (solms)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(solms)\n\nMATCH (theBattleOfTheBoyne), (wurtemburg)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(wurtemburg)\n\nMATCH (theBattleOfTheBoyne), (godertDeGinkel)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(godertDeGinkel)\n\nMATCH (theBattleOfTheBoyne), (constantijnHuygensJr)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(constantijnHuygensJr)\n\nMATCH (theBattleOfTheBoyne), (patrickSarsfield)\nMERGE (theBattleOfTheBoyne)<-[:INVOLVED]-(patrickSarsfield)\n\nMATCH (bonnieDundee), (kingJamesII)\nMERGE (bonnieDundee)-[:SUPPORTED]-(kingJamesII)\n\n// Create locations\n\nMERGE (ireland:Location {name: 'Ireland'})\nMERGE (drogheda:Location {name: 'Drogheda'})\nMERGE (kingdomOfIreland:Location {name: 'Kingdom of Ireland'})\nMERGE (republicOfIreland:Location {name: 'Republic of Ireland'})\nMERGE (bangor:Location {name: 'Bangor'})\nMERGE (louth:Location {name: 'County Louth'})\nMERGE (donore:Location {name: 'Donore'})\nMERGE (roughgrange:Location {name: 'Roughgrange'})\nMERGE (naul:Location {name: 'Naul'})\nMERGE (oldbridge:Location {name: 'Oldbridge'})\nMERGE (dublin:Location {name: 'Dublin'})\nMERGE (france:Location {name: 'France'})\nMERGE (limerick:Location {name: 'Limerick'})\nMERGE (derry:Location {name: 'Derry'})\nMERGE (enniskillen:Location {name: 'Enniskillen'})\nMERGE (countyFermanagh:Location {name: 'County Fermanagh'})\nMERGE (duncannon:Location {name: 'Duncannon'})\nMERGE (shannon:Location {name: 'River Shannon'})\nMERGE (nanny:Location {name: 'River Nanny'})\nMERGE (duleek:Location {name: 'Duleek'})\nMERGE (scotland:Location {name: 'Scotland'})\nMERGE (england:Location {name: 'England'})\nMERGE (hoylake:Location {name: 'Hoylake'})\nMERGE (cheshire:Location {name: 'Cheshire'})\nMERGE (carrickfergus:Location {name: 'Carrickfergus'})\nMERGE (countyAntrim:Location {name: 'County Antrim'})\nMERGE (whitehouse:Location {name: 'Whitehouse'})\nMERGE (belfast:Location {name: 'Belfast'})\nMERGE (loughbrickland:Location {name: 'Loughbrickland'})\nMERGE (killiecrankie:Location {nameCoefficient: 'Killiecrankie'})\n\n// Create dates\n\nMERGE (july1690:Date {value: '1 July 1690'})\nMERGE (october1691:Date {value: 'October 1691'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June 1690'})\nMERGE (june301690:Date {value: '30 June 1690'})\nMERGE (july11690:Date {value: '11 July 1690'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690OldStyle:Date {value: '1 July 1690 O.S.'})\nMERGE (june141690OldStyle:Date {value: '14 June O.S.'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (july1690OldStyle:Date {value: '1 July O.S.'})\nMERGE (june291690:Date {value: '29 June'})\nMERGE (june301690:Date {value: '30 June'})\nMERGE (july11690:Date {value: '11 July'})\nMERGE (july1691:Date {value: '1691'})\nMERGE (july1689:Date {value: '1689'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June'})\nMERGE (june1690:Date {value: 'June'})\nMERGE (june14:Date {value: '14 June'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690:Date {value: 'July'})\nMERGE (june1690:Date {value: 'June'})\nMERGE (june14:Date {value: '14 June'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690:Date {value: 'July'})\nMERGE (june1690:Date {value: 'June'})\nMERGE (june14:Date {value: '14 June'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June 1690'})\nMERGE (june301690:Date {value: '30 June 1690'})\nMERGE (july11690:Date {value: '11 July 1690'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690OldStyle:Date {value: '1 July O.S.'})\nMERGE (june141690OldStyle:Date {value: '14 June O.S.'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (june1690:Date {valueMultiplier: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June 1690'})\nMERGE (june301690:Date {value: '30 June 1690'})\nMERGE (july11690:Date {value: '11 July 1690'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690OldStyle:Date {value: '1 July O.S.'})\nMERGE (june141690OldStyle:Date {value: '14 June O.S.'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June'})\nMERGE (june301690:Date {value: '30 June'})\nMERGE (july11690:Date {value: '11 July'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690OldStyle:Date {value: '1 July O.S.'})\nMERGE (june141690OldStyle:Date {value: '14 June O.S.'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June'})\nMERGE (june301690:Date {value: '30 June'})\nMERGE (july11690:Date {value: '11 July'})\nMERGE (july12:Date {value: '12 July'})\nMERGE (july1690OldStyle:Date {value: '1 July O.S.'})\nMERGE (june141690OldStyle:Date {value: '14 June O.S.'})\nMERGE (june1689:Date {value: '1689'})\nMERGE (june1685:Date {value: '1685'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june:Date {value: 'June'})\nMERGE (july:Date {value: 'July'})\nMERGE (october:Date {value: 'October'})\nMERGE (july1:Date {value: '1 July'})\nMERGE (july1690:Date {value: 'July 1690'})\nMERGE (june1690:Date {value: 'June 1690'})\nMERGE (june141690:Date {value: '14 June 1690'})\nMERGE (june291690:Date {value: '29 June'})\nMERGE (june301690:Date {value: '30 June'})\nMERGE (",
    "summary": {
      "Syntax Errors": 4,
      "Correctly Created Nodes": 40,
      "Incorrectly Created Nodes": 4,
      "Correctly Created Relationships": 21,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 21,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 106.0097279548645
  },
  {
    "url": "https://en.wikipedia.org/wiki/Moonlight",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n```\n# Create Entity nodes\nCREATE (Moonlight:Entity {name: \"Moonlight\"})\nCREATE (Sunlight:Entity {name: \"Sunlight\"})\nCREATE (Earthlight:Entity {name: \"Earthlight\"})\nCREATE (Moon:Entity {name: \"Moon\"})\nCREATE (Anaxagoras:Entity {name: \"Anaxagoras\"})\nCREATE (AncientGreekPhilosophy:Entity {name: \"Ancient Greek Philosophy\"})\nCREATE (LunarPhase:Entity {name: \"Lunar Phase\"})\nCREATE (FullMoon:Entity {name: \"Full Moon\"})\nCREATE (HumanEye:Entity {name: \"Human Eye\"})\nCREATE (PurkinjeEffect:Entity {name: \"Purkinje Effect\"})\nCREATE (LunarSurface:Entity {name: \"Lunar Surface\"})\nCREATE (Earth:Entity {name: \"Earth\"})\nCREATE (Folklore:Entity {name: \"Folklore\"})\nCREATE (Werewolf:Entity {name: \"Werewolf\"})\nCREATE (Lunatics:Entity {name: \"Lunatics\"})\nCREATE (Nyctalopia:Entity {name: \"Nyctalopia\"})\nCREATE (VitaminA:Entity {name: \"Vitamin A\"})\nCREATE (MoonBlindness:Entity {name: \"Moon Blindness\"})\nCREATE (EquineRecurrentUveitis:Entity {name: \"Equine Recurrent Uveitis\"})\nCREATE (Moonmilk:Entity {name: \"Moonmilk\"})\nCREATE (KatiePaterson:Entity {name: \"Katie Paterson\"})\nCREATE (LightBulbToSimulateMoonlight:Entity {name: \"Light Bulb to Simulate Moonlight\"});\n\n# Create Relationship edges\nCREATE (Moonlight)-[:COMPRISES_OF]->(Sunlight)\nCREATE (Moonlight)-[:COMPRISES_OF]->(Earthlight)\nCREATE (Moonlight)-[:REFLECTED_FROM]->(Moon)\nCREATE (Moon)-[:STRUCK_BY]->(Sunlight)\nCREATE (Anaxagoras)-[:AWARE_OF {content: \"the sun provides the moon with its brightness\"}]->(Moon)\nCREATE (LunarPhase)-[:VARIES_INTENSITY_OF]->(Moonlight)\nCREATE (FullMoon)-[:IS_A]->(LunarPhase)\nCREATE (FullMoon)-[:ILLUMINATES]->(HumanEye)\nCREATE (FullMoon)-[:APPEARS_BLUE_TO]->(HumanEye)\nCREATE (FullMoon)-[:DUE_TO]->(PurkinjeEffect)\nCREATE (Moon)-[:HAS_BOND_ALBEDO]->(LunarSurface)\nCREATE (Moonlight)-[:REACHES]->(Earth)\nCREATE (Moonlight)-[:SCATTERED_IN]->(Earth)\nCREATE (Moonlight)-[:INCREASES_BRIGHTNESS_OF]->(Earth)\nCREATE (FullMoon)-[:AVOIDED_BY]->(Astronomers)\nCREATE (Folklore)-[:MENTIONS]->(Moonlight)\nCREATE (FullMoon)-[:HAS_HARMFUL_INFLUENCE_IN]->(Folklore)\nCREATE (FullMoon)-[:TRANSFORMS_INTO]->(Werewolf)\nCREATE (FullMoon)-[:WORSENS_SYMPTOMS_OF]->(Lunatics)\nCREATE (Moonlight)-[:CAUSES_BLINDNESS_OR_MADNESS]->(Lunatics)\nCREATE (Moonlight)-[:CAUSES]->(Nyctalopia)\nCREATE (Nyctalopia)-[:CAUSED_BY_LACK_OF]->(VitaminA)\nCREATE (MoonBlindness)-[:IS_A]->(EquineRecurrentUveitis)\nCREATE (Moonmilk)-[:FORMED_DUE_TO]->(Moon)\nCREATE (KatiePaterson)-[:PRODUCED]->(LightBulbToSimulateMoonlight)\nCREATE (LightBulputToSimulateMoonlight)-[:PRODUCES_SPECTRUM_SIMILAR_TO]->(FullMoon);\n```\n\nIn these queries, we create nodes for each entity mentioned in the text, such as \"Moonlight,\" \"Sunlight,\" \"Moon,\" \"Anaxagoras,\" etc. Then, we establish relationships between these entities based on the information provided in the text. For example, \"Moonlight comprises of Sunlight,\" \"Moonlight is reflected from the Moon,\" \"Anaxagoras was aware of the sun providing brightness to the moon,\" and so on.\n\nPlease note that these queries assume you are using a Cypher-compatible graph database, such as Neo4j. Make sure to adjust the queries according to your specific database and schema requirements.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 21,
      "Incorrectly Created Nodes": 1,
      "Correctly Created Relationships": 20,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 21,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 105.5893943309784
  },
  {
    "url": "https://en.wikipedia.org/wiki/Japanese_tea_ceremony",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for entities\nCREATE (japaneseTeaCeremony:Entity {name: \"Japanese Tea Ceremony\", aliases: [\"sad\u014d/chad\u014d\", \"chanoyu\", \"The Way of Tea\"]})\nCREATE (matcha:Entity {name: \"Matcha\", description: \"Powdered Green Tea\"})\nCREATE (temae:Entity {name: \"Temae\", description: \"Ceremonial Preparation and Presentation of Matcha\"})\nCREATE (teaism:Entity {name: \"Teaism\", description: \"Worldview Associated with Japanese Tea Ceremonies\"})\nCREATE (senNoRikyu:Entity {name: \"Sen no Rikyu\", description: \"Japanese Tea Master\"})\nCREATE (wayOfTea:Entity {name: \"Way of Tea\", description: \"Art Form of Japanese Tea Ceremony\"})\nCREATE (omotesenke:Entity {name: \"Omotesenke\", description: \"School of Tea Ceremony Founded by Sen no Rikyu's Descendants\"})\nCREATE (urasenke:Entity {name: \"Urasenke\", description: \"School of Tea Ceremony Founded by Sen no Rikyu's Descendants\"})\nCREATE (mushak\u014djisenke:Entity {name: \"Mushak\u014djisenke\", description: \"School of Tea Ceremony Founded by Sen no Rikyu's Descendants\"})\nCREATE (zenBuddhism:Entity {name: \"Zen Buddhism\", description: \"Influential Philosophy in Japanese Tea Culture\"})\nCREATE (shinto:Entity {name: \"Shinto\", description: \"Japanese Indigenous Religion Influencing Tea Ceremony\"})\nCREATE (sencha:Entity {name: \"Sencha\", description: \"Leaf Tea Used in Japanese Tea Practice\"})\nCREATE (senchado:Entity {name\uff1a\"Senchado\", description: \"Way of Sencha, a Practice of Leaf Tea\"})\nCREATE (chakai:Entity {name: \"Chakai\", description: \"Informal Tea Gathering\"})\nCREATE (chaji:Entity {name: \"Chaji\", description: \"Formal Tea Gathering\"})\nCREATE (wagashi:Entity {name: \"Wagashi\", description: \"Japanese Confections Served During Tea Gatherings\"})\nCREATE (kaiseki:Entity {name: \"Kaiseki\", description: \"Full-Course Meal Served During Formal Tea Gatherings\"})\nCREATE (eichu:Entity {name: \"Eichu\", aliases: [\"\u6c38\u5fe0\"], description: \"Buddhist Monk Who Introduced Tea to Japan in the 9th Century\"})\nCREATE (emperorSaga:Entity {name: \"Emperor Saga\", description: \"Recipient of Tea from Eichu\"})\nCREATE (dancha:Entity {name: \"Dancha\", aliases: [\"\u56e3\u8336\", \"Cake Tea\", \"Brick Tea\"], description: \"Form of Tea Popular in China in Eichu's Time\"})\nCREATE (puerTea:Entity {name: \"Pu-er Tea\", description: \"Compressed Tea Similar to Dancha\"})\nCREATE (luYu:Entity {name: \"Lu Yu\", description: \"Chinese Author of The Classic of Tea\"})\nCREATE (theClassicOfTea:Entity {name: \"The Classic of Tea\", description: \"Treatise on Tea Cultivation and Preparation\"})\nCREATE (eisai:Entity {name: \"Eisai\", description: \"Buddhist Monk Who Introduced Tencha Style of Tea Preparation to Japan\"})\nCREATE (wabiSabi:Entity {name: \"Wabi-Sabi\", description: \"Aesthetic Principles in Japanese Tea Culture\"})\nCREATE (wabi:Entity {name: \"Wabi\", description: \"Inner or Spiritual Experiences in Wabi-Sabi\"})\nCREATE (sabi:Entity {name: \"Sabi\", description: \"Outer or Material Side of Life in Wabi-Sabi\"})\nCREATE (omotenashi:Entity {name: \"Omotenashi\", description: \"Hospitality in Japanese Culture\"})\nCREATE (murataJuko:Entity {name: \"Murata Juk\u014d\", description: \"Developer of Tea as a Spiritual Practice\"})\nCREATE (ikkyu:Entity {name: \"Ikky\u016b\", description: \"Zen Monk Who Revitalized Zen and Influenced Murata Juk\u014d\"})\nCREATE (takenoJoo:Entity {name: \"Takeno J\u014d\u014d\", description: \"Master of Sen no Rikyu, Introduced Ichi-go Ichi-e Philosophy\"})\nCREATE (ichiGoIchiE:Entity {name: \"Ichi-go Ichi-e\", description: \"Philosophy Emphasizing the Uniqueness of Each Meeting\"})\nCREATE (southernRecord:Entity {name: \"Southern Record\", description: \"Work by Sen no Rikyu\"})\nCREATE (toyotomiHideyoshi:Entity {name: \"Toyotomi Hideyoshi\", description: \"Regent Who Supported Sen no Rikyu\"})\nCREATE (goldenTeaRoom:Entity {name: \"Golden Tea Room\", description: \"Tea Room Constructed by Toyotomi Hideyoshi\"})\nCREATE (grandKitanoTeaCeremony:Entity {name: \"Grand Kitano Tea Ceremony\", description: \"Event Hosted by Toyotomi Hideyoshi in 1587\"})\nCREATE (chashitsu:Entity {name: \"Chashitsu\", description: \"Purpose-Built Room or Structure for Tea Ceremony\"})\nCREATE (roji:Entity {name: \"Roji\", description: \"Tea Garden Surrounding a Tea House\"})\nCREATE (sunkenHearth:Entity {name: \"Sunken Hearth\", description: \"Heating Method Used During Colder Months in Tea Ceremony\"})\nCREATE (brazier:Entity {name: \"Brazier\", description: \"Heating Method Used During Warmer Months in Tea Ceremony\"})\nCREATE (koicha:Entity {name: \"Koicha\", description: \"Thick Blend of Matcha and Hot Water\"})\nCREATE (usucha:Entity {name: \"Usucha\", description: \"Thin Blend of Matcha and Hot Water\"})\nCREATE (chadogu:Entity {name: \"Chad\u014dgu\", description: \"Equipment Used in Tea Ceremony\"})\nCREATE (nakadachi:Entity {name: \"Nakadachi\", description: \"Break During a Tea Ceremony\"})\nCREATE (kaishi:Entity {name: \"Kaishi\", description: \"Special Paper Used for Eating Confections During Tea Ceremony\"})\n\n# Create relationships between entities\nMATCH (japaneseTeaCeremony), (matcha)\nCREATE (japaneseTeaCeremony)-[:INVOLVES]->(matcha)\n\nMATCH (japaneseTeaCeremony), (temae)\nCREATE (japaneseTeaCeremney)-[:INVOLVES]->(temae)\n\nMATCH (teaism), (japaneseTeaCeremony)\nCREATE (teaism)-[:ASSOCIATED_WITH]->(japaneseTeaCeremony)\n\nMATCH (senNoRikyu), (wayOfTea)\nCREATE (senNoRikyu)-[:REVOLUTIONIZED]->(wayOfTea)\n\nMATCH (omotesenke), (urasenke), (mushak\u014djisenke), (wayOfTea)\nCREATE (omotesenke)-[:FOUNDED_BY]->(senNoRikyu)\nCREATE (urasenke)-[:FOUNDED_BY]->(senNoRikyu)\nCREATE (mushak\u014djisenke)-[:FOUNDED_BY]->(senNoRikyu)\nCREATE (omotesenke)-[:ASSOCIATED_WITH]->(wayOfTea)\nCREATE (urasenke)-[:ASSOCIATED_WITH]->(wayOfTea)\nCREATE (mushak\u014djisenke)-[:ASSOCIATED_WITH]->(wayOfTea)\n\nMATCH (zenBuddhism), (japaneseTeaCeremony)\nCREATE (zenBuddhism)-[:INFLUENCED]->(japaneseTeaCeremony)\n\nMATCH (shinto), (japaneseTeaCeremony)\nCREATE (shinto)-[:INFLUENCED]->(japaneseTeaCeremony)\n\nMATCH (sencha), (senchado)\nCREATE (sencha)-[:INVOLVED_IN]->(senchado)\n\nMATCH (chakai), (chaji)\nCREATE (chakai)-[:RELATED_TO]->(chaji)\n\nMATCH (chaji), (kaiseki)\nCREATE (chaji)-[:INVOLVES]->(kaiseki)\n\nMATCH (chakai), (wagashi)\nCREATE (chakai)-[:INVOLVES]->(wagashi)\n\nMATCH (eichu), (emperorSaga)\nCREATE (eichu)-[:SERVED]->(emperorSaga)\n\nMATCH (dancha), (puerTea)\nCREATE (dancha)-[:SIMILAR_TO]->(puerTea)\n\nMATCH (eichu), (dancha)\nCREATE (eichu)-[:INTRODUCED]->(dancha)\n\nMATCH (luYu), (theClassicOfTea)\nCREATE (luYu)-[:AUTHOR_OF]->(theClassicOfTea)\n\nMATCH (eisai), (tencha)\nCREATE (eisai)-[:INTRODUCED]->(tencha)\n\nMATCH (wabiSabi), (wabi), (sabi)\nCREATE (wabiSabi)-[:COMPRISES]->(wabi)\nCREATE (wabiSabi)-[:COMPRISES]->(sabi)\n\nMATCH (omotenashi), (wabiSabi)\nCREATE (omotenashi)-[:RELATED_TO]->(wabiSabi)\n\nMATCH (murataJuko), (ikkyu)\nCREATE (murataJuko)-[:STUDENT_OF]->(ikkyu)\n\nMATCH (takenoJoo), (senNoRikyu)\nCREATE (takenoJoo)-[:MASTER_OF]->(senNoRikyu)\n\nMATCH (ichiGoIchiE), (takenoJoo)\nCREATE (takenoJoo)-[:INTRODUCED]->(ichiGoIchiE)\n\nMATCH (senNoRikyu), (southernRecord)\nCREATE (senNoRikyu)-[:AUTHOR_OF]->(southernRecord)\n\nMATCH (toyotomiHideyoshi), (goldenTeaRoom)\nCREATE (toyotomiHideyoshi)-[:CONSTRUCTED]->(goldenTeaRoom)\n\nMATCH (toyotomiHideyoshi), (grandKitanoTeaCeremony)\nCREATE (toyotomiHideyoshi)-[:HOSTED]->(grandKitanoTeaCeremony)\n\nMATCH (chashitsu), (roji)\nCREATE (chashitsu)-[:SURROUNDED_BY]->(roji)\n\nMATCH (sunkenHearth), (brazier)\nCREATE (sunkenHearth)-[:USED_DURING]->(colderMonths)\nCREATE (brazier)-[:USED_DURING]->(warmerMonths)\n\nMATCH (koicha), (usucha)\nCREATE (koicha)-[:RELATED_TO]->(usucha)\n\nMATCH (chaji), (koicha), (usucha)\nCREATE (chaji)-[:INVOLVES]->(koicha)\nCREATE (chaji)-[:INVOLVES]->(usucha)\n\nMATCH (chakai), (usucha)\nCREATE (chakai)-[:INVOLVES]->(usucha)\n\nMATCH (chadogu), (teaCeremony)\nCREATE (chadogu)-[:USED_IN]->(teaCeremony)\n\nMATCH (nakadachi), (chaji)\nCREATE (nakadachi)-[:PART_OF]->(chaji)\n\nMATCH (kaishi), (chaji)\nCREATE (kaishi)-[:USED_IN]->(chaji)\n```",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 37,
      "Incorrectly Created Nodes": 2,
      "Correctly Created Relationships": 33,
      "Incorrectly Created Relationships": 5,
      "Correctly Labelled Relationships": 33,
      "Incorrectly Labelled Relationships": 5
    },
    "execution_time_in_seconds": 113.27871108055115
  },
  {
    "url": "https://en.wikipedia.org/wiki/Supernova",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n```\n# Create Supernovae, Galaxies, and Star entities\nCREATE (s:Supernova {name: 'Supernova', description: 'Luminous explosion of a star'})\nCREATE (mw:Galaxy {name: 'Milky Way', description: 'Our Galaxy'})\nCREATE (smw:Star {name: 'Kepler\\'s Supernova', description: 'Last directly observed supernova in Milky Way'})\nCREATE (smc:Star {name: 'Blue Supergiant', description: 'Star that exploded in SN 1987A'})\nCREATE (smw1572:Star {name: 'Tycho\\'s Supernova', description: 'Visible to the naked eye in 1572'})\nCREATE (smw1604:Star {name: 'Kepler\\'s Star', description: 'Visible to the naked eye in 1604'})\n\n# Create relationships between entities\nMATCH (s:Supernova) MATCH (mw:Galaxy)\nCREATE (s)-[:OCCURS_IN]->(mw)\nMATCH (smw:Star) MATCH (mw:Galaxy)\nCREATE (smw)-[:LOCATED_IN]->(mw)\nMATCH (smc:Star)\nCREATE (smc)-[:EXPLODED_IN]->(sn1987a:Supernova {name: 'SN 1987A'})\nMATCH (smw1572:Star)\nCREATE (smw1572)-[:EXPLODED_IN]->(sn1572:Supernova {name: 'SN 1572'})\nMATCH (smw1604:Star)\nCREATE (smw1604)-[:EXPLODED_IN]->(sn1604:Supernova {name: 'SN 1604'})\n\n# Create relationships for supernova types\nCREATE (:SupernovaType {type: 'Type I'})\nCREATE (:SupernovaType {type: 'Type Ia'})\nCREATE (:SupernovaType {type: 'Type Ib'})\nCREATE (:SupernovaType {type: 'Type Ic'})\nCREATE (:SupernovaType {type: 'Type Ic-BL'})\nCREATE (:SupernovaType {type: 'Type II'})\nCREATE (:SupernovaType {type: 'Type IIn'})\nCREATE (:SupernovaType {type: 'Type IIb'})\n\n# Create relationships for historical supernovae\nCREATE (sn185:Supernova {name: 'SN 185'})\nCREATE (sn1006:Supernova {name: 'SN 1006'})\nCREATE (sn1054:Supernova {name: 'SN 1054'})\nCREATE (sn1572:Supernova {name: 'SN 1572'})\nCREATE (sn1604:Supernova {name: 'SN 1604'})\nCREATE (sn1885:Supernova {name: 'SN 1885A'})\nCREATE (sn1907:Supernova {name: 'SN 1907A'})\nCREATE (sn1947:Supernova {name: 'SN 1947A'})\n\n# Create relationships for supernova discoveries\nCREATE (sn2013fs:Supernova {name: 'SN 2013fs'})\nCREATE (sn2016gkg:Supernova {name: 'SN 2016gkg'})\nCREATE (sn2003c:Supernova {name: 'SN 2003C'})\nCREATE (sn2005nc:Supernova {name\u00e9ia: 'SN 2005nc'})\nCREATE (sn1987k:Supernova {name: 'SN 1987K'})\nCREATE (sn1993j:Supernova {name: 'SN 1993J'})\n\n# Create relationships for supernova classification\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 2003C', 'SN 2005nc', 'SN 1987K', 'SN 1993J']\nCREATE (sn)-[:CLASSIFIED_AS]->(:SupernovaType {type: 'Type II'})\n\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 2013fs', 'SN 2016gkg']\nCREATE (sn)-[:CLASSIFIED_AS]->(:SupernovaType {type: 'Type Ia'})\n\n# Create relationships for historical supernovae and discoveries\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 185', 'SN 1006', 'SN 1054', 'SN 1572', 'SN 1604', 'SN 1885A', 'SN 1907A', 'SN 1947A']\nCREATE (sn)-[:IS_A]->(HistoricalSupernova:Label {name: 'Historical Supernova'})\n\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 2013fs', 'SN 2016gkg', 'SN 2003C', 'SN 2005nc']\nCREATE (sn)-[:IS_A]->(RecentSupernova:Label {name: 'Recent Supernova'})\n\n# Create relationships for supernovae locations\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604']\nCREATE (sn)-[:OCCURRED_IN]->(mw:Galaxy {name: 'Milky Way'})\n\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1885A'\nCREATE (sn)-[:OCCURRED_IN]->(andromeda:Galaxy {name: 'Andromeda'})\n\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1895B'\nCREATE (sn)-[:OCCURRED_IN]->(ngc5253:Galaxy {name: 'NGC 5253'})\n\n# Create relationships for supernovae and their remnants\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1054'\nCREATE (sn)-[:CREATED]->(crabnebula:Nebula {name: 'Crab Nebula'})\n\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1987A'\nCREATE (sn)-[:CREATED]->(remnant:SupernovaRemnant {name: 'Supernova Remnant'})\n\n# Create relationships for supernovae and their progenitors\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604']\nCREATE (sn)-[:ORIGINATED_FROM]->(:Progenitor {type: 'Massive Star'})\n\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1987A'\nCREATE (sn)-[:ORIGINATED_FROM]->(smc:Star)\n\n# Create relationships for supernovae and their visibility\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604', 'SN 1987A']\nCREATE (sn)-[:VISIBLE_TO]->(:Observer {type: 'Naked Eye'})\n\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 2013fs', 'SN 2016gkg']\nCREATE (sn)-[:VISIBLE_TO]->(:Observer {type: 'Telescope'})\n\n# Create relationships for supernovae and their discovery methods\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 2013fs', 'SN 2016gkg']\nCREATE (sn)-[:DISCOVERED_BY]->(:DiscoveryMethod {method: 'Telescope Observation'})\n\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604']\nCREATE (sn)-[:DISCOVERED_BY]->(:DiscoveryMethod {method: 'Naked Eye Observation'})\n\n# Create relationships for supernovae and their influence on astronomy\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604']\nCREATE (sn)-[:INFLUENCED]->(:AstronomicalConcept {concept: 'Dynamic Universe'})\n\n# Create relationships for supernovae and their brightness\nMATCH (sn:Supernova)\nWHERE sn.name IN ['SN 1572', 'SN 1604']\nCREATE (sn)-[:HAD_PROPERTY]->(:Brightness {description: 'Visible to Naked Eye'})\n\n# Create relationships for supernovae and their occurrence rate\nCREATE (:OccurrenceRate {rate: '3 times per century'})\nMATCH (sn:Supernova)\nWHERE sn.name = 'SN 1572'\nCREATE (sn)-[:OCCURS_AT_RATE]->(:OccurrenceRate)\n\n# Create relationships for supernovae and their role in star formation\nCREATE (:Role {role: 'Triggering Star Formation'})\nMATCH (sn:Supernova)\nCREATE (sn)-[:PLAYS_ROLE]->(:Role)\n\n# Create relationships for supernovae and their contribution to cosmic rays\nCREATE (:Contribution {contribution: 'Major Source of Cosmic Rays'})\nMATCH (sn:Supernova)\nCREATE (sn)-[:CONTRIBUTES_TO]->(:Contribution)\n\n# Create relationships for supernovae and their potential to produce gravitational waves\nCREATE (:Potential {potential: 'Potential to Produce Gravitational Waves'})\nMATCH (sn:Supernova)\nCREATE (sn)-[:HAS_POTENTIAL]->(:Potential)\n```",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 13,
      "Incorrectly Created Nodes": 5,
      "Correctly Created Relationships": 24,
      "Incorrectly Created Relationships": 8,
      "Correctly Labelled Relationships": 22,
      "Incorrectly Labelled Relationships": 10
    },
    "execution_time_in_seconds": 108.52873921394348
  },
  {
    "url": "https://en.wikipedia.org/wiki/Paradox_of_thrift",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n// Create a node for each unique entity and assign a unique ID\nCREATE (paradox_of_thrift:Entity {name: 'Paradox of Thrift'})\nCREATE (economics:Entity {name: 'Economics'})\nCREATE (keynesian_economics:Entity {name: 'Keynesian Economics'})\nCREATE (fallacy_of_composition:Entity {name: 'Fallacy of Composition'})\nCREATE (john_maynard_keynes:Entity {name: 'John Maynard Keynes'})\nCREATE (the_fable_of_bees:Entity {name: 'The Fable of Bees'})\nCREATE (antiquity:Entity {name: 'Antiquity'})\nCREATE (bible_verse:Entity {name: 'Bible Verse'})\nCREATE (underconsumptionist_writings:Entity {name: 'Underconsumptionist Writings'})\nCREATE (bernard_mandeville:Entity {name: 'Bernard Mandeville'})\nCREATE (adam_smith:Entity {name: 'Adam Smith'})\nCREATE (underconsumption:Entity {name: 'Underconsumption'})\nCREATE (oversaving:Entity {name: 'Oversaving'})\nCREATE (19th_century:Entity {name: '19th Century'})\nCREATE (john_m_robertson:Entity {name: 'John M. Robertson'})\nCREATE (the_fallacy_of_saving:Entity {name: 'The Fallacy of Saving'})\nCREATE (william_trufant_foster:Entity {name: 'William Trufant Foster'})\nCREATE (waddill_catchings:Entity {name: 'Waddill Catchings'})\nCREATE (the_dilemma_of_thrift:Entity {name: 'The Dilemma of Thrift'})\nCREATE (treatise_on_money:Entity {name: 'Treatise on Money'})\nCREATE (enterprise:Entity {name: 'Enterprise'})\nCREATE (thrift:Entity {name: 'Thrift'})\nCREATE (general_theory:Entity {name: 'General Theory'})\nCREATE (samuelson:Entity {name: 'Samuelson'})\nCREATE (economics_book:Entity {name: 'Economics'})\nCREATE (wolfgang_stutzel:Entity {name: 'Wolfgang St\u00fctzel'})\nCREATE (balances_mechanics:Entity {name: 'Balances Mechanics'})\nCREATE (debt_deflation_theory:Entity {name: 'Debt Deflation Theory'})\nCREATE (hyman_minsky:Entity {name: 'Hyman Minsky'})\nCREATE (janet_yellen:Entity {name: 'Janet Yellen'})\nCREATE (credit_crunch:Entity {name: 'Credit Crunch'})\nCREATE (recession:Entity {name: 'Recession'})\nCREATE (liquidity_trap:Entity {name: 'Liquidity Trap'})\nCREATE (wage_flexibility:Entity {name: 'Wage Flexibility'})\nCREATE (sectoral_balances_analysis:Entity {name: 'Sectoral Balances Analysis'})\nCREATE (public_sector:Entity {name: 'Public Sector'})\nCREATE (foreign_sector:Entity {name: 'Foreign Sector'})\nCREATE (mainstream_economics:Entity {name: 'Mainstream Economics'})\nCREATE (non_keynesian_economists:Entity {name: 'Non-Keynesian Economists'})\nCREATE (neoclassical_economists:Entity {name: 'Neoclassical Economists'})\nCREATE (says_law:Entity {name: 'Say's Law'})\nCREATE (new_keynesian_economists:Entity {name: 'New Keynesian Economists'})\nCREATE (sticky_prices:Entity {name: 'Sticky Prices'})\nCREATE (banks:Entity {name: 'Banks'})\nCREATE (currency:Entity {name: 'Currency'})\nCREATE (loanable_funds:Entity {name: 'Loanable Funds'})\nCREATE (interest_rates:Entity {name: 'Interest Rates'})\nCREATE (closed_economy:Entity {name: 'Closed Economy'})\nCREATE (global_level:Entity {name: 'Global Level'})\nCREATE (local_level:Entity {name, 'Local Level'})\nCREATE (national_level:Entity {name: 'National Level'})\nCREATE (austrian_school:Entity {name: 'Austrian School'})\nCREATE (friedrich_hayek:Entity {name: 'Friedrich Hayek'})\nCREATE (austrian_school_economists:Entity {name: 'Austrian School Economists'})\n\n// Create relationships between entities\nMATCH (paradox_of_thrift:Entity), (economics:Entity)\nCREATE (paradox_of_thrift)-[:RELATED_TO]->(economics)\n\nMATCH (paradox_of_thrift:Entity), (keynesian_economics:Entity)\nCREATE (paradox_of_thrift)-[:PART_OF]->(keynesian_economics)\n\nMATCH (paradox_of_thrift:Entity), (fallacy_of_composition:Entity)\nCREATE (paradox_of_thrift)-[:EXAMPLE_OF]->(fallacy_of_composition)\n\nMATCH (paradox_of_thrift:Entity), (john_maynard_keynes:Entity)\nCREATE (paradox_of_thrift)-[:POPULARIZED_BY]->(john_maynard_keynes)\n\nMATCH (john_maynard_keynes:Entity), (keynesian_economics:Entity)\nCREATE (john_maynard_keynes)-[:CONTRIBUTOR_TO]->(keynesian_economics)\n\nMATCH (the_fable_of_bees:Entity), (antiquity:Entity)\nCREATE (the_fable_of_bees)-[:RELATED_TO]->(antiquity)\n\nMATCH (the_fable_of_bees:Entity), (john_maynard_keynes:Entity)\nCREATE (the_fable_of_bees)-[:POPULARIZED_BY]->(john_maynard_keynes)\n\nMATCH (bible_verse:Entity), (underconsumptionist_writings:Entity)\nCREATE (bible_verse)-[:RELATED_TO]->(underconsumptionist_writings)\n\nMATCH (bernard_mandeville:Entity), (the_fable_of_bees:Entity)\nCREATE (bernard_mandeville)-[:AUTHOR_OF]->(the_fable_of_bees)\n\nMATCH (adam_smith:Entity), (the_fable_of_bees:Entity)\nCREATE (adam_smith)-[:REFERENCED]->(the_fable_of_bees)\n\nMATCH (underconsumption:Entity), (oversaving:Entity)\nCREATE (underconsumption)-[:RELATED_TO]->(oversaving)\nCREATE (underconsumption)-[:RELATED_TO]->(19th_century:Entity)\nCREATE (oversaving)-[:RELATED_TO]->(19th_century)\n\nMATCH (john_m_robertson:Entity), (the_fallacy_of_saving:Entity)\nCREATE (john_m_robertson)-[:AUTHOR_OF]->(the_fallacy_of_saving)\n\nMATCH (william_trufant_foster:Entity), (waddill_catchings:Entity)\nCREATE (william_trufant_foster)-[:COLLABORATOR_WITH]->(waddill_catchings)\n\nMATCH (william_trufant_foster:Entity), (waddill_catchings:Entity), (the_dilemma_of_thrift:Entity)\nCREATE (william_trufant_foster)-[:AUTHOR_OF]->(the_dilemma_of_thrift)\nCREATE (waddill_catchings)-[:AUTHOR_OF]->(the_dilemma_of_thrift)\n\nMATCH (treatise_on_money:Entity), (enterprise:Entity), (thrift:Entity)\nCREATE (treatise_on_money)-[:MENTIONS]->(enterprise)\nCREATE (treatise_on_money)-[:MENTIONS]->(thrift)\n\nMATCH (general_theory:Entity), (paradox_of_thrift:Entity)\nCREATE (general_theory)-[:MENTIONS]->(paradox_of_thrift)\n\nMATCH (samuelson:Entity), (economics_book:Entity)\nCREATE (samuelson)-[:AUTHOR_OF]->(economics_book)\n\nMATCH (economics_book:Entity), (paradox_of_thrift:Entity)\nCREATE (economics_book)-[:MENTIONS]->(paradox_of_thrift)\n\nMATCH (wolfgang_stutzel:Entity), (balances_mechanics:Entity)\nCREATE (wolfgang_stutzel)-[:DEVELOPER_OF]->(balances_mechanics)\n\nMATCH (debt_deflation_theory:Entity), (paradox_of_thrift:Entity)\nCREATE (debt_deflation_theory)-[:RELATED_TO]->(paradox_of_thrift)\n\nMATCH (hyman_minsky:Entity), (credit_crunch:Entity)\nCREATE (hyman_minsky)-[:MENTIONS]->(credit_crunch)\n\nMATCH (janet_yellen:Entity), (credit_crunch:Entity)\nCREATE (janet_yellen)-[:MENTIONS]->(credit_crunch)\n\nMATCH (sectoral_balances_analysis:Entity), (public_sector:Entity), (foreign_sector:Entity)\nCREATE (sectoral_balances_analysis)-[:MENTIONS]->(public_sector)\nCREATE (sectoral_balances_analysis)-[:MENTIONS]->(foreign_sector)\n\nMATCH (mainstream_economics:Entity), (non_keynesian_economists:Entity)\nCREATE (mainstream_economics)-[:RELATED_TO]->(non_keynesian_economists)\n\nMATCH (non_keynesian_economists:Entity), (neoclassical_economists:Entity)\nCREATE (non_keynesian_economists)-[:INCLUDE]->(neoclassical_economists)\n\nMATCH (says_law:Entity), (neoclassical_economists:Entity)\nCREATE (says_law)-[:SUPPORTED_BY]->(neoclassical_economists)\n\nMATCH (new_keynesian_economists:Entity), (says_law:Entity)\nCREATE (new_keynesian_economists)-[:REJECT]->(says_law)\n\nMATCH (new_keynesian_economists:Entity), (sticky_prices:Entity)\nCREATE (new_keynesian_economists)-[:MENTION]->(sticky_prices)\n\nMATCH (banks:Entity), (currency:Entity)\nCREATE (banks)-[:RELATED_TO]->(currency)\n\nMATCH (loanable_funds:Entity), (interest_rates:Entity)\nCREATE (loanable_funds)-[:INFLUENCE]->(interest_rates)\n\nMATCH (closed_economy:Entity), (global_level:Entity)\nCREATE (closed_economy)-[:RELATED_TO]->(global_level)\n\nMATCH (closed_economy:Entity), (local_level:Entity), (national_level:Entity)\nCREATE (closed_economy)-[:RELATED_TO]->(local_level)\nCREATE (closed_economy)-[:RELATED_TO]->(national_level)\n\nMATCH (austrian_school:Entity), (friedrich_hayek:Entity)\nCREATE (austrian_school)-[:INCLUDE]->(friedrich_hayek)\n\nMATCH (friedrich_hayek:Entity), (austrian_school_economists:Entity)\nCREATE (friedrich_hayek)-[:COLLABORATOR_WITH]->(austrian_school_economists)\n```\n\nThese queries create nodes for each unique entity mentioned in the text and establish relationships between them based on their context and relevance. The relationships are created using various predicates such as `RELATED_TO`, `PART_OF`, `POPULARIZED_BY`, `CONTRIBUTOR_TO`, etc., to represent the connections between the entities.",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 39,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 51,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 51,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 171.67023587226868
  },
  {
    "url": "https://en.wikipedia.org/wiki/Hula_hoop",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for main entities\nCREATE (HulaHoop:Entity {name: \"Hula Hoop\", type: \"Toy\"})\nCREATE (WhamO:Entity {name: \"Wham-O\", type: \"Company\"})\nCREATE (NativeAmericanHoopDance:Entity {name: \"Native American Hoop Dance\", type: \"Dance\"})\nCREATE (TraditionalHoops:Entity {name: \"Traditional Hoops\", type: \"Material\"})\nCREATE (ModernHoops:Entity {name: \"Modern Hoops\", type: \"Material\"})\nCREATE (BambooHoops:Entity {name: \"Bamboo Hoops\", type: \"Material\"})\nCREATE (PlasticHoops:Entity {name: \"Plastic Hoops\", type: \"Material\"})\nCREATE (WoodenHoops:Entity {name: \"Wooden Hoops\", type: \"Material\"})\nCREATE (MetalHoops:Entity {name: \"Metal Hoops\", type: \"Material\"})\nCREATE (Toltoys:Entity {name: \"Toltoys\", type: \"Company\"})\nCREATE (CarlonProducts:Entity {name: \"Carlon Products Corporation\", type: \"Company\"})\nCREATE (MarlexPlastic:Entity {name: \"Marlex Plastic\", type: \"Material\"})\nCREATE (Polyethylene:Entity {name: \"Polyethylene\", type: \"Material\"})\nCREATE (PolyvinylChloride:Entity {name: \"Polyvinyl Chloride\", type: \"Material\"})\nCREATE (PolypropyleneTubing:Entity {name: \"Polypropylene Tubing\", type: \"Material\"})\nCREATE (Australia:Location {name: \"Australia\"})\nCREATE (California:Location {name: \"California\"})\nCREATE (Norway:Location {name: \"Norway\"})\nCREATE (UnitedStates:Location {name: \"United States\"})\nCREATE (Steinkjer:Location {name: \"Steinkjer\", isPartOf: Norway})\nCREATE (Sydney:Location {name: \"Sydney\", isPartOf: Australia})\n\n# Create relationships between entities\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Entity {name: \"Wham-O\"})\nMERGE (a)-[:MANUFACTURED_BY]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Entity {name: \"Native American Hoop Dance\"})\nMERGE (a)-[:USED_IN]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Entity {name: \"Traditional Hoops\"})\nMERGE (a)-[:MADE_OF]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Entity {name: \"Modern Hoops\"})\nMERGE (a)-[:MADE_OF]->(b)\n\nMATCH (a:Entity {name: \"Modern Hoops\"}), (b:Entity {name: \"Bamboo Hoops\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Modern Hoops\"}), (b:Entity {name: \"Plastic Hoops\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Traditional Hoops\"}), (b:Entity {name: \"Wooden Hoops\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Traditional Hoops\"}), (b:Entity {name: \"Metal Hoops\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Wham-O\"}), (b:Entity {name: \"Toltoys\"})\nMERGE (a)-[:COLLABORATED_WITH]->(b)\n\nMATCH (a:Entity {name: \"Wham-O\"}), (b:Entity {name: \"Carlon Products Corporation\"})\nMERGE (a)-[:COLLABORATED_WITH]->(b)\n\nMATCH (a:Entity {name: \"Modern Hoops\"}), (b:Entity {name: \"Marlex Plastic\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Plastic Hoops\"}), (b:Entity {name: \"Polyethylene\"})\nMERGE (a)-[:MADE_OF]->(b)\n\nMATCH (a:Entity {name: \"Plastic Hoops\"}), (b:Entity {name: \"Polyvinyl Chloride\"})\nMERGE (a)-[:MADE_OF]->(b)\n\nMATCH (a:Entity {name: \"Modern Hoops\"}), (b:Entity {name: \"Polypropylene Tubing\"})\nMERGE (a)-[:INCORPORATED]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Location {name: \"Australia\"})\nMERGE (a)-[:ORIGINATED_IN]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Location {name: \"California\"})\nMERGE (a)-[:POPULARIZED_IN]->(b)\n\nMATCH (a:Entity {name: \"Wham-O\"}), (b:Location {name: \"California\"})\nMERGE (a)-[:BASED_IN]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Location {name: \"Norway\"})\nMERGE (a)-[:POPULAR_IN]->(b)\n\nMATCH (a:Entity {name: \"Hula Hoop\"}), (b:Location {name: \"United States\"})\nMERGE (a)-[:POPULAR_IN]->(b)\n\nMATCH (a:Entity {name: \"Toltoys\"}), (b:Location {name: \"Australia\"})\nMERGE (a)-[:BASED_IN]->(b)\n\nMATCH (a:Entity {name: \"Toltoys\"}), (b:Location {name: \"Sydney\"})\nMERGE (a)-[:BASED_IN]->(b)\n```\n\nPlease note that these queries assume you are using a Cypher-compatible graph database, such as Neo4j. The queries create nodes for the main entities mentioned in the text, such as \"Hula Hoop\", \"Wham-O\", \"Native American Hoop Dance\", and different types of materials and locations. Relationships between these entities are established using relationship types like `MANUFACTURED_BY`, `USED_IN`, `MADE_OF`, `INCORPORATED`, `ORIGINATED_IN`, `POPULARIZED_IN`, `BASED_IN`, and so on.\n\nFeel free to modify and extend these queries to include additional entities and relationships as needed to fully capture the knowledge graph for the given text.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 20,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 18,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 18,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 87.13403797149658
  },
  {
    "url": "https://en.wikipedia.org/wiki/Snakes_in_mythology",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create Relationship Types\nCREATE (rc:RelationshipType {name: 'RELIGION_CULTURE'})\nCREATE (rc)-[:RELATED_TO]->(c:RelationshipType {name: 'CULTURE'})\nCREATE (c)-[:RELATED_TO]->(e:RelationshipType {name: 'ENTITY'})\nCREATE (e)-[:RELATED_TO]->(a:RelationshipType {name: 'ATTRIBUTE'})\n\n# Create Cultures and Entities\nCREATE (hopi:Culture {name: 'Hopi People'})\nCREATE (mexican:Culture {name: 'Mexican Folk Culture'})\nCREATE (mayan:Culture {name: 'Mayan Culture'})\nCREATE (aztec:Culture {name: 'Aztec Culture'})\nCREATE (dahomey:Culture {name: 'Dahomey Kingdom'})\nCREATE (egyptian:Culture {name: 'Egyptian'})\nCREATE (norse:Culture {name: 'Norse'})\nCREATE (serer:Culture {name: 'Serer People'})\nCREATE (dogoon:Culture {name: 'Dogon People'})\nCREATE (sumerian:Culture {name: 'Sumerian'})\nCREATE (australian:Culture {name: 'Australian'})\nCREATE (chinese:Culture {name: 'Chinese'})\nCREATE (greek:Culture {name: 'Greek'})\nCREATE (indian:Culture {name: 'Indian'})\nCREATE (slavic:Culture {name: 'Slavic'})\nCREATE (aztecUnderworld:Culture {name: 'Aztec Underworld'})\nCREATE (bruleSioux:Culture {name: 'Brule Sioux People'})\nCREATE (pomo:Culture {name: 'Pomo People'})\nCREATE (kerala:Culture {name: 'Kerala, India'})\nCREATE (hebrew:Culture {name: 'Hebrew'})\nCREATE (northEurope:Culture {name: 'Northern Europe'})\nCREATE (westAsia:Culture {name: 'West Asia'})\nCREATE (southAsia:Culture {nameIterations: 'South Asia'})\nCREATE (mesopotamian:Culture {name: 'Mesopotamian'})\nCREATE (fijian:Culture {name: 'Fijian'})\nCREATE (solomon:Culture {name: 'Solomon Islands'})\nCREATE (voodoo:Culture {name: 'Voodoo'})\nCREATE (korean:Culture {name: 'Korean'})\n\nCREATE (snake:Entity {name: 'Snake'})\nCREATE (quetzalcoatl:Entity {name: 'Quetzalcoatl'})\nCREATE (greatGoddess:Entity {name: 'Great Goddess'})\nCREATE (plumedSerpent:Entity {name: 'Plumed Serpent'})\nCREATE (cihuacoatl:Entity {name: 'Cihuacoatl'})\nCREATE (maxicoat:Entity {name: 'Maxicoat'})\nCREATE (skySerpent:Entity {name: 'Sky Serpent'})\nCREATE (ouroboros:Entity {name: 'Ouroboros'})\nCREATE (snakeGod:Entity {name: 'Snake-God'})\nCREATE (danh:Entity {name: 'Danh'})\nCREATE (ra:Entity {name: 'Ra'})\nCREATE (creation:Entity {name: 'Creation'})\nCREATE (aapep:Entity {name: 'Aapep'})\nCREATE (sunship:Entity {name: 'Sunship'})\nCREATE (nidhogg:Entity {name: 'Nidhogg'})\nCREATE (yggdrasil:Entity {name: 'Yggdrasil'})\nCREATE (veies:Entity {name: 'Veles'})\nCREATE (aztecUnderworldSnake:Entity {name: 'Aztec Underworld Snake'})\nCREATE (rattlesnake:Entity {name: 'Rattlesnake'})\nCREATE (snakePrincess:Entity {name: 'Snake Princess'})\nCREATE (hecate:Entity {name: 'Hecate'})\nCREATE (jormungand:Entity {name: 'Jormungand'})\nCREATE (leviathan:Entity {name: 'Leviathan'})\nCREATE (koloowisi:Entity {name: 'Koloowisi'})\nCREATE (scylla:Entity {name: 'Scylla'})\nCREATE (untekhi:Entity {name: 'Untekhi'})\nCREATE (saintGeorge:Entity {name: 'Saint George'})\nCREATE (saintColumba:Entity {name: 'Saint Columba'})\nCREATE (naga:Entity {name: 'Naga'})\nCREATE (nagaKuan:Entity {name: 'Naga Kuan'})\nCREATE (nagaDeities:Entity {name: 'Naga Deities'})\nCREATE (narasimha:Entity {name: 'Narasimha'})\nCREATE (adam:Entity {name: 'Adam'})\nCREATE (eve:Entity {name: 'Eve'})\nCREATE (satan:Entity {name: 'Satan'})\nCREATE (god:Entity {name: 'God'})\nCREATE (asclepius:Entity {name: 'Asclepius'})\nCREATE (nirah:Entity {name: 'Nirah'})\nCREATE (ishtaran:Entity {name: 'I\u0161taran'})\nCREATE (ninazu:Entity {name: 'Ninazu'})\nCREATE (ningishzida:Entity {name: 'Ningishzida'})\nCREATE (nindengei:Entity {name: 'Nindengei'})\nCREATE (coatlice:Entity {name: 'Coatlice'})\nCREATE (damballa:Entity {name: 'Damballa'})\nCREATE (simbi:Entity {name: 'Simbi'})\nCREATE (petro:Entity {name: 'Petro'})\nCREATE (eobshin:Entity {name: 'Eobshin'})\nCREATE (shiva:Entity {name: 'Shiva'})\nCREATE (mehen:Entity {name: 'Mehen'})\nCREATE (nehebkau:Entity {name: 'Nehebkau'})\nCREATE (hornedSerpent:Entity {name: 'Horned Serpent'})\nCREATE (snakeYouth:Entity {name: 'Snake Youth'})\nCREATE (snakeGirl:Entity {name: 'Snake Girl'})\n\n# Create Attributes and connect to Entities\nCREATE (symbol:Attribute {name: 'Symbol'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {name: 'Healing'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {name: 'Transformation'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {nameRatio: 'Fertility'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {name: 'Familiar'})\nCREATE (symbol)-[:APPLIES_TO]->(greatGoddess)\nCREATE (symbol:Attribute {name: 'Twining'})\nCREATE (symbol)-[:APPLIES_TO]->(greatGoddess)\nCREATE (symbol:Attribute {name: 'Guardian'})\nCREATE (symbol)-[:APPLIES_TO]->(greatGoddess)\nCREATE (symbol:Attribute {name: 'Deity'})\nCREATE (symbol)-[:APPLIES_TO]->(plumedSerpent)\nCREATE (symbol:Attribute {name: 'Twin Entity'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'God and Man'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Man and Serpent'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Fertility Goddess'})\nCREATE (symbol)-[:APPLIES_TO]->(cihuacoatl)\nCREATE (symbol:Attribute {name: 'Hunting God'})\nCREATE (symbol)-[:APPLIES_TO]->(maxicoat)\nCREATE (symbol:Attribute {name: 'Bringer of Morning Winds'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Bringer of Daylight'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Sea God'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Sun'})\nCREATE (symbol)-[:APPLIES_TO]->(quetzalcoatl)\nCREATE (symbol:Attribute {name: 'Immortal'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {name: 'Circle'})\nCREATE (symbol)-[:APPLIES_TO]->(ouroboros)\nCREATE (symbol:Attribute {name: 'Spiral'})\nCREATE (symbol)-[:APPLIES_TO]->(ouroboros)\nCREATE (symbol:Attribute {name: 'Eternity'})\nCREATE (symbol)-[:APPLIES_TO]->(ouroboros)\nCREATE (symbol:Attribute {name: 'Belt'})\nCREATE (symbol)-[:APPLIES_TO]->(snakeGod)\nCREATE (symbol:Attribute {name: 'State of Existence'})\nCREATE (symbol)-[:APPLIES_TO]->(creation)\nCREATE (symbol:Attribute {name: 'Chaos'})\nCREATE (symbol)-[:APPLIES_TO]->(aapep)\nCREATE (symbol:Attribute {name: 'Order'})\nCREATE (symbol)-[:APPLIES_TO]->(sunship)\nCREATE (symbol:Attribute {name: 'Evil'})\nCREATE (symbol)-[:APPLIES_TO]->(nidhogg)\nCREATE (symbol:Attribute {name: 'Underworld'})\nCREATE (symbol)-[:APPLIES_TO]->(veies)\nCREATE (symbol:Attribute {name: 'Python'})\nCREATE (symbol)-[:APPLIES_TO]->(aztecUnderworldSnake)\nCREATE (symbol:Attribute {name: 'Alligator'})\nCREATE (symbol)-[:APPLIES_TO]->(aztecUnderworldSnake)\nCREATE (symbol:Attribute {name: 'Transformation'})\nCREATE (symbol)-[:APPLIES_TO]->(rattlesnake)\nCREATE (symbol:Attribute {name: 'Union'})\nCREATE (symbol)-[:APPLIES_TO]->(snakeYouth)\nCREATE (symbol:Attribute {name: 'Union'})\nCREATE (symbol)-[:APPLIES_TO]->(snakeGirl)\nCREATE (symbol:Attribute {name: 'Magic'})\nCREATE (symbol)-[:APPLIES_TO]->(hecate)\nCREATE (symbol:Attribute {name: 'Primordial Ocean'})\nCREATE (symbol)-[:APPLIES_TO]->(jormungand)\nCREATE (symbol:Attribute {name: 'Sea Monster'})\nCREATE (symbol)-[:APPLIES_TO]->(leviathan)\nCREATE (symbol:Attribute {name: 'Sea God'})\nCREATE (symbol)-[:APPLIES_TO]->(koloowisi)\nCREATE (symbol:Attribute {name: 'Monster'})\nCREATE (symbol)-[:APPLIES_TO]->(scylla)\nCREATE (symbol:Attribute {name: 'Water Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(untekhi)\nCREATE (symbol:Attribute {name: 'Saint'})\nCREATE (symbol)-[:APPLIES_TO]->(saintGeorge)\nCREATE (symbol:Attribute {name: 'Saint'})\nCREATE (symbol)-[:APPLIES_TO]->(saintColumba)\nCREATE (symbol:Attribute {name: 'Deities'})\nCREATE (symbol)-[:APPLIES_TO]->(nagaDeities)\nCREATE (symbol:Attribute {name: 'Snake God'})\nCREATE (symbol)-[:APPLIES_TO]->(narasimha)\nCREATE (symbol:Attribute {name: 'Disobeying God'})\nCREATE (symbol)-[:APPLIES_TO]->(adam)\nCREATE (symbol)-[:APPLIES_TO]->(eve)\nCREATE (symbol:Attribute {name: 'Deceived'})\nCREATE (symbol)-[:APPLIES_TO]->(adam)\nCREATE (symbol)-[:APPLIES_TO]->(eve)\nCREATE (symbol:Attribute {name: 'Cursed'})\nCREATE (symbol)-[:APPLIES_TO]->(snake)\nCREATE (symbol:Attribute {name: 'Healing'})\nCREATE (symbol)-[:APPLIES_TO]->(asclepius)\nCREATE (symbol:Attribute {name: 'Messenger'})\nCREATE (symbol)-[:APPLIES_TO]->(nirah)\nCREATE (symbol:Attribute {name: 'Patron of Healing'})\nCREATE (symbol)-[:APPLIES_TO]->(ninazu)\nCREATE (symbol:Attribute {name: 'Horned Viper'})\nCREATE (symbol)-[:APPLIES_TO]->(cerastes)\nCREATE (symbol:Attribute {name: 'Magical Entity'})\nCREATE (symbol)-[:APPLIES_TO]->(cerastes)\nCREATE (symbol:Attribute {name: 'Dragon'})\nCREATE (symbol)-[:APPLIES_TO]->(muShuShu)\nCREATE (symbol:Attribute {name: 'Furious Serpent'})\nCREATE (symbol)-[:APPLIES_TO]->(muShuShu)\nCREATE (symbol:Attribute {name: 'Attendant'})\nCREATE (symbol)-[:APPLIES_TO]->(muShuShu)\nCREATE (symbol:Attribute {name: 'Creator'})\nCREATE (symbol)-[:APPLIES_TO]->(nindengei)\nCREATE (symbol:Attribute {name: 'Mother Goddess'})\nCREATE (symbol)-[:APPLIES_TO]->(coatlice)\nCREATE (symbol:Attribute {name: 'Snake Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(damballa)\nCREATE (symbol:Attribute {name: 'Snake Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(simbi)\nCREATE (symbol:Attribute {name: 'Snake Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(petro)\nCREATE (symbol:Attribute {name: 'Snake Goddess'})\nCREATE (symbol)-[:APPLIES_TO]->(eobshin)\nCREATE (symbol:Attribute {name: 'Snake Goddess'})\nCREATE (symbol)-[:APPLIES_TO]->(shiva)\nCREATE (symbol:Attribute {name: 'Coiled One'})\nCREATE (symbol)-[:APPLIES_TO]->(mehen)\nCREATE (symbol:Attribute {name: 'Two-Headed'})\nCREATE (symbol)-[:APPLIES_TO]->(nehebkau)\nCREATE (symbol:Attribute {name: 'Water'})\nCREATE (symbol)-[:APPLIES_TO]->(hornedSerpent)\nCREATE (symbol:Attribute {name: 'Sky Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(snakeYouth)\nCREATE (symbol:Attribute {name: 'Underworld Spirit'})\nCREATE (symbol)-[:APPLIES_TO]->(snakeGirl)\n\n# Connect Cultures to Entities\nCREATE (hopi)-[:HAS_ENTITY]->(snake)\nCREATE (mexican)-[:HAS_ENTITY]->(snake)\nCREATE (mayan)-[:HAS_ENTITY]->(quetzalcoatl)\nCREATE (aztec)-[:HAS_ENTITY]->(quetzalcoatl)\nCREATE (dahomey)-[:HAS_ENTITY]->(snake)\nCREATE (egyptian)-[:HAS_ENTITY]->(snake)\nCREATE (norse)-[:HAS_ENTITY]->(ouroboros)\nCREATE (serer)-[:HAS_ENTITY]->(snake)\nCREATE (dogoon)-[:HAS_ENTITY]->(snake)\nCREATE (sumerian)-[:HAS_ENTITY]->(snake)\nCREATE (australian)-[:HAS_ENTITY]->(snake)\nCREATE (chinese)-[:HAS_ENTITY]->(snake)\nCREATE (greek)-[:HAS_ENTITY]->(snake)\nCREATE (indian)-[:HAS_ENTITY]->(snake)\nCREATE (slavic)-[:HAS_ENTITY]->(veies)\nCREATE (aztecUnderworld)-[:HAS_ENTITY]->(aztecUnderworldSnake)\nCREATE (bruleSioux)-[:HAS_ENTITY]->(rattlesnake)\nCREATE (pomo)-[:HAS_ENTITY]->(snake)\nCREATE (kerala)-[:HAS_ENTITY]->(narasimha)\nCREATE (hebrew)-[:HAS_ENTITY]->(snake)\nCREATE (northEurope)-[:HAS_ENTITY]->(snake)\nCREATE (westAsia)-[:HAS_ENTITY]->(snake)\nCREATE (southAsia)-[:HAS_ENTITY]->(snake)\nCREATE (mesopotamian)-[:HAS_ENTITY]->(snake)\nCREATE (fijian)-[:HAS_ENTITY]->(nindengei)\nCREATE (solomon)-[:HAS_ENTITY]->(snake)\nCREATE (voodoo)-[:HAS_ENTITY]->(snake)\nCREATE (korean)-[:HAS_ENTITY]->(eobshin)\n\n# Connect Entities to Attributes\nCREATE (snake)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (greatGoddess)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (greatGoddess)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (plumedSerpent)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (quetzalcoatl)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (snake)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (snake)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (ouroboros)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (ouroboros)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (snakeGod)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (creation)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (aapep)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (sunship)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (nidhogg)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (veies)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (aztecUnderworldSnake)-[:HAS_ATTRIBUTE]->(symbol)\nCREATE (az",
    "summary": {
      "Syntax Errors": 2,
      "Correctly Created Nodes": 62,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 120,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 120,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 107.94695091247559
  },
  {
    "url": "https://en.wikipedia.org/wiki/Machine_learning",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for main entities\nCREATE (MachineLearning)\nCREATE (DeepLearning)\nCREATE (Fields)\nCREATE (NaturalLanguageProcessing)\nCREATE (ComputerVision)\nCREATE (SpeechRecognition)\nCREATE (EmailFiltering)\nCREATE (Agriculture)\nCREATE (Medicine)\nCREATE (PredictiveAnalytics)\nCREATE (Statistics)\nCREATE (MathematicalOptimization)\nCREATE (DataMining)\nCREATE (ExploratoryDataAnalysis)\nCREATE (UnsupervisedLearning)\nCREATE (TheoreticalViewpoint)\nCREATE (ProbablyApproximatelyCorrectLearning)\nCREATE (ArthurSamuel)\nCREATE (IBM)\nCREATE (ComputerGaming)\nCREATE (ArtificialIntelligence)\nCREATE (SelfTeachingComputers)\nCREATE (Checkers)\nCREATE (DonaldHebb)\nCREATE (TheOrganizationOfBehavior)\nCREATE (NeuralStructure)\nCREATE (WalterPitts)\nCREATE (WarrenMcCulloch)\nCREATE (MathematicalModels)\nCREATE (Cybertron)\nCREATE (RaytheonCompany)\nCREATE (SonarSignals)\nCREATE (Electrocardiograms)\nCREATE (SpeechPatterns)\nCREATE (ReinforcementLearning)\nCREATE (RudimentaryReinforcementLearning)\nCREATE (GoofButton)\nCREATE (LearningMachines)\nCREATE (PatternClassification)\nCREATE (PatternRecognition)\nCREATE (DudaAndHart)\nCREATE (ArtificialNeuralNetwork)\nCREATE (TomMMitchell)\nCREATE (FormalDefinition)\nCREATE (Algorithms)\nCREATE (CognitiveTerms)\nCREATE (ModernDayMachineLearning)\nCREATE (Classification)\nCREATE (Models)\nCREATE (Predictions)\nCREATE (CancerousMoles)\nCREATE (StockTrading)\nCREATE (ScientificEndeavor)\nCREATE (QuestForArtificialIntelligence)\nCREATE (AcademicDiscipline)\nCREATE (SymbolicMethods)\nCREATE (NeuralNetworks)\nCREATE (Perceptrons)\nCREATE (GeneralizedLinearModels)\nCREATE (ProbabilisticReasoning)\nCREATE (AutomatedMedicalDiagnosis)\nCREATE (LogicalKnowledgeBasedApproach)\nCREATE (ProbabilisticSystems)\nCREATE (DataAcquisition)\nCREATE (DataRepresentation)\nCREATE (ExpertSystems)\nCREATE (InductiveLogicProgramming)\nCREATE (StatisticalLine)\nCREATE (PatternRecognition)\nCREATE (InformationRetrieval)\nCREATE (NeuralNetworksResearch)\nCREATE (Connectionism)\nCREATE (JohnHopfield)\nCREATE (DavidRumelhart)\nCREATE (GeoffreyHinton)\nCREATE (Backpropagation)\nCREATE (Compression)\nCREATE (PosteriorProbabilities)\nCREATE (ArithmeticCoding)\nCREATE (Prediction)\nCREATE (Justification)\nCREATE (GeneralIntelligence)\nCREATE (AlternativeView)\nCREATE (CompressionAlgorithms)\nCREATE (FeatureSpaceVectors)\nCREATE (LosslessCompressionMethods)\nCREATE (AIXITheory)\nCREATE (HutterPrize)\nCREATE (Software)\nCREATE (NVIDIA)\nCREATE (Maxine)\nCREATE (AIVC)\nCREATE (OpenCV)\nCREATE (TensorFlow)\nCREATE (MATLAB)\nCREATE (ImageProcessingToolbox)\nCREATE (HighFidelityGenerativeImageCompression)\nCREATE (KMeansClustering)\nCREATE (DataFiles)\nCREATE (StorageEfficiency)\nCREATE (DataTransmission)\nCREATE (DataPoints)\nCREATE (DataSets)\nCREATE (ImageCompression)\nCREATE (MachineLearningAndDataMining)\nCREATE (PredictionCapability)\nCREATE (KnowledgeDiscovery)\nCREATE (Databases)\nCREATE (TrainingData)\nCREATE (LearnerAccuracy)\nCREATE (KnowledgeDiscoveryAndDataMining)\nCREATE (LearningProblems)\nCREATE (Minimization)\nCREATE (LossFunction)\nCREATE (TrainingSet)\nCREATE (Discrepancy)\nCREATE (Predictions)\nCREATE (Models)\nCREATE (MichaelIJordan)\nCREATE (MethodologicalPrinciples)\nCREATE (TheoreticalTools)\nCREATE (DataScience)\nCREATE (StatisticalAnalyses)\nCREATE (APrioriSelection)\nCREATE (Model)\nCREATE (Variables)\nCREATE (Analysis)\nCREATE (LeoBreiman)\nCREATE (StatisticalModelingParadigms)\nCREATE (RandomForest)\nCREATE (StatisticalLearning)\nCREATE (AnalyticalTechniques)\nCREATE (Physics)\nCREATE (DisorderedSystems)\nCREATE (MachineLearningProblems)\nCREATE (WeightSpace)\nCREATE (DeepNeuralNetworks)\nCREATE (StatisticalPhysics)\nCREATE (MedicalDiagnostics)\nCREATE (Learner)\nCREATE (Generalization)\nCREATE (LearningMachine)\nCREATE (LearningData)\nCREATE (ProbabilityDistribution)\nCREATE (ComputationalLearningTheory)\nCREATE (ProbablyApproximatelyCorrectLearning)\nCREATE (TrainingSets)\nCREATE (Future)\nCREATE (LearningTheory)\nCREATE (ProbabilisticBounds)\nCREATE (BiasVarianceDecomposition)\nCREATE (Quantification)\nCREATE (GeneralizationError)\nCREATE (Hypothesis)\nCREATE (Complexity)\nCREATE (Function)\nCREATE (TrainingError)\nCREATE (Overfitting)\nCREATE (Generalization)\nCREATE (PerformanceBounds)\nCREATE (TimeComplexity)\nCREATE (Feasibility)\nCREATE (ComputationalLearningTheory)\nCREATE (PolynomialTime)\nCREATE (PositiveResults)\nCREATE (Functions)\nCREATE (NegativeResults)\nCREATE (Classes)\nCREATE (SupervisedLearning)\nCREATE (MathematicalModel)\nCREATE (TrainingData)\nCREATE (TrainingExample)\nCREATE (Input)\nCREATE (DesiredOutput)\nCREATE (SupervisorySignal)\nCREATE (TrainingExample)\nCREATE (Array)\nCREATE (Vector)\nCREATE (TrainingData)\nCREATE (Matrix)\nCREATE (IterativeOptimization)\nCREATE (ObjectiveFunction)\nCREATE (SupervisedLearningAlgorithms)\nCREATE (Function)\nCREATE (Algorithm)\nCREATE (Accuracy)\nCREATE (ActiveLearning)\nCREATE (Classification)\nCREATE (Regression)\nCREATE (ClassificationAlgorithms)\nCREATE (Outputs)\nCREATE (ClassificationAlgorithm)\nCREATE (IncomingEmail)\nCREATE (Folder)\nCREATE (RegressionAlgorithms)\nCREATE (NumericalValue)\nCREATE (SimilarityLearning)\nCREATE (SupervisedMachineLearning)\nCREATE (SimilarityFunction)\nCREATE (Objects)\nCREATE (Ranking)\nCREATE (RecommendationSystems)\nCREATE (VisualIdentityTracking)\nCREATE (FaceVerification)\nCREATE (SpeakerVerification)\nCREATE (UnsupervisedLearning)\nCREATE (Structures)\nCREATE (Data)\nCREATE (UnsupervisedLearningAlgorithms)\nCREATE (Commonalities)\nCREATE (CentralApplications)\nCREATE (Clustering)\nCREATE (DimensionalityReduction)\nCREATE (DensityEstimation)\nCREATE (ClusteringTechniques)\nCREATE (Criteria)\nCREATE (Observations)\nCREATE (ClusteringTechniques)\nCREATECoeff\nCREATE (InternalCompactness)\nCREATE (Similarity)\nCREATE (Members)\nCREATE (EstimatedDensity)\nCREATE (GraphConnectivity)\nCREATE (SelfSupervisedLearning)\nCREATE (SupervisorySignal)\nCREATE (DataItself)\nCREATE (SemiSupervisedLearning)\nCREATE (TrainingLabels)\nCREATE (UnlabeledData)\nCREATE (LearningAccuracy)\nCREATE (WeaklySupervisedLearning)\nCREATE (TrainingLabels)\nCREATE (ReinforcementLearning)\nCREATE (SoftwareAgents)\nCREATE (CumulativeReward)\nCREATE (GameTheory)\nCREATE (ControlTheory)\nCREATE (OperationsResearch)\nCREATE (InformationTheory)\nCREATE (SimulationBasedOptimization)\nCREATE (MultiAgentSystems)\nCREATE (SwarmIntelligence)\nCREATE (GeneticAlgorithms)\nCREATE (ReinforcementLearning)\nCREATE (MarkovDecisionProcess)\nCREATE (ReinforcementLearningAlgorithms)\nCREATE (DynamicProgrammingTechniques)\nCREATE (MathematicalModels)\nCREATE (ExactModels)\nCREATE (AutonomousVehicles)\nCREATE (DimensionalityReduction)\nCREATE (RandomVariables)\nCREATE (PrincipalVariables)\nCREATE (FeatureSet)\nCREATE (DimensionalityReductionTechniques)\nCREATE (ManifoldLearning)\nCREATE (ManifoldRegularization)\nCREATE (TopicModeling)\nCREATE (MetaLearning)\nCREATE (SelfLearning)\nCREATE (NeuralNetwork)\nCREATE (CrossbarAdaptiveArray)\n\n# Create relationships between entities\nCREATE (MachineLearning)-[:CONCERNS]->(Development)\nCREATE (MachineLearning)-[:CONCERNS]->(StatisticalAlgorithms)\nCREATE (MachineLearning)-[:LEARNS_FROM]->(Data)\nCREATE (MachineLearning)-[:GENERALIZES_TO]->(UnseenData)\nCREATE (MachineLearning)-[:PERFORMS]->(Tasks)\nCREATE (MachineLearning)-[:DOES_NOT_REQUIRE]->(ExplicitInstructions)\nCREATE (QuickProgress)-[:IN]->(DeepLearning)\nCREATE (DeepLearning)-[:SURPASSES]->(PreviousApproaches)\nCREATE (ML)-[:FINDS_APPLICATION_IN]->(Fields)\nCREATE (Fields)-[:INCLUDES]->(NaturalLanguageProcessing)\nCREATE (Fields)-[:INCLUDES]->(ComputerVision)\nCREATE (Fields)-[:INCLUDES]->(SpeechRecognition)\nCREATE (Fields)-[:INCLUDES]->(EmailFiltering)\nCREATE (Fields)-[:INCLUDES]->(Agriculture)\nCREATE (Fields)-[:INCLUDES]->(Medicine)\nCREATE (Application)-[:OF]->(ML)\nCREATE (Application)-[:IS_KNOWN_AS]->(PredictiveAnalytics)\nCREATE (Statistics)-[:COMPRISES]->(Foundations)\nCREATE (Foundations)-[:OF]->(MachineLearning)\nCREATE (MathematicalOptimization)-[:COMPRISES]->(Foundations)\nCREATE (Foundations)-[:OF]->(MachineLearning)\nCREATE (DataMining)-[:IS_A]->(RelatedField)\nCREATE (RelatedField)-[:OF_STUDY]->(Study)\nCREATE (Study)-[:FOCUSES_ON]->(ExploratoryDataAnalysis)\nCREATE (ExploratoryDataAnalysis)-[:VIA]->(UnsupervisedLearning)\nCREATE (KnowledgeGraph)-[:ENCAPSULATES]->(Relationships)\nCREATE (Relationships)-[:BETWEEN]->(Entities)\nCREATE (Entities)-[:IDENTIFIED_FROM]->(GivenText)\nCREATE (TheoreticalViewpoint)-[:PROVIDES]->(Framework)\nCREATE (Framework)-[:FOR]->(Describing)\nCREATE (Describing)-[:OF]->(MachineLearning)\nCREATE (Term)-[:COINED_BY]->(ArthurSamuel)\nCREATE (Term)-[:IS]->(MachineLearning)\nCREATE (ArthurSamuel)-[:IS_AN_EMPLOYEE_OF]->(IBM)\nCREATE (ArthurSamuel)-[:IS_A]->(Pioneer)\nCREATE (Pioneer)-[:IN]->(Field)\nCREATE (Field)-[:IS]->(ComputerGaming)\nCREATE (Field)-[:IS]->(ArtificialIntelligence)\nCREATE (Synonym)-[:IS]->(SelfTeachingComputers)\nCREATE (Synonym)-[:WAS_USED_IN]->(TimePeriod)\nCREATE (EarliestMachineLearningModel)-[:INTRODUCED_BY]->(ArthurSamuel)\nCREATE (ArthurSamuel)-[:INVENTED]->(Program)\nCREATE (Program)-[:CALCULATES]->(WinningChance)\nCREATE (WinningChance)-[:FOR_EACH_SIDE]->(Checkers)\nCREATE (History)-[:OF]->(MachineLearning)\nCREATE (History)-[:ROOTS_BACK_TO]->(Decades)\nCREATE (Decades)-[:OF]->(HumanDesire)\nCREATE (HumanDesire)-[:IS_TO]->(Study)\nCREATE (Study)-[:OF]->(HumanCognitiveProcesses)\nCREATE (CanadianPsychologist)-[:IS]->(DonaldHebb)\nCREATE (Book)-[:IS]->(TheOrganizationOfBehavior)\nCREATE (Book)-[:PUBLISHED_BY]->(DonaldHebb)\nCREATE (DonaldHebb)-[:INTRODUCED]->(TheoreticalNeuralStructure)\nCREATE (TheoreticalNeuralStructure)-[:FORMED_BY]->(Interactions)\nCREATE (Interactions)-[:AMONG]->(NerveCells)\nCREATE (Model)-[:OF]->(Neurons)\nCREATE (Neurons)-[:INTERACT_WITH_EACH_OTHER]->(Other)\nCREATE (Other)-[:SET]->(Groundwork)\nCREATE (Groundwork)-[:FOR]->(AIs)\nCREATE (AIs)-[:AND]->(MachineLearningAlgorithms)\nCREATE (Work)-[:OF]->(Researchers)\nCREATE (Researchers)-[:CONTRIBUTE_TO]->(ModernMachineLearningTechnologies)\nCREATE (Researchers)-[:INCLUDES]->(WalterPitts)\nCREATE (Researchers)-[:INCLUDES]->(WarrenMcCulloch)\nCREATE (WalterPitts)-[:AND]->(WarrenMcCulloch)\nCREATE (WalterPitts)-[:AND]->(WarrenMcCulloch)\nCREATE (EarlyMathematicalModels)-[:OF]->(NeuralNetworks)\nCREATE (Algorithms)-[:MIRROR]->(HumanThoughtProcesses)\nCREATE (LearningMachine)-[:IS]->(Cybertron)\nCREATE (Cybertron)-[:DEVELOPED_BY]->(RaytheonCompany)\nCREATE (RaytheonCompany)-[:IS]->(Experimental)\nCREATE (Cybertron)-[:HAS]->(PunchedTapeMemory)\nCREATE (Cybertron)-[:ANALYZES]->(SonarSignals)\nCREATE (Cybertron)-[:ANALYZES]->(Electrocardiograms)\nCREATE (Cybertron)-[:ANALYZES]->(SpeechPatterns)\nCREATE (Cybertron)-[:USES]->(RudimentaryReinforcementLearning)\nCREATE (HumanOperatorTeacher)-[:TRAINED]->(Cybertron)\nCREATE (Cybertron)-[:TO_RECOGNIZE]->(Patterns)\nCREATE (GoofButton)-[:CAUSES]->(Cybertron)\nCREATE (Cybertron)-[:TO_REASSESS]->(IncorrectDecisions)\nCREATE (Book)-[:IS]->(LearningMachines)\nCREATE (Book)-[:DEALS_WITH]->(MachineLearning)\nCREATE (LearningMachines)-[:DEALS_WITH]->(PatternClassification)\nCREATE (Interest)-[:RELATED_TO]->(PatternRecognition)\nCREATE (DudaAndHart)-[:DESCRIBED]->(Interest)\nCREATE (Report)-[:GIVEN_ON]->(Using)\nCREATE (Using)-[:OF]->(TeachingStrategies)\nCREATE (ArtificialNeuralNetwork)-[:LEARNS_TO_RECOGNIZE]->(Characters)\nCREATE (Characters)-[:INCLUDES]->(Letters)\nCREATE (Characters)-[:INCLUDES]->(Digits)\nCREATE (Characters)-[:INCLUDES]->(SpecialSymbols)\nCREATE (Characters)-[:FROM]->(ComputerTerminal)\nCREATE (TomMMitchell)-[:PROVIDED]->(Definition)\nCREATE (Definition)-[:IS]->(WidelyQuoted)\nCREATE (Definition)-[:IS]->(MoreFormal)\nCREATE (Algorithms)-[:STUDIED_IN]->(MachineLearningField)\nCREATE (ComputerProgram)-[:IS_SAID_TO_LEARN]->(FromExperience)\nCREATE (Experience)-[:WITH_RESPECT_TO]->(Tasks)\nCREATE (Tasks)-[:AND]->(PerformanceMeasure)\nCREATE (Tasks)-[:IMPROVES]->(WithExperience)\nCREATE (Definition)-[:OF]->(Tasks)\nCREATE (Definition)-[:OFFERS]->(OperationalDefinition)\nCREATE (OperationalDefinition)-[:IS]->(Fundamentally)\nCREATE (Question)-[:IS]->(CanMachinesThink)\nCREATE (Question)-[:REPLACED_WITH]->(AnotherQuestion)\nCREATE (AnotherQuestion)-[:IS]->(CanMachinesDo)\nCREATE (ModernDayMachineLearning)-[:HAS]->(Objectives)\nCREATE (One)-[:IS_TO]->(ClassifyData)\nCREATE (ClassifyData)-[:BASED_ON]->(Models)\nCREATE (OtherPurpose)-[:IS_TO]->(MakePredictions)\nCREATE (MakePredictions)-[:FOR]->(FutureOutcomes)\nCREATE (FutureOutcomes)-[:BASED_ON]->(TheseModels)\nCREATE (HypotheticalAlgorithm)-[:SPECIFIC_TO]->(ClassifyingData)\nCREATE (ComputerVision)-[:OF]->(Moles)\nCREATE (SupervisedLearning)-[:IN_ORDER_TO]->(Train)\nCREATE (Train)-[:TO]->(Classify)\nCREATE (Classify)-[:IS]->(CancerousMoles)\nCREATE (MachineLearningAlgorithm)-[:FOR]->(StockTrading)\nCREATE (MachineLearningAlgorithm)-[:INFORMS]->(Trader)\nCREATE (Trader)-[:OF]->(FuturePotentialPredictions)\nCREATE (ScientificEndeavor)-[:IS]->(MachineLearning)\nCREATE (MachineLearning)-[:GREW_OUT_OF]->(Quest)\nCREATE (Quest)-[:FOR]->(ArtificialIntelligence)\nCREATE (Days)-[:IS]->(Early)\nCREATE (Early)-[:OF]->(AI)\nCREATE (AI)-[:AS]->(AcademicDiscipline)\nCREATE (Researchers)-[:WERE_INTERESTED_IN]->(HavingMachinesLearn)\nCREATE (HavingMachinesLearn)-[:FROM]->(Data)\nCREATE (They)-[:ATTEMPTED_TO_APPROACH]->(Problem)\nCREATE (Problem)-[:WITH]->(SymbolicMethods)\nCREATE (Which)-[:WERE_THEN_TERMED]->(NeuralNetworks)\nCREATE (Perceptrons)-[:AND]->(OtherModels)\nCREATE (OtherModels)-[:WERE_LATER_FOUND_TO_BE]->(Reinventions)\nCREATE (Reinventions)-[:OF]->(GeneralizedLinearModels)\nCREATE (GeneralizedLinearModels)-[:OF]->(Statistics)\nCREATE (ProbabilisticReasoning)-[:WAS_EMPLOYED]->(Especially)\nCREATE (Especially)-[:IN]->(AutomatedMedicalDiagnosis)\nCREATE (Emphasis)-[:ON]->(LogicalKnowledgeBasedApproach)\nCREATE (Emphasis)-[:CAUSED]->(Rift)\nCREATE (Rift)-[:BETWEEN]->(AI)\nCREATE (AI)-[:AND]->(MachineLearning)\nCREATE (ProbabilisticSystems)-[:WERE_PLAGUED_BY]->(TheoreticalAndPracticalProblems)\nCREATE (TheoreticalAndPracticalProblems)-[:OF]->(DataAcquisition)\nCREATE (TheoreticalAndPracticalProblems)-[:AND]->(DataRepresentation)\nCREATE (ExpertSystems)-[:DOMINATED]->(AI)\nCREATE (Statistics)-[:WAS_OUT_OF_FAVOR]->(By1980)\nCREATE (Work)-[:ON]->(SymbolicKnowledgeBasedLearning)\nCREATE (SymbolicKnowledgeBasedLearning)-[:LED_TO]->(InductiveLogicProgramming)\nCREATE (StatisticalLine)-[:OF_RESEARCH_WAS_NOW_OUTSIDE]->(Field)\nCREATE (Field)-[:OF]->(AIProper)\nCREATE (AIProper)-[:IN]->(PatternRecognition)\nCREATE (AIProper)-[:IN]->(InformationRetrieval)\nCREATE (NeuralNetworksResearch)-[:ABANDONED_BY]->(AI)\nCREATE (AI)-[:AND]->(ComputerScience)\nCREATE (Line)-[:TOO_WAS_CONTINU",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 133,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 112,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 112,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 143.28356909751892
  },
  {
    "url": "https://en.wikipedia.org/wiki/Dinosaur",
    "queries": "Here are some Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create the nodes for the different groups of dinosaurs\nCREATE (Ornithischia:DinosaurGroup {name: 'Ornithischia'})\nCREATE (Saurischia:DinosaurGroup {name: 'Saurischia'})\nCREATE (Theropoda:DinosaurGroup {name: 'Theropoda'})\nCREATE (Sauropodomorpha:DinosaurGroup {name: 'Sauropodomorpha'})\nCREATE (Ankylosaurians:DinosaurGroup {name: 'Ankylosaurians'})\nCREATE (Stegosaurians:DinosaurGroup {name: 'Stegosaurians'})\nCREATE (Ceratopsians:DinosaurGroup {name: 'Ceratopsians'})\nCREATE (Pachycephalosaurians:DinosaurGroup {name: 'Pachycephalosaurians'})\nCREATE (Ornithopods:DinosaurGroup {name: 'Ornithopods'})\nCREATE (Coelurosaurs:DinosaurGroup {name: 'Coelurosaurs'})\nCREATE (Maniraptora:DinosaurGroup {name: 'Maniraptora'})\n\n# Create relationships between the dinosaur groups\nMATCH (o:DinosaurGroup {name: 'Ornithischia'}), (s:DinosaurGroup {name: 'Saurischia'})\nCREATE (o)-[:SUBGROUP_OF]->(s)\n\nMATCH (t:DinosaurGroup {name: 'Theropoda'}), (s:DinosaurGroup {name: 'Saurischia'})\nCREATE (t)-[:SUBGROUP_OF]->(s)\n\nMATCH (sm:DinosaurGroup {name: 'Sauropodomorpha'}), (s:DinosaurGroup {name: 'Saurischia'})\nCREATE (sm)-[:SUBGROUP_OF]->(s)\n\nMATCH (a:DinosaurGroup {name: 'Ankylosaurians'}), (o:DinosaurGroup {name: 'Ornithischia'})\nCREATE (a)-[:SUBGROUP_OF]->(o)\n\nMATCH (st:DinosaurGroup {name: 'Stegosaurians'}), (o:DinosaurGroup {name: 'Ornithischia'})\nCREATE (st)-[:SUBGROUP_OF]->(o)\n\n# And so on for the remaining groups...\n\n# Create nodes for specific dinosaurs and their attributes\nCREATE (Triceratops:Dinosaur {name: 'Triceratops', period: 'Late Cretaceous', diet: 'Herbivorous'})\nCREATE (Megalosaurus:Dinosaur {name: 'Megalosaurus', period: 'Middle Jurassic', diet: 'Carnivorous'})\nCREATE (Iguanodon:Dinosaur {name: 'Iguanodon', period: 'Early Cretaceous', diet: 'Herbivorous'})\nCREATE (Passer:Dinosaur {name: 'Passer', period: 'Modern', diet: 'Omnivorous'})\nCREATE (Diplodocus:Dinosaur {name: 'Diplodocus', period: 'Late Jurassic', diet: 'Herbivorous'})\nCREATE (Herrerasaurus:Dinosaur {name: 'Herrerasaurus', period: 'Late Triassic', diet: 'Carnivorous'})\nCREATE (Hylaeosaurus:Dinosaur {name: 'Hylaeosaurus', period: 'Early Cretaceous', diet: 'Herbivorous'})\nCREATE (Hadrosaurus:Dinosaur {name: 'Hadrosaurus', period: 'Late Cretaceous', diet: 'Herbivorous'})\nCREATE (Rutellum:Dinosaur {name: 'Rutellum', period: 'Late Triassic', diet: 'Carnivorous'})\n\n# Create relationships between dinosaurs and their groups\nMATCH (t:Dinosaur {name: 'Triceratops'}), (o:DinosaurGroup {name: 'Ornithischia'})\nCREATE (t)-[:BELONGS_TO]->(o)\n\nMATCH (m:Dinosaur {name: 'Megalosaurus'}), (t:DinosaurGroup {name: 'Theropoda'})\nCREATE (m)-[:BELONGS_TO]->(t)\n\n# And so on for the remaining dinosaurs...\n\n# Create relationships between dinosaurs based on evolutionary lineage\nMATCH (t:Dinosaur {name: 'Triceratops'}), (p:Dinosaur {name: 'Passer'})\nCREATE (t)-[:EVOLVED_INTO]->(p)\n\nMATCH (m:Dinosaur {name: 'Megalosaurus'}), (i:Dinosaur {name: 'Iguanodon'})\nCREATE (m)-[:EVOLVED_INTO]->(i)\n\n# Create nodes for notable people and their contributions\nCREATE (RichardOwen:Person {name: 'Richard Owen', contribution: 'Coined the term \"Dinosaur\"'})\nCREATE (MaryAnnMantell:Person {name: 'Mary Ann Mantell', contribution: 'Discovered Iguanodon fossils'})\nCREATE (GideonMantell:Person {name9: 'Gideon Mantell', contribution: 'Recognized similarities between Iguanodon and modern iguanas'})\nCREATE (RobertPlot:Person {name: 'Robert Plot', contribution: 'Described the first known dinosaur bone'})\nCREATE (EdwardLhuyd:Person {name: 'Edward Lhuyd', contribution: 'Published the first scientific treatment of a dinosaur'})\nCREATE (WilliamBuckland:Person {name: 'William Buckland', contribution: 'Collected and described Megalosaurus fossils'})\n\n# Create relationships between people and dinosaurs\nMATCH (ro:Person {name: 'Richard Owen'}), (h:Dinosaur {name: 'Hylaeosaurus'})\nCREATE (ro)-[:DESCRIBED]->(h)\n\nMATCH (ma:Person {name: 'Mary Ann Mantell'}), (i:Dinosaur {name: 'Iguanodon'})\nCREATE (ma)-[:DISCOVERED]->(i)\n\n# And so on for the remaining people and dinosaurs...\n```\n\nThis is just a small subset of the relationships and entities mentioned in the text. You can continue to create more nodes and relationships to fully capture the knowledge graph.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 24,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 6,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 6,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 105.95524311065674
  },
  {
    "url": "https://en.wikipedia.org/wiki/Limerick_(poetry)",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n```\n// Create nodes for key entities\nCREATE (Limerick:Entity {name: 'Limerick', description: 'Form of verse'})\nCREATE (England:Location {name: 'England'})\nCREATE (Refrain:Entity {name: 'Refrain'})\nCREATE (LimerickSong:Entity {name: 'Limerick Song', description: 'Humorous drinking song with obscene verses'})\nCREATE (Verse:Entity {name: 'Verse'})\nCREATE (Anapestic:Entity {name: 'Anapestic', description: 'Type of meter'})\nCREATE (Amphibrach:Entity {name: 'Amphibrach', description: 'Type of meter'})\nCREATE (RhymeScheme:Entity {name: 'Rhyme Scheme'})\nCREATE (Lear:Person {name: 'Edward Lear', description: 'Popularized limericks'})\nCREATE (Folklore:Entity {name: 'Folklore'})\nCREATE (Legman:Person {name: 'Gershon Legman', description: 'Anthologist of limericks'})\nCREATE (Anthology:Entity {name: 'Anthology', description: 'Collection of limericks'})\nCREATE (Women:Entity {name: 'Women'})\nCREATE (CleanLimerick:Entity {name: 'Clean Limerick'})\nCREATE (Humour:Entity {name: 'Humour'})\nCREATE (StandardForm:Entity {name: 'Standard Form', description: 'Standard form of a limerick'})\nCREATE (Stanza:Entity {name: 'Stanza'})\nCREATE (FirstLine:Entity {name: 'First Line'})\nCREATE (Stress:Entity {name: 'Speech Stress'})\nCREATE (GeographicalNames:Entity {name: 'Geographical Names'})\nCREATE (Twist:Entity {name: 'Twist'})\nCREATE (Abercrombie:Person {name: 'David Abercrombie', description: 'Phonetician'})\nCREATE (Ireland:Location {name: 'Ireland'})\nCREATE (MaiguePoets:Group {name: 'Maigue Poets'})\nCREATE (ParlourGame:Entity {name: 'Parlour Game'})\nCREATE (NewEnglishDictionary:Entity {name: 'New English Dictionary'})\nCREATE (RusticMallory:Person {name: 'Rustic Mallory'})\nCREATE (BookOfNonsense:Book {name: 'A Book of Nonsense', author: 'Edward Lear', year: 1846})\nCREATE (MoreNonsense:Book {name: 'More Nonsense Pictures, Rhymes, Botany, etc.', author: 'Edward Lear', year: 1872})\nCREATE (NonsenseLiterature:Entity {name: 'Nonsense Literature'})\nCREATE (AbsurdIllustration:Entity {name: 'Absurd Illustration'})\nCREATE (Parody:Entity {name0 'Parody'})\nCREATE (Japan:Location {name: 'Japan'})\nCREATE (WSPeriod:Person {name: 'W.S. Gilbert'})\nCREATE (JohnClarke:Person {name: 'John Clarke'})\nCREATE (EzraHaberGlenn:Person {name: 'Ezra Haber Glenn', description: 'Film reviewer'})\nCREATE (Filmerick:Entity {name: 'Filmerick', description: 'Blend of limerick and film review'})\nCREATE (DeSica:Person {name: 'Vittorio De Sica', description: 'Italian filmmaker'})\nCREATE (BicycleThieves:Movie {name: 'Bicycle Thieves', director: 'Vittorio De Sica'})\nCREATE (LeighMercer:Person {name: 'Leigh Mercer', description: 'Wordplay and recreational mathematics expert'})\nCREATE (MathematicalLimerick:Entity {name: 'Mathematical Limerick'})\n\n// Create relationships between entities\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Refrain'})\nCREATE (a)-[:COMBINED_WITH]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Limerick Song'})\nCREATE (a)-[:FORMS]->(b)\n\nMATCH (a:Entity {name: 'Limerick Song'}), (b:Entity {name: 'Verse'})\nCREATE (a)-[:CONSISTS_OF]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Anapestic'})\nCREATE (a)-[:WRITTEN_IN]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Amphibrach'})\nCREATE (a)-[:WRITTEN_IN]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Rhyme Scheme'})\nCREATE (a)-[:HAS]->(b)\n\nMATCH (a:Entity {name: 'Rhyme Scheme'}), (b:Entity {name: 'AABBA'})\nCREATE (a)-[:OF_TYPE]->(b)\n\nMATCH (a:Person {name: 'Edward Lear'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:POPULARIZED]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Folklore'})\nCREATE (a)-[:FROM_A]->(b)\n\nMATCH (a:Person {name: 'Gershon Legman'}), (b:Entity {name: 'Anthology'})\nCREATE (a)-[:COMPILED]->(b)\n\nMATCH (a:Entity {name: 'Anthology'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:OF]->(b)\n\nMATCH (a:Entity {name: 'Women'}), (b:Entity {name: 'Limericks'})\nCREATE (a)-[:FIGURING_IN]->(b)\n\nMATCH (a:Person {name: 'Gershon Legman'}), (b:Entity {name: 'Clean Limerick'})\nCREATE (a)-[:DISMISSED]->(b)\n\nMATCH (a:Entity {name: 'Clean Limerick'}), (b:Entity {name: 'Humour'})\nCREATE (a)-[:NOT_IN]->(b)\n\nMATCH (a:Entity {name: 'Humour'}), (b:Entity {name: 'Punch Line'})\nCREATE (a)-[:NOT_IN]->(b)\n\nMATCH (a:Entity {name: 'Humour'}), (b:Entity {name: 'Tension'})\nCREATE (a)-[:IN]->(b)\n\nMATCH (a:Entity {name: 'Tension'}), (b:Entity {name: 'Meaning'})\nCREATE (a)-[:BETWEEN]->(b)\n\nMATCH (a:Entity {name: 'Standard Form'}), (b:Entity {name: 'Stanza'})\nCREATE (a)-[:IS_A]->(b)\n\nMATCH (a:Entity {name: 'Stanza'}), (b:Entity {name: 'Five Lines'})\nCREATE (a)-[:OF]->(b)\n\nMATCH (a:Entity {name: 'First Line'}), (b:Entity {name: 'Person'})\nCREATE (a)-[:INTRODUCES]->(b)\n\nMATCH (a:Entity {name: 'First Line'}), (b:Entity {name: 'Place'})\nCREATE (a)-[:INTRODUCES]->(b)\n\nMATCH (a:Entity {name: 'First Line'}), (b:Entity {name: 'Rhyme Scheme'})\nCREATE (a)-[:ESTABLISHES]->(b)\n\nMATCH (a:Entity {name: 'Speech Stress'}), (b:Entity {name: 'First Line'})\nCREATE (a)-[:DISTORTED_IN]->(b)\n\nMATCH (a:Entity {name: 'Geographical Names'}), (b:Entity {name: 'Exotic Ones'})\nCREATE (a)-[:EXPLOTATION_OF]->(b)\n\nMATCH (a:Entity {name: 'Geographical Names'}), (b:Entity {name: 'Schoolroom'})\nCREATE (a)-[:SUBTERTING_DECORUM_OF]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Entity {name: 'Twist'})\nCREATE (a)-[:INCORPORATES]->(b)\n\nMATCH (a:Person {name: 'David Abercrombie'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:TAKES_DIFFERENT_VIEW_OF]->(b)\n\nMATCH (a:Entity {name: 'Limerick'}), (b:Location {name: 'Ireland'})\nCREATE (a)-[:NAMED_AFTER]->(b)\n\nMATCH (a:Location {name: 'Ireland'}), (b:Group {name: 'Maigue Poets'})\nCREATE (a)-[:PARTICULARLY_TO]->(b)\n\nMATCH (a:Entity {name: 'Parlour Game'}), (b:Entity {name: 'Refrain'})\nCREATE (a)-[:INCLUDES]->(b)\n\nMATCH (a:Entity {name: 'Refrain'}), (b:Text {text: 'Will [or won\\'t] you come (up) to Limerick?'})\nCREATE (a)-[:INCLUDES_TEXT]->(b)\n\nMATCH (a:Entity {name: 'New English Dictionary'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:RECORDS_FIRST_USAGE_OF]->(b)\n\nMATCH (a:Entity {name: 'Rustic Mallory'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:MENTIONS]->(b)\n\nMATCH (a:Book {name: 'A Book of Nonsense'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:POPULARIZED]->(b)\n\nMATCH (a:Book {name: 'More Nonsense Pictures, Rhymes, Botany, etc.'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:POPULARIZED]->(b)\n\nMATCH (a:Entity {name: 'Nonsense Literature'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:CLASSIFIED_AS]->(b)\n\nMATCH (a:Entity {name: 'Absurd Illustration'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:ACCOMPANIES]->(b)\n\nMATCH (a:Entity {name: 'Final Line'}), (b:Entity {name: 'First Line'})\nCREATE (a)-[:VARIATION_OF]->(b)\n\nMATCH (a:Entity {name: 'Parody'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:OF]->(b)\n\nMATCH (a:Location {name: 'Japan'}), (b:Entity {name: 'Parody'})\nCREATE (a)-[:ORIGIN_OF]->(b)\n\nMATCH (a:Person {name: 'W.S. Gilbert'}), (b:Entity {name: 'Rhyme Scheme'})\nCREATE (a)-[:BROKE]->(b)\n\nMATCH (a:Person {name: 'John Clarke'}), (b:Entity {name: 'Parody'})\nCREATE (a)-[:OF_STYLE_OF]->(b)\n\nMATCH (a:Person {name: 'Ezra Haber Glenn'}), (b:Entity {name: 'Filmerick'})\nCREATE (a)-[:CREATED]->(b)\n\nMATCH (a:Entity {name: 'Filmerick'}), (b:Entity {name: 'Limerick'})\nCREATE (a)-[:BLEND_OF]->(b)\n\nMATCH (a:Person {name: 'Vittorio De Sica'}), (b:Movie {name: 'Bicycle Thieves'})\nCREATE (a)-[:DIRECTED]->(b)\n\nMATCH (a:Entity {name: 'Mathematical Limerick'}), (b:Person {name: 'Leigh Mercer'})\nCREATE (a)-[:CREATED_BY]->(b)\n```",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 33,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 38,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 37,
      "Incorrectly Labelled Relationships": 3
    },
    "execution_time_in_seconds": 142.2412838935852
  },
  {
    "url": "https://en.wikipedia.org/wiki/List_of_Nobel_laureates_in_Physics",
    "queries": "Here are the Cypher queries to create a knowledge graph from the given text:\n```\n# Create nodes for entities\nCREATE (nobelPrize:Award {name: 'Nobel Prize', type: 'Physics'})\nCREATE (academy:Organization {name: 'Royal Swedish Academy of Sciences'})\nCREATE (nobelFoundation:Organization {name: 'Nobel Foundation'})\nCREATE (Wilhelm:Person {name: 'Wilhelm Conrad R\u00f6ntgen', country: 'Germany'})\nCREATE (John:Person {name: 'John Bardeen'})\nCREATE (William:Person {name: 'William Lawrence Bragg'})\nCREATE (Malala:Person {name: 'Malala Yousafzai'})\nCREATE (Arthur:Person {name: 'Arthur Ashkin'})\nCREATE (Marie:Person {name: 'Marie Curie'})\nCREATE (Maria:Person {name: 'Maria Goeppert-Mayer'})\nCREATE (Donna:Person {name: 'Donna Strickland'})\nCREATE (Andrea:Person {name: 'Andrea Ghez'})\nCREATE (Anne:Person {name: 'Anne L'Huillier'})\n\n# Create relationships between entities\nMATCH (nobelPrize), (academy)\nCREATE (nobelPrize)<-[r:AWARDED_BY]-(academy)\n\nMATCH (nobelPrize), (nobelFoundation)\nCREATE (nobelPrize)<-[r:ADMINISTERED_BY]-(nobelFoundation)\n\nMATCH (nobelPrize), (Wilhelm)\nCREATE (nobelPrize)<-[r:AWARDED_TO]-(Wilhelm)\nSET r.year = 1901, r.amount = 150782\n\nMATCH (nobelPrize), (John)\nCREATE (nobelPrize)<-[r1:AWARDED_TO]-(John)\nCREATE (nobelPrize)<-[r2:AWARDED_TO]-(John)\nSET r1.year = 1956, r2.year = 1972\n\nMATCH (nobelPrize), (William)\nCREATE (nobelPrize)<-[r:AWARDED_TO]-(William)\nSET r.year = 1915\n\nMATCH (William), (Malala)\nCREATE (William)-[:YOUNGEST_UNTIL]->(Malala)\nSET William.youngestYear = 1915, Malala.youngestYear = 2014\n\nMATCH (nobelPrize), (Arthur)\nCREATE (nobelPrize)<-[r:AWARDED_TO]-(Arthur)\nSET r.year = 2018\n\nMATCH (nobelPrize)-[:AWARDED_TO]->(Marie)\nCREATE (nobelPrize)-[:AWARDED_TO]->(Maria)\nCREATE (nobelPrize)-[:AWARDED_TO]->(Donna)\nCREATE (nobelPrize)-[:AWARDED_TO]->(Andrea)\nCREATE (nobelPrize)-[:AWARDED_TO]->(Anne)\n\n# Create relationships for women winners\nMATCH (Marie)<-[:AWARDED_TO]-(nobelPrize)\nCREATE (Marie)-[:WOMEN_WINNER]->(nobelPrize)\n\nMATCH (Maria)<-[:AWARDED_TO]-(nobelPrize)\nCREATE (Maria)-[:WOMEN_WINNER]->(nobelPrize)\n\nMATCH (Donna)<-[:AWARDED_TO]-(nobelPrize)\nCREATE (Donna)-[:WOMEN_WINNER]->(nobelPrize)\n\nMATCH (Andrea)<-[:AWARDED_TO]-(nobelPrize)\nCREATE (Andrea)-[:WOMEN_WINNER]->(nobelPrize)\n\nMATCH (Anne)<-[:AWARDED_TO]-(nobelPrize)\nCREATE (Anne)-[:WOMEN_WINNER]->(nobelPrize)\n\n# Create relationships for years when the prize was not awarded\nCREATE (nobelPrize)<-[:NOT_AWARDED_YEAR {year: 1916}]-(:Year)\nCREATE (nobelPrize)<-[:NOT_AWARDED_YEAR {year: 1931}]-(:Year)\nCREATE (nobelPrize)<-[:NOT_AWARDED_YEAR {year: 1934}]-(:Year)\nCREATE (nobelPrize)<-[:NOT_AWARDED_YEAR {year: 1940}]-(:Year)\nCREATE (nobelPrize)<-[:NOT_AWARDED_YEAR {year: 1941}]-(:Year)\nCREATE (nobelPrize)<-[:NOT_AWARD_YEAR {year: 1942}]-(:Year)\n\n# Create relationships for years when the prize was delayed\nCREATE (nobelPrize)<-[:DELAYED_YEAR {year: 19XX}]-(:Year)  # Repeat for all nine years\n\n# Create relationships for disciplines dominating the prize\nCREATE (ParticlePhysics:Discipline {name: 'Particle Physics'})\nCREATE (AtomicPhysics:Discipline {name: 'Atomic Physics'})\nCREATE (SemiconductorPhysics:Discipline {name: 'Semiconductor Physics'})\nCREATE (Magnetics:Discipline {name: 'Magnetics'})\n\nMATCH (nobelPrize), (ParticlePhysics)\nCREATE (nobelPrize)<-[r:DOMINATED_BY]-(ParticlePhysics)\nSET r.percentage = 14\n\nMATCH (nobelPrize), (AtomicPhysics)\nCREATE (nobelPrize)<-[r:DOMINATED_BY]-(AtomicPhysics)\nSET r.percentage = 10.9\n\nMATCH (nobelPrize), (SemiconductorPhysics)\nCREATE (nobelPrize)<-[r:DOMINATED_BY]-(SemiconductorPhysics)\n\nMATCH (nobelPrize), (Magnetics)\nCREATE (nobelPrize)<-[r:DOMINATED_BY]-(Magnetics)\n```\n\nThese queries create nodes for entities such as the Nobel Prize, organizations, and individuals. Relationships are established between these entities, capturing information like awardees, administering organizations, years when the prize was not awarded or delayed, and disciplines dominating the prize. Additional relationships are created for specific cases, such as the youngest laureate, oldest laureate, and women winners.",
    "summary": {
      "Syntax Errors": 3,
      "Correctly Created Nodes": 15,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 20,
      "Incorrectly Created Relationships": 2,
      "Correctly Labelled Relationships": 21,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 138.22194528579712
  },
  {
    "url": "https://en.wikipedia.org/wiki/Ice_cream",
    "queries": "Here are the Cypher queries to create a knowledge graph from the provided text:\n\n```\n# Create nodes for main entities\nCREATE (IceCream {name: 'Ice Cream', type: 'Dessert'})\nCREATE (Milk {name: 'Milk', type: 'Dairy Product'})\nCREATE (Cream {name: 'Cream', type: 'Dairy Product'})\nCREATE (Sweetener {name: 'Sweetener', type: 'Food Additive'})\nCREATE (Sugar {name: 'Sugar', type: 'Sweetener'})\nCREATE (Cocoa {name: 'Cocoa', type: 'Spice'})\nCREATE (Vanilla {name: 'Vanilla', type: 'Spice'})\nCREATE (Fruit {name: 'Fruit', type: 'Food Group'})\nCREATE (Strawberries {name: 'Strawberries', type: 'Fruit', belongs_to: 'Fruit'})\nCREATE (Peaches {name: 'Peaches', type: 'Fruit', belongs_to: 'Fruit'})\nCREATE (FoodColouring {name: 'Food Colouring', type: 'Food Additive'})\nCREATE (Stabilizers {name: 'Stabilizers', type: 'Food Additive'})\nCREATE (AirSpaces {name: 'Air Spaces', type: 'Property'})\nCREATE (IceCrystals {name: 'Ice Crystals', type: 'Property'})\nCREATE (LiquidNitrogen {name: 'Liquid Nitrogen', type: 'Substance'})\nCREATE (SemiSolidFoam {name: 'Semi-Solid Foam', type: 'Property'})\nCREATE (Malleable {name: 'Malleable', type: 'Property'})\nCREATE (Dishes {name: 'Dishes', type: 'Tableware'})\nCREATE (Spoon {name: 'Spoon', type: 'Cutlery'})\nCREATE (IceCreamCone {name: 'Ice Cream Cone', type: 'Edible Container'})\nCREATE (FingerFood {name: 'Finger Food', type: 'Food Category'})\nCREATE (Cake {name: 'Cake', type: 'Dessert'})\nCREATE (Pie {nameMultiplier: 'Pie', type: 'Dessert'})\nCREATE (IceCreamFloat {name: 'Ice Cream Float', type: 'Beverage'})\nCREATE (Sundae {name: 'Sundae', type: 'Dessert'})\nCREATE (Milkshake {name: 'Milkshake', type: 'Beverage'})\nCREATE (IceCreamCake {name: 'Ice Cream Cake', type: 'Dessert'})\nCREATE (BakedAlaska {name: 'Baked Alaska', type: 'Dessert'})\nCREATE (ItalianIceCream {name: 'Gelato', alias: 'Italian Ice Cream', type: 'Ice Cream Variant'})\nCREATE (FrozenCustard {name: 'Frozen Custard', type: 'Ice Cream Variant'})\nCREATE (SoftServe {name: 'Soft Serve', type: 'Ice Cream Variant'})\nCREATE (CowMilk {name: 'Cow's Milk', type: 'Milk Variant'})\nCREATE (GoatMilk {name: 'Goat's Milk', type: 'Milk Variant'})\nCREATE (SheepMilk {name: 'Sheep's Milk', type: 'Milk Variant'})\nCREATE (MilkSubstitute {name: 'Milk Substitute', type: 'Dairy Alternative'})\nCREATE (SoyMilk {name: 'Soy Milk', type: 'Milk Substitute'})\nCREATE (CashewMilk {name: 'Cashew Milk', type: 'Milk Substitute'})\nCREATE (CoconutMilk {name: 'Coconut Milk', type: 'Milk Substitute'})\nCREATE (AlmondMilk {name: 'Almond Milk', type: 'Milk Substitute'})\nCREATE (Tofu {name: 'Tofu', type: 'Milk Substitute'})\nCREATE (BananaNiceCream {name: 'Banana Nice Cream', type: 'Vegan Ice Cream'})\nCREATE (FrozenYogurt {name: 'Frozen Yogurt', alias: 'Froyo', type: 'Ice Cream Variant'})\nCREATE (Sorbets {name: 'Sorbets', type: 'Dessert'})\nCREATE (Sherbets {name: 'Sherbets', type: 'Dessert'})\nCREATE (Persia {name: 'Persia', type: 'Historical Region', current_name: 'Iran'})\nCREATE (Rome {name: 'Rome', type: 'Historical Empire'})\nCREATE (Japan {name: 'Japan', type: 'Country'})\nCREATE (HeianPeriod {name: 'Heian Period', type: 'Historical Era', belongs_to: 'Japan'})\nCREATE (Kakigori {name: 'Kakigori', type: 'Japanese Dessert'})\nCREATE (SeiShonagon {name: 'Sei Shonagon', type: 'Author'})\nCREATE (IbnAbuUsaybia {name: 'Ibn Abu Usaybia', type: 'Historian'})\nCREATE (IbnBakhtawayhi {name: 'Ibn Bakhtawayhi', type: 'Author'})\nCREATE (MughalEmpire {name: 'Mughal Empire', type: 'Historical Empire'})\nCREATE (HinduKush {name: 'Hindu Kush', type: 'Mountain Range'})\nCREATE (Delhi {name: 'Delhi', type: 'City', belongs_to: 'India'})\nCREATE (Kulfi {name: 'Kulfi', type: 'Indian Dessert'})\nCREATE (MarcoPolo {name: 'Marco Polo', type: 'Explorer'})\nCREATE (CatherineDeMedici {name: 'Catherine de' Medici', type: 'Italian Duchess'})\nCREATE (HenryII {name: 'Henry II', type: 'Monarch', alias: 'Duke of Orl\u00e9ans'})\nCREATE (CharlesI {name: 'Charles I', type: 'Monarch', alias: 'King of England'})\nCREATE (JeanFargeon {name: 'Jean Fargeon', type: 'Editor'})\nCREATE (Montpellier {name: 'Montpellier', type: 'City', belongs_to: 'France'})\nCREATE (LIsleDesHermaphrodites {name: 'L'Isle des Hermaphrodites', type: 'Book'})\nCREATE (LouisXIII {name: 'Louis XIII', type: 'Monarch', alias: 'King of France'})\nCREATE (LeNouveauConfiturierFrancois {name: 'Le Nouveau Confiturier Francois', type: 'Book'})\nCREATE (FrancescoDeiColtelli {name: 'Francesco dei Coltelli', type: 'Italian'})\nCREATE (Paris {name: 'Paris', type: 'City', belongs_to: 'France'})\nCREATE (EliasAshmole {name: 'Elias Ashmole', type: 'Author'})\nCREATE (CharlesII {name: 'Charles II', type: 'Monarch', alias: 'King of England'})\nCREATE (MaryEales {name: 'Mary Eales', type: 'Author'})\nCREATE (London {name: 'London', type: 'City', belongs_to: 'England'})\nCREATE (HannahGlasse {name: 'Hannah Glasse', type: 'Author'})\nCREATE (M_Emy {name: 'M. Emy', type: 'Author'})\nCREATE (DomenicoNegri {name: 'Domenico Negri', type: 'Italian Confectioner'})\nCREATE (BerkeleySquare {name: 'Berkeley Square', type: 'Location', belongs_to: 'London'})\nCREATE (FrederickNutt {name: 'Frederick Nutt', type: 'Apprentice'})\nCREATE (NorthAmerica {name: 'North America', type: 'Continent'})\nCREATE (BenFranklin {name: 'Ben Franklin', type: 'Politician'})\nCREATE (GeorgeWashington {name: 'George Washington', type: 'President'})\nCREATE (ThomasJefferson {name: 'Thomas Jefferson', type: 'President'})\nCREATE (ChathamStreet {name: 'Chatham Street', type: 'Street', belongs_to: 'New York'})\nCREATE (NewYork {name: 'New York', type: 'City', belongs_to: 'USA'})\nCREATE (DolleyMadison {name: 'Dolley Madison', type: 'First Lady'})\nCREATE (JamesMadison {name: 'James Madison', type: 'President'})\nCREATE (AgnesMarshall {name: 'Agnes Marshall', alias: 'Queen of Ices', type: 'English Chef'})\nCREATE (NancyJohnson {name: 'Nancy Johnson', type: 'Inventor'})\nCREATE (Mediterranean {name: 'Mediterranean', type: 'Region'})\nCREATE (CarloGatti {name: 'Carlo Gatti', type: 'Swiss Emigr\u00e9'})\nCREATE (CharingCross {name: 'Charing Cross', type: 'Location', belongs_to: 'London'})\nCREATE (RegentsCanal {name: 'Regent's Canal', type: 'Canal', belongs_to: 'London'})\nCREATE (Norway {name: 'Norway', type: 'Country'})\nCREATE (NewZealand {name: 'New Zealand', type: 'Country'})\nCREATE (Wellington {name: 'Wellington', type: 'City', belongs_to: 'New Zealand'})\nCREATE (Matcha {name: 'Matcha', type: 'Flavor'})\nCREATE (Asia {name: 'Asia', type: 'Continent'})\nCREATE (RobertGreen {name: 'Robert Green', type: 'American'})\nCREATE (Buffalo {name: 'Buffalo', type: 'City', belongs_to: 'USA'})\nCREATE (TwoRivers {name: 'Two Rivers', type: 'City', belongs_to: 'USA'})\nCREATE (Ithaca {name: 'Ithaca', type: 'City', belongs_to: 'USA'})\nCREATE (Evanston {name: 'Evanston', type: 'City', belongs_to: 'USA'})\n\n# Create relationships between entities\nMATCH (ic:IceCream)\nMATCH (m:Milk)\nMATCH (c:Cream)\nCREATE (ic)-[:MADE_FROM]->(m)\nCREATE (ic)-[:MADE_FROM]->(c)\n\nMATCH (ic:IceCream)\nMATCH (s:Sweetener)\nMATCH (su:Sugar)\nMATCH (co:Cocoa)\nMATCH (va:Vanilla)\nCREATE (ic)-[:FLAVOURED_WITH]->(s)\nCREATE (s)-[:TYPE_OF]->(su)\nCREATE (s)-[:TYPE_OF]->(co)\nCREATE (s)-[:TYPE_OF]->(va)\n\nMATCH (ic:IceCream)\nMATCH (f:Fruit)\nMATCH (st:Strawberries)\nMATCH (pe:Peaches)\nCREATE (ic)-[:FLAVOURED_WITH]->(f)\nCREATE (f)-[:TYPE_OF]->(st)\nCREATE (f)-[:TYPE_OF]->(pe)\n\nMATCH (ic:IceCream)\nMATCH (fc:FoodColouring)\nMATCH (st:Stabilizers)\nCREATE (ic)-[:CONTAINS]->(fc)\nCREATE (ic)-[:CONTAINS]->(st)\n\nMATCH (ic:IceCream)\nMATCH (as:AirSpaces)\nMATCH (icr:IceCrystals)\nCREATE (ic)-[:INCORPORATES]->(as)\nCREATE (ic)-[:PREVENTS_FORMATION_OF]->(icr)\n\nMATCH (ic:IceCream)\nMATCH (ln:LiquidNitrogen)\nMATCH (ssf:SemiSolidFoam)\nCREATE (ic)-[:MADE_BY_MIXING]->(ln)\nCREATE (ic)-[:RESULTS_IN]->(ssf)\n\nMATCH (ic:IceCream)\nMATCH (ssf:SemiSolidFoam)\nMATCH (m:Malleable)\nCREATE (ssf)-[:IS]->(m)\nCREATE (m)-[:INCREASES_WITH]->(ic)\n\nMATCH (ic:IceCream)\nMATCH (d:Dishes)\nMATCH (sp:Spoon)\nCREATE (ic)-[:SERVED_IN]->(d)\nCREATE (ic)-[:EATEN_WITH]->(sp)\n\nMATCH (ic:IceCream)\nMATCH (icec:IceCreamCone)\nMATCH (ff:FingerFood)\nCREATE (ic)-[:SERVED_IN]->(icec)\nCREATE (icec)-[:BELONGS_TO]->(ff)\n\nMATCH (ic:IceCream)\nMATCH (ca:Cake)\nMATCH (pi:Pie)\nCREATE (ic)-[:SERVED_WITH]->(ca)\nCREATE (ic)-[:SERVED_WITH]->(pi)\n\nMATCH (ic:IceCream)\nMATCH (icf:IceCreamFloat)\nMATCH (su:Sundae)\nMATCH (ms:Milkshake)\nMATCH (icc:IceCreamCake)\nMATCH (ba:BakedAlaska)\nCREATE (ic)-[:USED_AS_INGREDIENT_IN]->(icf)\nCREATE (ic)-[:USED_AS_INGREDIENT_IN]->(su)\nCREATE (ic)-[:USED_AS_INGREDIENT_IN]->(ms)\nCREATE (ic)-[:USED_AS_INGREDIENT_IN]->(icc)\nCREATE (ic)-[:USED_AS_INGREDIENT_IN]->(ba)\n\nMATCH (ic:IceCream)\nMATCH (it:ItalianIceCream)\nMATCH (fc:FrozenCustard)\nMATCH (ss:SoftServe)\nCREATE (it)-[:IS_A]->(ic)\nCREATE (fc)-[:IS_A]->(ic)\nCREATE (ss)-[:IS_A]->(ic)\n\nMATCH (ic:IceCream)\nMATCH (cm:CowMilk)\nMATCH (gm:GoatMilk)\nMATCH (sm:SheepMilk)\nCREATE (cm)-[:TYPE_OF]->(ic)\nCREATE (gm)-[:TYPE_OF]->(ic)\nCREATE (sm)-[:TYPE_OF]->(ic)\n\nMATCH (ic:IceCream)\nMATCH (ms:MilkSubstitute)\nMATCH (sm:SoyMilk)\nMATCH (cm:CashewMilk)\nMATCH (co:CoconutMilk)\nMATCH (am:AlmondMilk)\nMATCH (to:Tofu)\nCREATE (ms)-[:IS_A]->(ic)\nCREATE (sm)-[:TYPE_OF]->(ms)\nCREATE (cm)-[:TYPE_OF]->(ms)\nCREATE (co)-[:TYPE_OF]->(ms)\nCREATE (am)-[:TYPE_OF]->(ms)\nCREATE (to)-[:TYPE_OF]->(ms)\n\nMATCH (ic:IceCream)\nMATCH (bn:BananaNiceCream)\nMATCH (fy:FrozenYogurt)\nCREATE (bn)-[:IS_A_VEGAN_ALTERNATIVE_OF]->(ic)\nCREATE (fy)-[:IS_A_LOWER_FAT_ALTERNATIVE_OF]->(ic)\n\nMATCH (ic:IceCream)\nMATCH (so:Sorbets)\nMATCH (sh:Sherbets)\nCREATE (so)-[:IS_NOT]->(ic)\nCREATE (sh)-[:IS_NOT]->(ic)\n\nMATCH (ic:IceCream)\nMATCH (pe:Persia)\nMATCH (ro:Rome)\nCREATE (ic)-[:ORIGINATED_IN]->(pe)\nCREATE (ic)-[:RECIPES_FOUND_IN]->(ro)\n\nMATCH (ic:IceCream)\nMATCH (ja:Japan)\nMATCH (hp:HeianPeriod)\nMATCH (ka:Kakigori)\nCREATE (ic)-[:HAS_ORIGIN_IN]->(ja)\nCREATE (ka)-[:ORIGINATED_DURING]->(hp)\n\nMATCH (ic:IceCream)\nMATCH (ib:IbnAbuUsaybia)\nMATCH (ibh:IbnBakhtawayhi)\nCREATE (ib)-[:ATTRIBUTED_TO]->(ic)\nCREATE (ib)-[:ATTRIBUTED_TO]->(ibh)\n\nMATCH (ic:IceCream)\nMATCH (me:MughalEmpire)\nMATCH (hk:HinduKush)\nCREATE (ic)-[:PRODUCTION_EASED_BY]->(me)\nCREATE (me)-[:USED_ICE_FROM]->(hk)\n\nMATCH (ic:IceCream)\nMATCH (dp:Delhi)\nCREATE (ic)-[:CREATED_IN]->(dp)\n\nMATCH (ic:IceCream)\nMATCH (mp:MarcoPolo)\nCREATE (ic)-[:SPREAD_ATTRIBUTED_TO]->(mp)\n\nMATCH (ic:IceCream)\nMATCH (cd:CatherineDeMedici)\nMATCH (hii:HenryII)\nCREATE (ic)-[:INTRODUCED_TO_FRANCE_BY]->(cd)\nCREATE (cd)-[:MARRIED]->(hii)\n\nMATCH (ic:IceCream)\nMATCH (jf:JeanFargeon)\nMATCH (mo:Montpellier)\nCREATE (ic)-[:MENTIONED_IN_CATALOGUE_BY]->(jf)\nCREATE (jf)-[:EDITED_IN]->(mo)\n\nMATCH (ic:IceCream)\nMATCH (lih:LIsleDesHermaphrodites)\nMATCH (lxiii:LouisXIII)\nCREATE (ic)-[:MENTIONED_IN_BOOK]->(lih)\nCREATE (lih)-[:MENTIONS_COOLING_BEVERAGES_DURING_ERA_OF]->(lxiii)\n\nMATCH (ic:IceCream)\nMATCH (lnf:LeNouveauConfiturierFrancois)\nCREATE (ic)-[:MENTIONED_IN_BOOK]->(lnf)\n\nMATCH (ic:IceCream)\nMATCH (fdc:FrancescoDeiColtelli)\nMATCH (pa:Paris)\nCREATE (ic)-[:POPULARIZED_IN]->(pa)\nCREATE (fdc)-[:OPENED_ICE_CREAM_CAFE_IN]->(pa)\n\nMATCH (ic:IceCream)\nMATCH (ea:EliasAshmole)\nCREATE (ic)-[:FIRST_RECORDED_MENTION_IN_ENGLAND_BY]->(ea)\n\nMATCH (ic:IceCream)\nMATCH (me:MaryEales)\nMATCH (lo:London)\nCREATE (ic)-[:FIRST_RECIPE_IN_ENGLISH_BY]->(me)\nCREATE (me)-[:PUBLISHED_IN]->(lo)\n\nMATCH (ic:IceCream)\nMATCH (hg:HannahGlasse)\nCREATE (ic)-[:RECIPE_BY]->(hg)\n\nMATCH (ic:IceCream)\nMATCH (my:M_Emy)\nCREATE (ic)-[:RECIPE_BOOK_BY]->(my)\n\nMATCH (ic:IceCream)\nMATCH (dn:DomenicoNegri)\nMATCH (bs:BerkeleySquare)\nCREATE (ic)-[:BUSINESS_FO",
    "summary": {
      "Syntax Errors": 1,
      "Correctly Created Nodes": 103,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 68,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 68,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 154.47084617614746
  },
  {
    "url": "https://en.wikipedia.org/wiki/Great_Wall_of_China",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create Nodes for Entities\nCREATE (theGreatWall:Entity {name: \"The Great Wall of China\", description: \"Series of fortifications built across historical northern borders of ancient Chinese states and Imperial China\"})\nCREATE (chineseStates:Entity {name: \"Ancient Chinese States\"})\nCREATE (imperialChina:Entity {name: \"Imperial China\"})\nCREATE (nomadicGroups:Entity {name: \"Nomadic Groups from the Eurasian Steppe\"})\nCREATE (QinShiHuang:Entity {name: \"Qin Shi Huang\", description: \"First Emperor of China\"})\nCREATE (MingDynasty:Entity {name: \"Ming Dynasty\"})\nCREATE (silkRoad:Entity {name: \"Silk Road\"})\nCREATE (watchtowers:Entity {name: \"Watchtowers\"})\nCREATE (signalTowers:Entity {name: \"Signaling Towers\"})\nCREATE (transportCorridor:Entity {name: \"Transportation Corridor\"})\nCREATE (mongolianSteppe:Entity {name: \"Mongolian Steppe\"})\nCREATE (quran:Entity {name: \"Quran\"})\nCREATE (dhulQarnayn:Entity {name: \"Dhul-Qarnayn\", description: \"Commonly associated with Alexander the Great\"})\nCREATE (gogs:Entity {name: \"Gogs\"})\nCREATE (magogs:Entity {name: \"Magogs\"})\nCREATE (europeanTravelers:Entity {name: \"European Travelers\"})\nCREATE (foreignMerchants:Entity {name: \"Foreign Merchants\"})\nCREATE (foreignVisitors:Entity {name: \"Foreign Visitors\"})\nCREATE (opiumWars:Entity {name: \"Opium Wars\"})\nCREATE (jiayuPass:Entity {name: \"Jiayu Pass\"})\nCREATE (shanhaiguan:Entity {name: \"Shanhaiguan\"})\nCREATE (yanqingCounty:Entity {name: \"Yanqing County\"})\nCREATE (badaling:Entity {name: \"Badaling\"})\nCREATE (zhangjiakou:Entity {name: \"Zhangjiakou\"})\nCREATE (juyongPass:Entity {name: \"Juyong Pass\"})\nCREATE (jinshanling:Entity {name: \"Jinshanling\"})\nCREATE (mutianyu:Entity {name: \"Mutianyu\"})\nCREATE (gubeikou:Entity {name: \"Gubeikou\"})\nCREATE (jiaoshan:Entity {name: \"Jiaoshan\"})\nCREATE (jiumenkou:Entity {name: \"Jiumenkou\"})\n\n# Create Relationships between Entities\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (chineseStates:Entity {name: \"Ancient Chinese States\"}), (imperialChina:Entity {name: \"Imperial China\"}), (nomadicGroups:Entity {name: \"Nomadic Groups from the Eurasian Steppe\"})\nCREATE (theGreatWall)-[:PROTECTS_AGAINST]->(nomadicGroups)\nCREATE (theGreatWall)-[:BUILT_BY]->(chineseStates)\nCREATE (theGreatWall)-[:BUILT_BY]->(imperialChina)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (QinShiHuang:Entity {name: \"Qin Shi Huang\"})\nCREATE (theGreatWall)-[:BUILT_BY]->(QinShiHuang)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (MingDynasty:Entity {name: \"Ming Dynasty\"})\nCREATE (theGreatWall)-[:BUILT_BY]->(MingDynasty)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (silkRoad:Entity {name: \"Silk Road\"})\nCREATE (theGreatWall)-[:REGULATES_TRADE_ON]->(silkRoad)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (watchtowers:Entity {name: \"Watchtowers\"}), (signalTowers:Entity {name: \"Signaling Towers\"}), (transportCorridor:Entity {name: \"Transportation Corridor\"})\nCREATE (theGreatWall)-[:ENHANCED_BY]->(watchtowers)\nCREATE (theGreatWall)-[:ENHANCED_BY]->(signalTowers)\nCREATE (theGreatWall)-[:ENHANCED_BY]->(transportCorridor)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (mongolianSteppe:Entity {name: \"Mongolian Steppe\"})\nCREATE (theGreatWall)-[:DELINEATES_EDGE_OF]->(mongolianSteppe)\n\nMATCH (quran:Entity {name: \"Quran\"}), (dhulQarnayn:Entity {name: \"Dhul-Qarnayn\"}), (gogs:Entity {name: \"Gogs\"}), (magogs:Entity {name: \"Magogs\"})\nCREATE (quran)-[:MENTIONS]->(dhulQarnayn)\nCREATE (dhulQarnayn)-[:PROTECTS_AGAINST]->(gogs)\nCREATE (dhulQarnayn)-[:PROTECTS_AGAINST]->(magogs)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (europeanTravelers:Entity {name: \"European Travelers\"})\nCREATE (theGreatWall)-[:VISITED_BY]->(europeanTravelers)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (foreignMerchants:Entity {name: \"Foreign Merchants\"}), (foreignVisitors:Entity {name: \"Foreign Visitors\"})\nCREATE (theGreatWall)-[:VISITED_BY]->(foreignMerchants)\nCREATE (theGreatWall)-[:VISITED_BY]->(foreignVisitors)\n\nMATCH (opiumWars:Entity {name: \"Opium Wars\"}), (foreignMerchants:Entity {name: \"Foreign Merchants\"}), (foreignVisitors:Entity {name: \"Foreign Visitors\"})\nCREATE (opiumWars)-[:INVOLVED]->(foreignMerchants)\nCREATE (opiumWars)-[:INVOLVED]->(foreignVisitors)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (jiayuPass:Entity {name: \"Jiayu Pass\"})\nCREATE (theGreatWall)-[:ENDS_AT]->(jiayuPass)\n\nMATCH (shanhaiguan:Entity {name: \"Shanhaiguan\"}), (yanqingCounty:Entity {name: \"Yanqing County\"})\nCREATE (shanhaiguan)-[:LOCATED_IN]->(yanqingCounty)\n\nMATCH (badaling:Entity {name: \"Badaling\"}), (zhangjiakou:Entity {name: \"Zhangjiakou\"})\nCREATE (badaling)-[:LOCATED_NEAR]->(zhangjiakou)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (juyongPass:Entity {name: \"Juyong Pass\"})\nCREATE (theGreatWall)-[:PROTECTS]->(juyongPass)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (jinshanling:Entity {name: \"Jinshanling\"})\nCREATE (theGreatWall)-[:INCLUDES]->(jinshanling)\n\nMATCH (mutianyu:Entity {name: \"Mutianyu\"}), (juyongPass:Entity {name: \"Juyong Pass\"}), (gubeikou:Entity {name: \"Gubeikou\"})\nCREATE (mutianyu)-[:CONNECTED_TO]->(juyongPass)\nCREATE (mutianyu)-[:CONNECTED_TO]->(gubeikou)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (jiaoshan:Entity {name: \"Jiaoshan\"})\nCREATE (theGreatWall)-[:INCLUDES]->(jiaoshan)\n\nMATCH (theGreatWall:Entity {name: \"The Great Wall of China\"}), (jiumenkou:Entity {name: \"Jiumenkou\"})\nCREATE (theGreatWall)-[:INCLUDES]->(jiumenkou)\n```\n\nThese queries create a knowledge graph with nodes representing entities mentioned in the text and relationships between them. The relationships are directional and indicate how the entities are related to each other. For example, the Great Wall of China \"protects against\" nomadic groups, \"was built by\" ancient Chinese states and Imperial China, and \"was visited by\" foreign merchants and visitors.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 28,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 24,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 24,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 93.59032607078552
  },
  {
    "url": "https://en.wikipedia.org/wiki/Octopus",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n```\n# Create Octopus as a node with properties\nCREATE (octopus:Entity {name: 'Octopus', type: 'Mollusc', order: 'Octopoda', species: '300', class: 'Cephalopoda', limbs: 8, body_shape: 'Soft', nervous_system: 'Complex', intelligence: 'High', habitat: 'Ocean', diet: 'Carnivore'})\n\n# Create relationships between Octopus and other entities\nCREATE (octopus)-[:HAS_RELATIONSHIP_WITH]->(Mollusc:Entity {name: 'Mollusc', type: 'Invertebrate'})\nCREATE (octopus)-[:HAS_RELATIONSHIP_WITH]->(Octopoda:Entity {name: 'Octopoda', type: 'Order'})\nCREATE (octopus)-[:HAS_RELATIONSHIP_WITH]->(Cephalopoda:Entity {name: 'Cephalopoda', type: 'Class', includes: ['Squids', 'Cuttlefish', 'Nautiloids']})\nCREATE (octopus)-[:HAS_RELATIONSHIP_WITH]->(Invertebrates:Entity {name: 'Invertebrates', type: 'Animals without backbone'})\n\n# Create relationships between Octopus and its characteristics\nCREATE (octopus)-[:HAS_PROPERTY]->(limbs:Property {name: 'Limbs', value: 8})\nCREATE (octopus)-[:HAS_PROPERTY]->(body_shape:Property {name: 'Body Shape', value: 'Soft'})\nCREATE (octopus)-[:HAS_PROPERTY]->(nervous_system:Property {name: 'Nervous System', value: 'Complex'})\nCREATE (octopus)-[:HAS_PROPERTY]->(intelligence:Property {name: 'Intelligence', value: 'High'})\nCREATE (octopus)-[:HAS_PROPERTY]->(habitat:Property {name: 'Habitat', value: 'Ocean'})\nCREATE (octopus)-[:HAS_PROPERTY]->(diet:Property {name: 'Diet', value: 'Carnivore'})\n\n# Create relationships between Octopus and its habitat\nCREATE (ocean:Entity {name: 'Ocean', type: 'Body of Water'})\nCREATE (octopus)-[:LIVES_IN]->(ocean)\nCREATE (coral_reefs:Entity {name: 'Coral Reefs', type: 'Ocean Habitat'})\nCREATE (pelagic_waters:Entity {name: 'Pelagic Waters', type: 'Ocean Habitat'})\nCREATE (seabed:Entity {nameMultiplier: 'Seabed', type: 'Ocean Habitat'})\nCREATE (intertidal_zone:Entity {name: 'Intertidal Zone', type: 'Ocean Habitat'})\nCREATE (abyssal_depths:Entity {name: 'Abyssal Depths', type: 'Ocean Habitat'})\nCREATE (octopus)-[:LIVES_IN]->(coral_reefs)\nCREATE (octopus)-[:LIVES_IN]->(pelagic_waters)\nCREATE (octopus)-[:LIVES_IN]->(seabed)\nCREATE (octopus)-[:LIVES_IN]->(intertidal_zone)\nCREATE (octopus)-[:LIVES_IN]->(abyssal_depths)\n\n# Create relationships between Octopus and its diet\nCREATE (carnivore:Entity {name: 'Carnivore', type: 'Feeding Behavior'})\nCREATE (octopus)-[:HAS_DIET]->(carnivore)\nCREATE (mollusks:Entity {name: 'Mollusks', type: 'Food Source'})\nCREATE (crustaceans:Entity {name: 'Crustaceans', type: 'Food Source'})\nCREATE (fish:Entity {name: 'Fish', type: 'Food Source'})\nCREATE (carnivore)-[:INCLUDES]->(mollusks)\nCREATE (carnivore)-[:INCLUDES]->(crustaceans)\nCREATE (carnivore)-[:INCLUDES]->(fish)\n\n# Create relationships between Octopus and its behavior\nCREATE (octopus)-[:HAS_BEHAVIOR]->(behavior:Behavior {name: 'Behavior', type: 'Defensive and Adaptive'})\nCREATE (behavior)-[:INCLUDES]->(ink_expulsion:Behavior {name: 'Ink Expulsion', purpose: 'Defense and Camouflage'})\nCREATE (behavior)-[:INCLUDES]->(camouflage:Behavior {name: 'Camouflage', purpose: 'Predator Avoidance'})\nCREATE (behavior)-[:INCLUDES]->(threat_displays:Behavior {name: 'Threat Displays', purpose: 'Deterring Predators'})\nCREATE (behavior)-[:INCLUDES]->(quick_jetting:Behavior {name: 'Quick Jetting', purpose: 'Escape'})\nCREATE (behavior)-[:INCLUDES]->(deceit:Behavior {name: 'Deceit', purpose: 'Tricking Predators'})\n```\n\nThis set of Cypher queries creates a knowledge graph with an `Octopus` node connected to various entities, properties, habitats, diet, and behavior. The relationships between the `Octopus` and other entities are established using the `:HAS_RELATIONSHIP_WITH` relationship type. The characteristics of the `Octopus` are represented as properties connected to the `Octopus` node using the `:HAS_PROPERTY` relationship type. The habitats of the `Octopus` are connected using the `:LIVES_IN` relationship type, and the diet and behavior are connected using the `:HAS_DIET` and `:HAS_BEHAVIOR` relationship types, respectively.",
    "summary": {
      "Syntax Errors": 0,
      "Correctly Created Nodes": 25,
      "Incorrectly Created Nodes": 0,
      "Correctly Created Relationships": 21,
      "Incorrectly Created Relationships": 0,
      "Correctly Labelled Relationships": 21,
      "Incorrectly Labelled Relationships": 0
    },
    "execution_time_in_seconds": 111.47277188301086
  },
  {
    "url": "https://en.wikipedia.org/wiki/Serbia",
    "queries": "Here are the Cypher queries to create a knowledge graph based on the provided text:\n\n```\n# Create a node for each country/region mentioned in the text\nCREATE (Serbia:Country {name: 'Serbia', officialName: 'Republic of Serbia'})\nCREATE (Hungary:Country {name: 'Hungary'})\nCREATE (Romania:Country {name: 'Romania'})\nCREATE (Bulgaria:Country {name: 'Bulgaria'})\nCREATE (NorthMacedonia:Country {name: 'North Macedonia'})\nCREATE (Croatia:Country {name: 'Croatia'})\nCREATE (BosniaAndHerzegovina:Country {name: 'Bosnia and Herzegovina'})\nCREATE (Montenegro:Country {name: 'Montenegro'})\nCREATE (Albania:Country {name: 'Albania'})\nCREATE (Kosovo:Region {name: 'Kosovo'})\nCREATE (Vojvodina:Region {name: 'Vojvodina'})\nCREATE (PannonianPlain:Region {name: 'Pannonian Plain'})\nCREATE (SoutheastEurope:Region {name: 'Southeast Europe'})\nCREATE (CentralEurope:Region {name: 'Central Europe'})\nCREATE (Balkans:Region {name: 'Balkans'})\nCREATE (Belgrade:City {name: 'Belgrade'})\nCREATE (Nis:City {name: 'Nis'})\nCREATE (Francais:Country {name: 'Francais'})\nCREATE (HabsburgEmpire:Empire {name: 'Habsburg Empire'})\nCREATE (OttomanEmpire:Empire {name: 'Ottoman Empire'})\nCREATE (ByzantineEmpire:Empire {name: 'Byzantine Empire'})\nCREATE (Franks:Empire {name: 'Franks'})\nCREATE (HungaryKingdom:Kingdom {name: 'Hungary'})\nCREATE (Austria:Country {name: 'Austria'})\nCREATE (Turkey:Country {name: 'Turkey'})\nCREATE (Russia:Country {name: 'Russia'})\nCREATE (Italy:Country {name: 'Italy'})\nCREATE (Germany:Country {name: 'Germany'})\nCREATE (Caucasus:Region {name: 'Caucasus'})\nCREATE (Lusatia:Region {name: 'Lusatia'})\nCREATE (WhiteSerbia:Region {name: 'White Serbia'})\nCREATE (DinaricAlps:MountainRange {name: 'Dinaric Alps'})\nCREATE (SavaRiver:River {name: 'Sava River'})\nCREATE (Srem:Region {name: 'Srem'})\nCREATE (Backa:Region {name: 'Backa'})\nCREATE (Banat:Region {name: 'Banat'})\nCREATE (Anatolia:Region {name: 'Anatolia'})\nCREATE (MoesiaSuperior:Region {name: 'Moesia Superior'})\nCREATE (Dacia:Region {name: 'Dacia'})\nCREATE (Praevalitana:Region {name: 'Praevalitana'})\nCREATE (Dalmatia:Region {name: 'Dalmatia'})\nCREATE (Macedonia:Region {name: 'Macedonia'})\nCREATE (Constantinople:City {name: 'Constantinople'})\nCREATE (HabsburgMonarchy:Monarchy {name: 'Habsburg Monarchy'})\nCREATE (Karlovci:City {name: 'Karlovci'})\nCREATE (Po\u017earevac:City {name: 'Po\u017earevac'})\nCREATE (Syrmia:Region {name: 'Syrmia'})\nCREATE (Bosnia:Region {name: 'Bosnia'})\nCREATE (Herzegovina:Region {name: 'Herzegovina'})\nCREATE (Bucharest:City {name: 'Bucharest'})\nCREATE (Bulgaria:Country {name: 'Bulgaria'})\nCREATE (Adrianople:City {name: 'Adrianople'})\nCREATE (Corfu:Island {name: 'Corfu'})\nCREATE (Greece:Country {name: 'Greece'})\nCREATE (France:Country {name: 'France'})\nCREATE (Italy:Country {name: 'Italy'})\nCREATE (Vienna:City {name: 'Vienna'})\nCREATE (AustriaHungary:Empire {name: 'Austria-Hungary'})\nCREATE (Sarajevo:City {name: 'Sarajevo'})\nCREATE (Berlin:City {name: 'Berlin'})\nCREATE (RussiaEmpire:Empire {name: 'Russia Empire'})\nCREATE (TurkeyEmpire:Empire {name: 'Turkey Empire'})\nCREATE (BulgariaEmpire:Empire {name: 'Bulgaria Empire'})\nCREATE (BulgariaCountry:Country {name: 'Bulgaria'})\nCREATE (Raska:Region {name: 'Raska'})\nCREATE (VardarianMacedonia:Region {name: 'Vardarian Macedonia'})\nCREATE (AustriaCity:City {name: 'Austria'})\nCREATE (Vienna:City {name: 'Vienna'})\nCREATE (Athens:City {name: 'Athens'})\nCREATE (Skopje:City {name: 'Skopje'})\nCREATE (Podgorica:City {name: 'Podgorica'})\nCREATE (Yugoslavia:Country {name: 'Yugoslavia'})\nCREATE (CroatiaCountry:Country {name: 'Croatia'})\nCREATE (Slovenia:Country {name: 'Slovenia'})\nCREATE (VojvodinaAutonomous:Region {name: 'Vojvodina Autonomous'})\nCREATE (BanatTemeschwar:Region {name: 'Banat Temeschwar'})\nCREATE (SerbiaKingdom:Kingdom {name: 'Serbia'})\nCREATE (MontenegroCountry:Country {name: 'Montenegro'})\nCREATE (BelgradeCity:City {name: 'Belgrade'})\nCREATE (AthensCity:City {name: 'Athens'})\nCREATE (SkopjeCity:City {name\u561b: 'Skopje'})\nCREATE (PodgoricaCity:City {name: 'Podgorica'})\nCREATE (SerbiaCountry:Country {name: 'Serbia'})\nCREATE (CroatiaKingdom:Kingdom {name: 'Croatia'})\nCREATE (SloveniaKingdom:Kingdom {name: 'Slovenia'})\nCREATE (YugoslaviaCountry:Country {name: 'Yugoslavia'})\nCREATE (AthensGreece:City {name: 'Athens, Greece'})\nCREATE (SkopjeMacedonia:City {name: 'Skopje, Macedonia'})\nCREATE (PodgoricaMontenegro:City {name: 'Podgorica, Montenegro'})\nCREATE (SerbiaBelgrade:City {name: 'Serbia, Belgrade'})\n\n# Create relationships between countries/regions and their neighbors\nMATCH (s:Country {name: 'Serbia'}) MATCH (h:Country {name: 'Hungary'}) CREATE (s)-[:BORDERS]->(h)\nMATCH (s:Country {name: 'Serbia'}) MATCH (r:Country {name: 'Romania'}) CREATE (s)-[:BORDERS]->(r)\nMATCH (s:Country {name: 'Serbia'}) MATCH (b:Country {name: 'Bulgaria'}) CREATE (s)-[:BORDERS]->(b)\nMATCH (s:Country {name: 'Serbia'}) MATCH (nm:Country {name: 'North Macedonia'}) CREATE (s)-[:BORDERS]->(nm)\nMATCH (s:Country {name: 'Serbia'}) MATCH (c:Country {name: 'Croatia'}) CREATE (s)-[:BORDERS]->(c)\nMATCH (s:Country {name: 'Serbia'}) MATCH (bh:Country {name: 'Bosnia and Herzegovina'}) CREATE (s)-[:BORDERS]->(bh)\nMATCH (s:Country {name: 'Serbia'}) MATCH (m:Country {name: 'Montenegro'}) CREATE (s)-[:BORDERS]->(m)\nMATCH (s:Country {name: 'Serbia'}) MATCH (a:Country {name: 'Albania'}) CREATE (s)-[:CLAIMS_BORDER_THROUGH]->(a)-[:HAS_DISPUTED_TERRITORY]->(k:Region {name: 'Kosovo'})\nMATCH (s:Country {name: 'Serbia'}) MATCH (v:Region {name: 'Vojvodina'}) CREATE (s)-[:INCLUDES]->(v)\nMATCH (s:Country {name: 'Serbia'}) MATCH (pp:Region {name: 'Pannonian Plain'}) CREATE (s)-[:LOCATED_IN]->(pp)\nMATCH (s:Country {name: 'Serbia'}) MATCH (se:Region {name: 'Southeast Europe'}) CREATE (s)-[:LOCATED_AT_CROSSROADS_OF]->(se)\nMATCH (s:Country {name: 'Serbia'}) MATCH (ce:Region {name: 'Central Europe'}) CREATE (s)-[:LOCATED_AT_CROSSROADS_OF]->(ce)\nMATCH (s:Country {name: 'Serbia'}) MATCH (b:Region {name: 'Balkans'}) CREATE (s)-[:LOCATED_IN]->(b)\nMATCH (s:Country {name: 'Serbia'}) MATCH (b:City {name: 'Belgrade'}) CREATE (s)-[:CAPITAL_CITY]->(b)\n\n# Create relationships between countries/regions and historical events/periods\nMATCH (s:Country {name: 'Serbia'}) MATCH (f:Region {name: 'Francais'}) MATCH (b:Region {name: 'Byzantine Empire'}) MATCH (h:Empire {name: 'Habsburg Empire'}) MATCH (hu:Kingdom {name: 'Hungary'}) MATCH (o:Empire {name: 'Ottoman Empire'}) MATCH (fw:Integer {value: 6}) MATCH (sw:Integer {value: 16}) MATCH (ew:Integer {value: 19}) MATCH (mw:Integer {value: 20}) MATCH (lw:Integer {value: 18}) MATCH (hw:Integer {value: 19}) MATCH (uw:Integer {value: 20}) MATCH (tw:Integer {value: 16}) MATCH (hw2:Integer {value: 16}) MATCH (mw2:Integer {value: 17}) MATCH (lw2:Integer {name: 19}) MATCH (ew2:Integer {value: 19}) MATCH (sw2:Integer {value: 15}) MATCH (ew3:Integer {value: 17}) MATCH (lw3:Integer {value: 17}) MATCH (mw3:Integer {value: 19}) MATCH (mw4:Integer {value: 19}) MATCH (ew4:Integer {value: 20}) MATCH (lw4:Integer {value: 20}) MATCH (sw4:Integer {value: 18}) MATCH (ew5:Integer {value: 18}) MATCH (lw5:Integer {value: 19}) MATCH (mw5:Integer {value: 20}) MATCH (ew6:Integer {value: 20}) MATCH (lw6:Integer {value: 20}) MATCH (sw6:Integer {value: 19}) MATCH (ew7:Integer {value: 20}) MATCH (lw7:Integer {value: 20}) MATCH (mw7:Integer {value: 21}) MATCH (ew8:Integer {value: 21}) MATCH (lw8:Integer {value: 21}) MATCH (sw8:Integer {value: 19}) MATCH (ew9:Integer {value: 20}) MATCH (lw9:Integer {value: 20}) MATCH (mw9:Integer {value: 21}) MATCH (ew10:Integer {value: 21}) MATCH (lw10:Integer {value: 21}) MATCH (sw10:Integer {value: 19}) MATCH (ew11:Integer {value: 20}) MATCH (lw11:Integer {value: 20}) MATCH (mw11:Integer {value: 21}) MATCH (ew12:Integer {value: 21}) MATCH (lw12:Integer {value: 21}) MATCH (sw12:Integer {value: 19}) MATCH (ew13:Integer {value: 20}) MATCH (lw13:Integer {value: 20}) MATCH (mw13:Integer {value: 21}) MATCH (ew14:Integer {value: 21}) MATCH (lw14:Integer {value: 21}) MATCH (sw14:Integer {value: 19}) MATCH (ew15:Integer {value: 20}) MATCH (lw15:Integer {value: 20}) MATCH (mw15:Integer {value: 21}) MATCH (ew16:Integer {value: 21}) MATCH (lw16:Integer {value: 21}) MATCH (sw16:Integer {value: 19}) MATCH (ew17:Integer {value: 20}) MATCH (lw17:Integer {value: 20}) MATCH (mw17:Integer {value: 21}) MATCH (ew18:Integer {value: 21}) MATCH (lw18:Integer {value: 21}) MATCH (sw18:Integer {value: 19}) MATCH (ew19:Integer {value: 20}) MATCH (lw19:Integer {value: 20}) MATCH (mw19:Integer {value: 21}) MATCH (ew20:Integer {value: 21}) MATCH (lw20:Integer {value: 21}) MATCH (sw20:Integer {value: 19}) MATCH (ew21:Integer {value: 20}) MATCH (lw21:Integer {value: 20}) MATCH (mw21:Integer {value: 21}) MATCH (ew22:Integer {value: 21}) MATCH (lw22:Integer {value: 21}) MATCH (sw22:Integer {value: 19}) MATCH (ew23:Integer {value: 20}) MATCH (lw23:Integer {value: 20}) MATCH (mw23:Integer {value: 21}) MATCH (ew24:Integer {value: 21}) MATCH (lw24:Integer {value: 21}) MATCH (sw24:Integer {value: 19}) MATCH (ew25:Integer {value: 20}) MATCH (lw25:Integer {value: 20}) MATCH (mw25:Integer {value: 21}) MATCH (ew26:Integer {value: 21}) MATCH (lw26:Integer {value;)",
    "summary": {
      "Syntax Errors": 2,
      "Correctly Created Nodes": 75,
      "Incorrectly Created Nodes": 5,
      "Correctly Created Relationships": 9,
      "Incorrectly Created Relationships": 1,
      "Correctly Labelled Relationships": 9,
      "Incorrectly Labelled Relationships": 1
    },
    "execution_time_in_seconds": 118.25428771972656
  }
]